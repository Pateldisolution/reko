void fn0200(word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r5
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved: sp
fn0200_entry:
	word16 sp_1 = fp
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0200:
	PRINT(0x0F9A)
	word16 r2_29 = 0x0002
	word16 r3_28 = 0x0000
// DataOut: pc r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0000 r3:0x0002 r0:0x0F9A r1:0x0F9A

l020C:
	word16 r0_14
	branch TTYIN(out r0_14) l020C
// DataOut: pc r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0002 r3:0x0000 r0:0x0F9A r1:0x0F9A

l0210:
// DataOut: pc r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0002 r3:0x0000 r0:0x0F9A r1:0x0F9A

l0212:
	word16 r0_19
	branch TTYIN(out r0_19) l0212
// DataOut: pc r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0002 r3:0x0000 r0:0x0F9A r1:0x0F9A

l0216:
	word16 r0_21
	branch TTYIN(out r0_21) l0216
// DataOut: pc r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0002 r3:0x0000 r0:0x0F9A r1:0x0F9A

l021A:
	branch 0xF0A8 == 0x0000 l0236
// DataOut: pc r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0002 r3:0x0000 r0:0x0F9A r1:0x0F9A

l0236:
	PRINT(0x0FDA)
// DataOut: pc r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0002 r3:0x0000 r0:0x0F9A r1:0x0F9A

l023C:
	word16 r0_398
	branch TTYIN(out r0_398) l023C
// DataOut: pc r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0002 r3:0x0000 r0:0x0FDA r1:0x0F9A

l0220:
	r2_29 = 0x0001
	r3_28 = 0x0001
	branch 0xF0AF == 0x0000 l0240
// DataOut: pc r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0002 r3:0x0000 r0:0x0F9A r1:0x0F9A

l022A:
	r2_29 = 0x0000
	r3_28 = 0x0002
	branch 0xF0AB == 0x0000 l0240
// DataOut: pc r2 r3 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0001 r3:0x0001 r0:0x0F9A r1:0x0F9A

l0240:
	Mem30[0x0F06:word16] = r2_29
	Mem31[0x0F08:word16] = r3_28
	Mem33[0x0024:word16] = Mem31[0x0024:word16] | 0x1040
	Mem35[0x1166:word16] = 0x1100
	Mem36[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	Mem38[0x0AB4:word16] = Mem36[0x1170:word16]
	Mem39[0x0B5E:word16] = 0x0000
	Mem42[0x1166:word16] = 0x0101
	Mem43[0x1168:word16] = 0x115E
	FnSubfn(0x1166)
	branch false l029E
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r0:<invalid> r1:0x0F9A

l027A:
	Mem376[0x1166:word16] = 0x0801
	Mem377[0x1168:word16] = 0x0000
	Mem378[0x116A:word16] = 0x0B5E
	Mem379[0x116C:word16] = 0x0001
	Mem380[0x116E:word16] = 0x0000
	FnSubfn(0x1166)
	__syscall(0x88FC)
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r0:0x1166 r1:0x0F9A

l029E:
	fn0BD6()
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r3:<invalid> r0:<invalid> r1:0x0F9A

l02A2:
	word16 r4_117 = fn0C20(r5, pc, out r5)
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r4:<invalid>

l02A6:
	word16 r0_86
	branch TTYIN(out r0_86) l02FC
// DataOut: pc r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l02AA:
	branch Mem43[0x0EFA:word16] != 0x0000 l02FC
// DataOut: pc r0 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l02FC:
	Mem109[0x1166:word16] = 0x1100
	Mem110[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	word16 r0_112 = Mem110[0x1170:word16] - Mem110[0x1172:word16]
	branch r0_112 < 0x0000 l0388
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0388:
	branch r4_117 == 0x1178 l02A6
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0316:
	Mem150[0x1174:word16] = Mem110[0x1170:word16]
	Mem152[pc + 0x0E52:word16] = Mem150[pc + 0x0E52:word16] + 0x0001
	word16 v34_153 = ~Mem152[0x0EF4:word16]
	Mem154[0x0EF6:word16] = v34_153
	branch v34_153 != 0x0000 l032C
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0328:
	Mem333[0x0EF8:word16] = ~Mem154[0x0EF6:word16]
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l032C:
	branch Mem154[0x0EFA:word16] == 0x0000 l0352
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0332:
	word16 v40_313 = Mem154[0x0EFA:word16] - 0x0001
	Mem314[0x0EFC:word16] = v40_313
	NZV = cond(v40_313)
	branch v40_313 != 0x0000 l0370
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0338:
	branch Mem314[0x0F18:word16] == 0x0000 l03AE
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l033E:
	word16 r5_323
	word16 r4_324 = fn0486(r4_117, r5, bLoc02, out r5_323)
	Mem325[0x0F16:word16] = 0x0002
	r4_117 = fn0470(r4_324, r5_323, bLoc02)
	Mem329[0x0F18:word16] = 0x0078
// DataOut: pc r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0352:
	branch Mem154[0x0EF8:word16] != 0x0000 l036C
// DataOut: pc r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0358:
	branch Mem154[0x0F14:word16] <=u 0x0008 l0370
// DataOut: pc r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0360:
	word16 v64_307 = Mem154[0x0F16:word16] - 0x0001
	Mem308[0x0F18:word16] = v64_307
	NZV = cond(v64_307)
	branch v64_307 > 0x0000 l0370
// DataOut: pc r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0366:
	Mem310[0x0EFA:word16] = 0x0456
// DataOut: pc r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l036C:
	word16 r2_289
	byte NZ_290
	bool V_291
	word16 r3_292
	bool C_293
	bool N_294
	bool Z_295
	word16 r0_296
	word16 r1_297
	byte NZVC_298
	byte ZC_302
	word16 r5_303
	call Mem154[0x0EFA:word16] (retsize: 2; depth: 2 FPU: 2;)
		uses: bLoc02,C_286,N_114,NZ_284,NZV_281,NZVC_113,pc_75,r0_112,r1_78,r2_84,r3_81,r4_280,r5_279,sp_85,V_287,Z_285,ZC_73
		defs: C_293,N_294,NZ_290,NZV_299,NZVC_298,pc_300,r0_296,r1_297,r2_289,r3_292,r4_301,r5_303,sp_288,V_291,Z_295,ZC_302
// DataOut: pc r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0370:
	word16 r5_248
	word16 r4_249 = fn04A0(r4_117, pc, out r5_248)
	word16 r5_251
	word16 r4_252 = fn07A6(fn06D6(r4_249, r5_248, pc), pc, out r5_251)
	r4_117 = fn0998(r4_252, r5_251, pc, out r5)
	branch r4_117 == 0x1178 l0394
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0394:
	branch Mem154[0x0F12:word16] != 0x0000 l02A6
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r4:<invalid>

l039A:
	branch Mem154[0x0F02:word16] != 0x0000 l0392
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r4:<invalid>

l03A0:
	branch DPB(NZV, false, 0) l03AE
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r4:<invalid>

l03AE:
	word16 v50_173 = Mem154[0x0B5A:word16] - Mem154[0x0B5A:word16]
	branch v50_173 <=u 0x0000 l040A
// DataOut: r4 r5
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l03B6:
	Mem208[0x0B5E:word16] = Mem154[0x0B5A:word16]
	Mem210[0x1166:word16] = 0x0101
	Mem211[0x1168:word16] = 0x115E
	FnSubfn(0x1166)
	branch v50_173 >=u 0x0000 l03E6
// DataOut: r4 r5
// DataOut (flags): C
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l03CE:
	Mem230[0x1166:word16] = 0x0201
	Mem231[0x1168:word16] = 0x115E
	Mem232[0x116A:word16] = 0x0001
	FnSubfn(0x1166)
	branch v50_173 <u 0x0000 l040A
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:0x1166 r1:<invalid> r4:<invalid> r5:<invalid>

l03E6:
	Mem220[0x1166:word16] = 0x0901
	Mem221[0x1168:word16] = 0x0000
	Mem222[0x116A:word16] = 0x0B5E
	Mem223[0x116C:word16] = 0x0001
	Mem224[0x116E:word16] = 0x0000
	FnSubfn(0x1166)
	__syscall(0x88FC)
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:0x1166 r1:<invalid> r4:<invalid> r5:<invalid>

l040A:
	word16 r5_189
	word16 r4_190 = fn0486(r4_117, r5, bLoc02, out r5_189)
	word16 sp_191 = sp_1 - 0x0001
	Mem192[sp_191:byte] = 0x01
	Mem193[sp_191 + 0x0001:byte] = 0x18
	word16 r4_196
	word16 r5_197
	fn0AB6(r4_190, r5_189, out r4_196, out r5_197)
	Mem200[sp_191 - 2:word16] = r5_197
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l041C_thunk_fn0AE8:
	word16 r0_203
	word16 r4_204
	word16 r5_205
	fn0AE8(r4_196, 0x0420, wArg00, out r0_203, out r4_204, out r5_205)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:0420 r4:<invalid>

l03A6:
	word16 v72_276 = Mem154[0x0F18:word16] + 0x0001
	Mem277[0x0F1A:word16] = v72_276
	NZV = cond(v72_276)
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r4:<invalid>

l0386:
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r4:<invalid>

l038E:
	r4_117 = fn0AF6(r4_117, r5, out r5)
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0392:
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l02B0:
	Mem346[0x02CB:byte] = r0_86
	word16 r1_347 = 0x02C6
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l02B8:
	r1_347 = r1_400 + 0x0002
	word16 r1_400 = r1_347
	branch Mem346[r1_400:word16] - r0_86 != 0x0000 l02B8
// DataOut: r0 r1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l02BC:
	word16 r1_357 = r1_347 - 0x02C7 << 1
	word16 sp_359
	word16 r2_360
	byte NZ_361
	bool V_362
	word16 r3_363
	bool C_364
	bool N_365
	bool Z_366
	word16 r0_367
	word16 r1_368
	byte NZVC_369
	byte NZV_370
	word16 pc_371
	word16 r4_372
	byte ZC_373
	word16 r5_374
	call Mem346[r1_357 + 0x02CC:ptr16] (retsize: 2; depth: 2 FPU: 2;)
		uses: bLoc02,C_344,N_80,NZ_348,NZV_76,NZVC_358,pc_75,r0_86,r1_357,r2_84,r3_81,r4_74,r5_72,sp_85,V_349,Z_355,ZC_73
		defs: C_364,N_365,NZ_361,NZV_370,NZVC_369,pc_371,r0_367,r1_368,r2_360,r3_363,r4_372,r5_374,sp_359,V_362,Z_366,ZC_373
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

fn0200_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r1:<invalid> r4:<invalid> r5:<invalid>

l0234:
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0000 r3:0x0002 r0:0x0F9A r1:0x0F9A



word16 fn0470(word16 r4, word16 r5, byte bArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5
// LiveOut: r4
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0470_entry:
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0470:
	word16 r4_11
	word16 r5_12
	fn0AB6(r4, r5, out r4_11, out r5_12)
	Mem15[fp - 0x0003:word16] = r5_12
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l047E_thunk_fn0AE8:
	word16 r0_18
	word16 r4_19
	word16 r5_20
	fn0AE8(r4_11, 0x0482, wArg00, out r0_18, out r4_19, out r5_20)
	return r4_19
// DataOut: pc r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:0482 r0:<invalid> r4:<invalid> -3(fp):r5 -1(fp):<invalid> 0(fp):0x18

fn0470_exit:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> -3(fp):r5 -1(fp):<invalid> 0(fp):0x18



word16 fn0486(word16 r4, word16 r5, byte bArg00, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5
// LiveOut: r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0486_entry:
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0486:
	word16 r4_11
	word16 r5_12
	fn0AB6(r4, r5, out r4_11, out r5_12)
	word16 r4_14
	word16 r5_15
	fn0A74(r4_11, r5_12, out r4_14, out r5_15)
	return r4_14
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0486_exit:
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):0x18



word16 fn04A0(word16 r4, word16 pc, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r4
// LiveOut: r4 r5
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved: sp
fn04A0_entry:
	*r5Out = r5
	word16 sp_1 = fp
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l04A0:
	word16 v5_4 = Mem0[pc + 0x0A52:word16] & Mem0[0x0EF4:word16]
	Mem5[pc + 0x0A52:word16] = v5_4
	branch v5_4 == 0x0000 l04AA
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l04AA:
	word16 r5_106 = Mem5[0x0F04:word16]
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l04AE:
	word16 r3_128 = (int16) Mem5[r5_106 + 0x0EF0:byte]
	branch r3_128 == 0x0000 l0588
// DataOut: pc r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l04B4:
	Mem76[0x0F0C:word16] = r3_128
	word16 r0_77 = (int16) Mem76[r5_106 + 0x0EF3:byte]
	sp_1 = sp_1 - 0x0002
	Mem79[sp_1:word16] = r3_128
	Mem80[sp_1 + 0x0001:byte] = r0_77
	word16 r4_83
	word16 r0_85 = fn0AB6(r4, r5_106, out r4_83, out r5_106)
	Mem86[r4_83:byte] = 0x20
	r4 = r4_83 + 0x0001
	word16 r0_120 = r0_85 - 0x0001
	branch DPB(NZV, false, 0) l04D8
// DataOut: pc r0 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l04D2:
	branch r0_85 - 0x0001 >=u 0x0004 l0584
// DataOut: pc r0 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l04D8:
	branch r0_85 - 0x0001 == 0x0002 l0584
// DataOut: pc r0 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l04DE:
	Mem116[r5_106 + 0x0EF3:byte] = r0_85 - 0x0001
	branch r0_85 - 0x0001 >u 0x0016 l04EE
// DataOut: pc r0 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l04E8:
	branch fn067C(r0_85 - 0x0001, r3_128, r4_83 + 0x0001, r5_106, out r0_120, out r4, out r5_106) l0584
// DataOut: pc r0 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l04EE:
	word16 r1_124 = r0_120 + 0x0001
	branch r0_120 != 0x0003 l0504
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l04F8:
	branch DPB(NZV, false, 0) l0504
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l04FE:
	branch fn05D4(r3_128, r4, r5_106, pc, bLoc02, out r0_120, out r3_128, out r4, out r5_106) l0584
// DataOut: pc r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0504:
	sp_1 = sp_1 + 0x0002
	word16 r0_136
	branch fn064A(r0_120, r1_124, r3_128, r4, r5_106, out r0_136, out r4, out r5_106) l0584
// DataOut: pc r0 r1 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l050A:
	word16 r2_141 = 0x0000
// DataOut: pc r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l050C:
	branch Mem116[r2_141 + 0x0DB8:word16] - r0_136 == 0x0000 l0524
// DataOut: pc r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0512:
	word16 v38_299 = Mem116[r2_141 + 0x0DB8:word16] - r1_124
	NV = cond(v38_299) (alias)
	branch v38_299 <u 0x0000 l05B4
// DataOut: pc r0 r1 r2 r4 r5 sp
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0518:
	branch v38_299 == 0x0000 l0524
// DataOut: pc r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0524:
	word16 r0_188 = Mem116[r2_141 + 0x0DAC:word16]
	word16 r1_189 = 0x0008
// DataOut: pc r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l052C:
	word16 r3_201 = Mem116[r0_188:word16]
	NV = DPB(NV, false, 0) (alias)
	branch r3_201 == 0x0000 l05AE
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): NV
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0530:
	branch NV l058A
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l058A:
	word16 sp_274 = sp_1 - 0x0001
	Mem275[sp_274:byte] = Mem116[r0_188:byte]
	Mem277[sp_274 + 0x0001:byte] = Mem275[r2_141 + 0x0DB8:byte]
	word16 r4_280
	word16 r5_281
	fn0AB6(r4, r5_106, out r4_280, out r5_281)
	word16 r4_283
	word16 r5_284
	Mem286[fn0A74(r4_280, r5_281, out r4_283, out r5_284):word16] = 0x0000
	Mem291[sp_274 - 0x0002:word16] = (int16) Mem286[r5_284 + 0x0EF0:byte] + 0x0001
	Mem293[sp_274 - 0x0001:byte] = Mem291[r5_284 + 0x0EF3:byte]
	sp_1 = sp_274 - 0x0002
	r0_188 = fn0AB6(r4_283, r5_284, out r4, out r5_106)
// DataOut: pc r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0532:
	branch r3_201 + 0x0004 - Mem116[r5_106 + 0x0EF0:word16] >u 0x0000 l05AE
// DataOut: pc r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l05AE:
	r0_188 = r0_188 + 0x0002
	r1_189 = r1_189 - 0x0001
	branch r1_189 != 0x0000 l052C
// DataOut: pc r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l053C:
	branch Mem116[r0_188:word16] - Mem116[r5_106 + 0x0EF0:word16] <u 0x0000 l05B4
// DataOut: pc r0 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0542:
	word16 r1_234 = Mem116[r0_188:word16]
	Mem236[r0_188:word16] = Mem116[r0_188:word16] | 0x8000
	word16 r0_237 = r0_188 - Mem236[r2_141 + 0x0DAC:word16]
	Mem239[0x0F0A:word16] = r0_237
	Mem241[r0_237 + 0x0DC4:word16] = Mem239[r0_237 + 0x0DC4:word16] - 0x0001
	sp_1 = sp_1 - 0x0002
	Mem243[sp_1:word16] = r1_234
	Mem245[sp_1 + 0x0001:byte] = Mem243[r2_141 + 0x0DB8:byte]
	word16 r4_248
	word16 r5_249
	fn0AB6(r4, r5_106, out r4_248, out r5_249)
	word16 r5_251
	word16 r4_252 = fn0A7C(r4_248, r5_249, out r5_251)
	Mem254[pc + 0x05F2:word16] = Mem245[pc + 0x05F2:word16] + Mem245[r2_141 + 0x0DD4:word16]
	r4 = fn0B1A(r4_252, r5_251, bLoc02, out r5_106)
	word16 v65_259 = Mem254[0x0F12:word16] - 0x0001
	Mem260[0x0F14:word16] = v65_259
	byte NZV_261 = cond(v65_259)
	branch v65_259 > 0x0000 l0584
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0574:
	branch DPB(NZV_261, false, 0) l0584
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:0x0005 r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l057A:
	Mem268[0x0EFA:word16] = 0x0000
	Mem270[0x0EFC:word16] = 0x0005
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:0x0005 r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0584:
	Mem107[r5_106 + 0x0EF0:byte] = 0x00
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0588:
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l05CA:
	r5_106 = r5_106 - 0x0001
	*r5Out = r5_106
	NZV = cond(r5_106)
	NV = NZV (alias)
	branch r5_106 < 0x0000 l05D2
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l05D2:
	return r4
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l05CE:
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l051A:
	r2_141 = r2_141 + 0x0002
	branch r2_141 >= 0x000A l050C
// DataOut: pc r0 r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0522:
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l05B4:
	Mem174[sp_1 - 2:word16] = r5_106
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l05B4_thunk_fn0AE8:
	word16 r0_177
	word16 r4_178
	word16 r5_179
	fn0AE8(r4, 0x05B8, wArg00, out r0_177, out r4_178, out r5_179)
	return r4_178
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:05B8 r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l04A8:
	return r4
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

fn04A0_exit:
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> r2:<invalid> -2(fp):<invalid> -1(fp):<invalid>



bool fn05D4(word16 r3, word16 r4, word16 r5, word16 pc, byte bArg00, ptr16 & r0Out, ptr16 & r3Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r3 r4 r5
// LiveOut: Z r0 r3 r4 r5
// Trashed: NZVC r0 r3 r4 r5 sp
// Preserved: sp
fn05D4_entry:
	*r3Out = r3
	*r0Out = r0
	*r4Out = r4
	*r5Out = r5
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l05D4:
	word16 v11_10 = 0x0004 - (r3 - Mem0[0x0F02:word16])
	bool Z_15 = (bool) cond(v11_10)
	branch v11_10 >u 0x0000 l0648
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0648:
	return Z_15
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp -2(fp):<invalid>

l05E0:
	word16 r4_44
	word16 r5_45
	fn0AB6(r4, r5, out r4_44, out r5_45)
	word16 r5_47
	word16 r4_48 = fn0A7C(r4_44, r5_45, out r5_47)
	fn0A94()
	word16 r3_52 = __rol(0x0000, 0x0000)
	word16 r3_54 = __rol(r3_52, r3_52)
	word16 r0_56 = Mem0[(r3_54 << 1) + 0x0F2A:word16]
	word16 v23_58 = Mem0[pc + 0x090A:word16] >> 1
	Mem59[pc + 0x090A:word16] = v23_58
	word16 r3_55
	*r3Out = r3_54 << 1
	branch v23_58 <u 0x0000 l060E
// DataOut: pc r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp -2(fp):<invalid>

l060A:
	r0_56 = r0_56 + 0x00C8
// DataOut: pc r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r5:<invalid> -2(fp):<invalid> -1(fp):<invalid> 0(fp):r0

l060E:
	Mem64[pc + 0x054A:word16] = Mem59[pc + 0x054A:word16] + r0_56
	Mem68[fp - 0x0002:byte] = Mem64[0x0F02:byte]
	Mem69[fp - 0x0001:byte] = 0x04
	word16 r4_72
	word16 r5_73
	fn0AB6(r4_48, r5_47, out r4_72, out r5_73)
	Mem76[fp - 0x0004:word16] = r5_73
// DataOut: pc r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r4:<invalid> r5:<invalid> -2(fp):<invalid> -1(fp):<invalid> 0(fp):r0

l0620_thunk_fn0AE8:
	word16 r0_79
	word16 r4_80
	word16 r5_81
	return fn0AE8(r4_72, 0x0624, wArg00, out r0_79, out r4_80, out r5_81)
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r5:0624 r4:<invalid> -4(fp):r5 -2(fp):<invalid> -1(fp):<invalid> 0(fp):r0

fn05D4_exit:
// DataOut: r0 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> -4(fp):r5 -2(fp):<invalid> -1(fp):<invalid> 0(fp):r0



bool fn064A(word16 r0, word16 r1, word16 r3, word16 r4, word16 r5, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1 r3 r4 r5
// LiveOut: Z r0 r4 r5
// Trashed: NZVC r0 r2 r4 r5 sp
// Preserved: sp
fn064A_entry:
	*r0Out = r0
	*r4Out = r4
	*r5Out = r5
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l064A:
	word16 r2_11 = Mem0[0x0F06:word16]
// DataOut: pc r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l064E:
	bool Z_43
	branch Mem0[r2_11 + 0x0EE6:word16] - r3 != 0x0000 l0676
// DataOut: pc r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>
// LocalsOut: fp(16)

l0654:
	branch Mem0[r2_11 + 0x0EEC:byte] < 0x00 l0676
// DataOut: pc r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>
// LocalsOut: fp(16)

l065A:
	branch Mem0[r2_11 + 0x0EE9:word16] - r1 == 0x0000 l0670
// DataOut: pc r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>
// LocalsOut: fp(16)

l0670:
	Mem83[r2_11 + 0x0EE6:byte] = 0x00
	Z_43 = true
// DataOut: pc r0 r1 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid>

l0660:
	branch Mem0[r2_11 + 0x0EE9:word16] - r0 != 0x0000 l0676
// DataOut: pc r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>
// LocalsOut: fp(16)

l0676:
	r2_11 = r2_11 - 0x0001
	Z_43 = (bool) cond(r2_11) (alias)
	branch r2_11 >= 0x0000 l064E
// DataOut: pc r0 r1 r2 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid>
// LocalsOut: fp(16)

l067A:
	return Z_43
// DataOut: pc r0 r1 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp r2:<invalid>

l0666:
// DataOut: pc r1 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>
// LocalsOut: Local -0002(16)

l0666_thunk_fn0AE8:
	word16 r0_76
	word16 r4_77
	word16 r5_78
	return fn0AE8(r4, 0x066A, r5, out r0_76, out r4_77, out r5_78)
// DataOut: pc r0 r1 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp - 2 r2:<invalid> r5:066A -2(fp):r5

fn064A_exit:
// DataOut: r0 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> -2(fp):r5



bool fn067C(word16 r0, word16 r3, word16 r4, word16 r5, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3 r4 r5
// LiveOut: Z r0 r4 r5
// Trashed: NZVC r0 r1 r4 r5
// Preserved: sp
fn067C_entry:
	*r0Out = r0
	*r5Out = r5
	*r4Out = r4
// DataOut: pc r0 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l067C:
	word16 r1_7 = (r3 - 0x0001 << 1) + r0
	byte v11_9 = Mem0[r1_7 + 0x0E2A:byte]
	bool Z_12 = (bool) cond(v11_9)
	branch v11_9 == 0x00 l06A0
// DataOut: pc r0 r1 r2 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l068A:
	Mem39[r1_7 + 0x0E2A:byte] = Mem0[r1_7 + 0x0E2A:byte] - 0x01
	word16 r1_40 = (int16) Mem39[r1_7 + 0x0E2A:byte]
	word16 r4_46
	word16 r5_47
	word16 r0_48
	*r0Out = fn0AB6(r4, r5, out r4_46, out r5_47)
	byte v21_49 = Mem39[r1_40 + 0x0EE0:byte]
	Mem50[r4_46:byte] = v21_49
	word16 r4_51
	*r4Out = r4_46 + 0x0001
	Z_12 = (bool) cond(v21_49) (alias)
// DataOut: pc r0 r2 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:(r3 - 0x0001 << 1) + r0

l06A0:
	return Z_12
// DataOut: pc r0 r2 r3 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> r1:<invalid> r4:<invalid> r5:<invalid> r0:<invalid> -2(fp):r3 -1(fp):r0

fn067C_exit:
// DataOut: r0 r4 r5
// DataOut (flags): Z
// SymbolicIn: sp:fp r1:<invalid> r4:<invalid> r5:<invalid> r0:<invalid> -2(fp):r3 -1(fp):r0



void fn06A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r5
// Preserved: sp
fn06A2_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l06A2:
	branch Mem0[0x0F0A:word16] == 0x0000 l06D4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l06A8:
	word16 r5_25 = Mem0[0x0F04:word16]
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l06AC:
	branch Mem0[r5_25 + 0x0EF0:byte] != 0x00 l06D0
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid>

l06D0:
	r5_25 = r5_25 - 0x0001
	branch r5_25 >= 0x0000 l06AC
// DataOut: r5
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid>

l06B2:
	word16 r0_37 = Mem0[0x0F14:word16]
	branch r0_37 >u 0x0008 l06D4
// DataOut: r0 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid>

l06BC:
	Mem42[r5_25 + 0x0EF0:byte] = r0_37 + 0x0002
	Mem43[r5_25 + 0x0EF3:byte] = 0x18
	Mem44[0x0F0C:word16] = 0x0000
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid>

l06D4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid>

fn06A2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r5:<invalid> r0:<invalid>



word16 fn06D6(word16 r4, word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r4 r5
// LiveOut: r4
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved: sp
fn06D6_entry:
	word16 sp_1 = fp
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l06D6:
	word16 r2_21 = Mem0[0x0F06:word16]
// DataOut: pc r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l06DA:
	word16 r3_24 = (int16) Mem0[r2_21 + 0x0EE6:byte]
	branch r3_24 == 0x0000 l07A0
// DataOut: pc r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l06E0:
	word16 v12_59 = Mem0[pc + 0x0812:word16] & Mem0[0x0EF4:word16]
	Mem60[pc + 0x0812:word16] = v12_59
	branch v12_59 != 0x0000 l06F6
// DataOut: pc r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l06E8:
	branch DPB(NZV, false, 0) l07A0
// DataOut: pc r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l06EE:
	branch Mem60[0x0EF4:word16] - Mem60[0x0EF4:word16] == 0x0000 l07A0
// DataOut: pc r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l06F6:
	word16 r0_168
	word16 r0_67 = (int16) Mem60[r2_21 + 0x0EE9:byte]
	branch Mem60[r2_21 + 0x0EEC:byte] < 0x00 l0710
// DataOut: pc r0 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0710:
	sp_1 = sp_1 - 0x0002
	Mem175[sp_1:word16] = r3_24 + 0x0001
	Mem176[sp_1 + 0x0001:byte] = r0_67
	r0_168 = fn0AB6(r4, r5, out r4, out r5)
	Mem184[r2_21 + 0x0EEC:word16] = Mem176[r2_21 + 0x0EEC:word16] & ~0x0080
// DataOut: pc r0 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0700:
	sp_1 = sp_1 - 0x0002
	Mem162[sp_1:word16] = r3_24
	Mem163[sp_1 + 0x0001:byte] = r0_67
	word16 r4_166
	r0_168 = fn0AB6(r4, r5, out r4_166, out r5)
	Mem169[r4_166:byte] = 0x20
	r4 = r4_166 + 0x0001
// DataOut: pc r0 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0724:
	Mem82[r2_21 + 0x0EE9:byte] = Mem60[r2_21 + 0x0EE9:byte] + 0x01
	word16 r0_83 = r0_168 + 0x0001
	branch r0_83 == 0x0019 l0784
// DataOut: pc r0 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0730:
	branch r0_83 == 0x0018 l0744
// DataOut: pc r0 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0744:
	branch Mem82[0x0EFA:word16] != 0x0000 l078A
// DataOut: pc r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l074A:
	branch Mem82[0x0F14:word16] - r3_24 <u 0x0000 l078A
// DataOut: pc r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0750:
	branch Mem82[0x0F14:word16] - (r3_24 - 0x0004) >u 0x0000 l078A
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l075A:
	word16 sp_138 = sp_1 - 0x0001
	Mem139[sp_138:byte] = Mem82[0x0F14:byte]
	Mem140[sp_138 + 0x0001:byte] = 0x18
	word16 r4_143
	word16 r5_144
	fn0AB6(r4, r5, out r4_143, out r5_144)
	word16 r5_146
	word16 r4_147 = fn0A7C(r4_143, r5_144, out r5_146)
	Mem148[0x0EFA:word16] = 0x0000
	Mem150[0x0EFC:word16] = 0x0005
	Mem152[0x0F1A:word16] = Mem150[0x0F18:word16] - 0x0001
	Mem155[sp_138 - 2:word16] = r5_146
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l077A_thunk_fn0AE8:
	word16 r0_157
	word16 r4_158
	word16 r5_159
	fn0AE8(r4_147, 0x077E, wArg00, out r0_157, out r4_158, out r5_159)
	return r4_158
// DataOut: pc r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:077E r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0736:
	branch r0_83 >u 0x0016 l078A
// DataOut: pc r0 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l073C:
	word16 r0_120
	branch fn067C(r0_83, r3_24, r4, r5, out r0_120, out r4, out r5) l078A
// DataOut: pc r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l078A:
	Mem110[sp_1 - 2:word16] = r5
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l078A_thunk_fn0AE8:
	word16 r0_113
	word16 r4_114
	word16 r5_115
	fn0AE8(r4, 0x078E, wArg00, out r0_113, out r4_114, out r5_115)
	return r4_114
// DataOut: pc r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:078E r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0742:
// DataOut: pc r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l0784:
	Mem91[r2_21 + 0x0EE6:byte] = 0x00
// DataOut: pc r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l07A0:
	r2_21 = r2_21 - 0x0001
	NZV = cond(r2_21)
	branch r2_21 >= 0x0000 l06DA
// DataOut: pc r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

l07A4:
	return r4
// DataOut: pc r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>

fn06D6_exit:
// DataOut: r4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r3:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):<invalid>



word16 fn07A6(word16 r4, word16 pc, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r4
// LiveOut: r4 r5
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved: sp
fn07A6_entry:
	*r5Out = r5
	word16 sp_1 = fp
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l07A6:
	word16 v5_3 = Mem0[0x0F1C:word16] - 0x0001
	Mem4[0x0F1E:word16] = v5_3
	byte NZV_103 = cond(v5_3)
	branch v5_3 == 0x0000 l07B0
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l07B0:
	Mem170[0x0F1E:word16] = Mem4[0x0F26:word16]
	word16 r5_171
	*r5Out = 0x0000
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l07B8:
	word16 r2_186 = Mem170[0x0F1A:word16]
	word16 r0_187 = Mem170[r2_186 + 0x0DB8:word16]
	branch r0_187 == 0x0000 l0868
// DataOut: pc r0 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l07C2:
	branch Mem170[0x0EFC:word16] == 0x0000 l07F4
// DataOut: pc r0 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l07C8:
	word16 r1_388 = Mem170[r2_186 + 0x0DAC:word16]
	word16 r3_389 = 0x0008
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l07D0:
	branch Mem170[r1_388:word16] == 0x0000 l07E8
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l07D4:
	sp_1 = sp_1 - 0x0001
	Mem427[sp_1:byte] = Mem170[r1_388:byte]
	Mem428[sp_1 + 0x0001:byte] = r0_187
	word16 r4_431
	word16 r5_432
	fn0AB6(r4, r5_171, out r4_431, out r5_432)
	r0_187 = fn0A74(r4_431, r5_432, out r4, out r5_171)
	branch Mem428[r1_388:word16] > 0x0000 l07E8
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l07E6:
	Mem443[r1_388:word16] = 0x0000
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l07E8:
	r1_388 = r1_388 + 0x0002
	r3_389 = r3_389 - 0x0001
	branch r3_389 != 0x0000 l07D0
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l07EE:
	Mem422[r2_186 + 0x0DB8:word16] = Mem170[r2_186 + 0x0DB8:word16] + 0x0001
	r0_187 = r0_187 + 0x0001
	NZV_103 = cond(r0_187)
// DataOut: pc r0 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l07F4:
	word16 r1_268 = Mem170[r2_186 + 0x0DAC:word16]
	word16 r3_269 = 0x0008
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l07FC:
	branch DPB(NZV_103, false, 0) l0840
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0840:
	NV = DPB(NV, false, 0) (alias)
	branch NV l085A
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0844:
	branch Mem170[0x0EFC:word16] != 0x0000 l085A
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l084A:
	sp_1 = sp_1 - 0x0001
	Mem373[sp_1:byte] = Mem170[r1_268:byte]
	Mem374[sp_1 + 0x0001:byte] = r0_187
	word16 r4_377
	word16 r5_378
	fn0AB6(r4, r5_171, out r4_377, out r5_378)
	r0_187 = fn0A74(r4_377, r5_378, out r4, out r5_171)
	Mem383[r1_268:word16] = 0x0000
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l085A:
	r3_269 = r3_269 - 0x0001
	r1_268 = r1_268 + 0x0002
	NZV_103 = cond(r3_269)
	branch r3_269 != 0x0000 l07FC
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0860:
	branch r5_171 != 0x0000 l0868
// DataOut: pc r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0864:
	Mem360[r2_186 + 0x0DB8:word16] = 0x0000
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0868:
	word16 v75_203 = Mem170[pc + 0x06AE:word16] - 0x0002
	Mem204[pc + 0x06AE:word16] = v75_203
	NV = cond(v75_203) (alias)
	branch v75_203 < 0x0000 l087E
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l087E:
	Mem216[0x0F1C:word16] = 0x000A
	Mem218[0x0DAA:word16] = ~Mem216[0x0DA8:word16]
	branch Mem218[0x0EFC:word16] == 0x0000 l0894
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0894:
	branch Mem218[0x0EFE:word16] == 0x0000 l08AA
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l089A:
	Mem244[0x0F22:word16] = -Mem218[0x0F20:word16]
	branch Mem244[0x0F00:word16] != 0x0000 l08AA
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08A4:
	Mem251[0x0EFE:word16] = 0x0001
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l088E:
	Mem232[0x0EFE:word16] = 0x0000
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08AA:
	Mem226[0x0F00:word16] = 0x0000
	Mem227[0x0F02:word16] = 0x0000
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0870:
	branch r5_171 != 0x0000 l0878
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0878:
	Mem213[0x0F28:word16] = r5_171
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0874:
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0800:
	Mem289[r1_268:word16] = Mem170[r1_268:word16] + Mem170[0x0F20:word16]
	branch Mem289[r1_268:word16] >=u 0x0008 l0810
// DataOut: pc r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l080A:
	branch Mem289[r1_268:word16] >u 0x0048 l0814
// DataOut: pc r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0810:
	Mem327[0x0F00:word16] = sp_1
// DataOut: pc r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0814:
	branch r0_187 != 0x0017 l081E
// DataOut: pc r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l081A:
	Mem322[0x0F02:word16] = sp_1
// DataOut: pc r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l081E:
	branch r0_187 >u 0x0016 l0828
// DataOut: pc r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0824:
	fn093C(r0_187, r1_268)
// DataOut: pc r0 r1 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0828:
	word16 sp_306 = sp_1 - 0x0001
	Mem307[sp_306:byte] = Mem289[r1_268:byte]
	Mem308[sp_306 + 0x0001:byte] = r0_187
	word16 r4_311
	word16 r5_312
	fn0AB6(r4, r5_171 + 0x0001, out r4_311, out r5_312)
	fn096A(r3_269)
	Mem315[sp_306 - 2:word16] = r5_312
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0838_thunk_fn0AE8:
	word16 r0_318
	word16 r4_319
	word16 r5_320
	fn0AE8(r4_311, 0x083C, wArg00, out r0_318, out r4_319, out r5_320)
	return r4_319
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:083C r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l07AC:
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l08B2:
	branch Mem4[0x0F12:word16] == 0x0000 l08CE
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08B8:
	word16 v36_50 = Mem4[pc + 0x063A:word16] & Mem4[0x0EF4:word16]
	Mem51[pc + 0x063A:word16] = v36_50
	branch v36_50 == 0x0000 l08CE
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08C0:
	word16 r2_55 = Mem51[0x0F06:word16]
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08C4:
	branch Mem51[r2_55 + 0x0EE6:byte] == 0x00 l08D0
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08D0:
	branch (fn0A94() & Mem51[0x0F0E:word16]) != 0x0000 l093A
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08DA:
	word16 r0_90 = fn0A94()
	word16 r1_144 = Mem51[0x0F08:word16]
	branch r1_144 < 0x0000 l08EE
// DataOut: pc r0 r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08E4:
	NZV_103 = DPB(NZV_103, false, 0) (alias)
	branch NZV_103 l08EE
// DataOut: pc r0 r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08EA:
	branch r0_90 << 1 <u 0x0000 l0904
// DataOut: pc r0 r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08EE:
	word16 r1_139 = __rol(0x0000, 0x0000)
	word16 r1_141 = __rol(r1_139, r1_139)
	r1_144 = __rol(r1_141, r1_141) << 1
	NZV_103 = DPB(NZV_103, false, 0) (alias)
	branch NZV_103 l08D0
// DataOut: pc r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0904:
	word16 r0_102 = 0x0DB8
// DataOut: pc r0 r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0908:
	r0_102 = r0_102 - 0x0002
	word16 r3_106 = Mem51[r0_102:word16] + r1_144
	NZV_103 = DPB(NZV_103, false, 0) (alias)
	branch NZV_103 l0908
// DataOut: pc r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0910:
	Mem115[r2_55 + 0x0EE6:byte] = (int16) Mem51[r3_106:byte] + 0x0002
	Mem117[r2_55 + 0x0EE9:byte] = Mem115[r0_102 + 0x000C:byte]
	Mem118[r2_55 + 0x0EEC:byte] = 0x80
	branch r0_102 == 0x0DAC l0936
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l092C:
	branch (fn0A94() & Mem118[0x0F0C:word16]) != 0x0000 l093A
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l0936:
	Mem127[r2_55 + 0x0EEC:byte] = Mem118[r2_55 + 0x0EEC:byte] + 0x01
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r5:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l093A:
	return r4
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r0:<invalid> r1:<invalid> r5:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08CA:
	r2_55 = r2_55 - 0x0001
	NZV_103 = cond(r2_55)
	branch r2_55 >= 0x0000 l08C4
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

l08CE:
	return r4
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>

fn07A6_exit:
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r1:<invalid> r3:<invalid> r4:<invalid> -1(fp):<invalid> 0(fp):<invalid>



void fn093C(word16 r0, word16 r1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r1
// LiveOut:
// Trashed: NZVC
// Preserved: r3 sp
fn093C_entry:
// DataOut: pc r0 r1 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l093C:
	word16 r3_7 = Mem0[r1:word16]
	word16 r3_17 = r3_7 - 0x0001
	branch Mem0[0x0F20:word16] < 0x0000 l094C
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l094A:
	r3_17 = r3_7 - 0x0002
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> -2(fp):r3
// LocalsOut: fp(16)

l094C:
	word16 r3_21 = (r3_17 << 1) + r0 - 0x0016 + 0x0E40
	word16 wLoc04_24 = 0x0007
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r3:<invalid> -2(fp):r3
// LocalsOut: fp(16) Local -0004(16)

l0958:
	Mem29[r3_21 + 0x0000:byte] = 0x00
	word16 v18_32 = wLoc04_24 - 0x0001
	r3_21 = r3_21 + 0x0002
	wLoc04_24 = v18_32
	branch v18_32 != 0x0000 l0958
// DataOut: pc r0 r1 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r3:<invalid> -4(fp):<invalid> -2(fp):r3
// LocalsOut: fp(16) Local -0004(16)

l0964:
	return
// DataOut: pc r0 r1 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 r3:<invalid> -4(fp):<invalid> -2(fp):r3

fn093C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 -4(fp):<invalid> -2(fp):r3



void fn096A(word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3
// LiveOut:
// Trashed: NZVC r3
// Preserved: sp
fn096A_entry:
// DataOut: pc r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l096A:
	branch (r3 & 0x0001) != 0x0000 l0984
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0984:
	branch Mem0[0x0DA8:word16] != 0x0000 l0976
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 & 0x0001

l0970:
	branch Mem0[0x0DA8:word16] != 0x0000 l098A
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 & 0x0001

l098A:
	Mem19[0x112D:byte] = 0x5C
	Mem20[0x1131:byte] = 0x2F
	return
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 & 0x0001

l0976:
	Mem13[0x112D:byte] = 0x2F
	Mem14[0x1131:byte] = 0x5C
	return
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 & 0x0001

fn096A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:r3 & 0x0001



word16 fn0998(word16 r4, word16 r5, word16 pc, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r4 r5
// LiveOut: r4 r5
// Trashed: NZVC r0 r1 r2 r4 r5
// Preserved: sp
fn0998_entry:
	*r5Out = r5
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0998:
	word16 r2_102 = Mem0[0x0F02:word16]
	byte NZV_146 = DPB(NZV, false, 0)
	branch NZV_146 l09E4
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l099E:
	word16 v10_144 = Mem0[0x0F1E:word16] - 0x0001
	Mem145[0x0F20:word16] = v10_144
	NZV_146 = cond(v10_144)
	branch v10_144 != 0x0000 l0A1E
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>
// LocalsOut: fp(16)

l0A1E:
	branch r2_102 == 0x0000 l0A5E
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>
// LocalsOut: fp(16)

l0A22:
	word16 v43_194 = 0x0028 - Mem145[0x0F1E:word16]
	NZV_146 = cond(v43_194) (alias)
	branch v43_194 > 0x0000 l0A5E
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>
// LocalsOut: fp(16)

l09A4:
	Mem148[0x0F20:word16] = 0x0064
	Mem150[0x0F12:word16] = 0x0001
	Mem151[0x0A6A:word16] = 0x1134
	word16 r0_157 = fn0A94()
	r2_102 = 0x0001
	word16 r1_152 = 0x0000
	word16 r0_158 = r0_157 << 1
	branch r0_157 << 1 >=u 0x0000 l09D4
// DataOut: pc r0 r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid>
// LocalsOut: fp(16)

l09C2:
	r0_158 = r0_157 << 2
	branch r0_157 << 2 >=u 0x0000 l09D4
// DataOut: pc r0 r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0001 r1:0x0000 r0:<invalid>
// LocalsOut: fp(16)

l09C6:
	Mem183[0x0F12:word16] = Mem151[0x0F10:word16] + 0x0001
	Mem184[0x0A6A:word16] = 0x113D
	r1_152 = 0x000A
// DataOut: pc r0 r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0001 r1:0x0000 r0:<invalid>
// LocalsOut: fp(16)

l09D4:
	branch r0_158 > 0x0000 l09E4
// DataOut: pc r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0001 r1:<invalid> r0:<invalid>
// LocalsOut: fp(16)

l09D8:
	Mem171[0x0F12:word16] = -Mem151[0x0F10:word16]
	Mem174[pc + 0x008A:word16] = Mem171[pc + 0x008A:word16] + r1_152
	r2_102 = 0x004A
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:0x0001 r1:<invalid> r0:<invalid>
// LocalsOut: fp(16)

l09E4:
	branch Mem0[0x0EF4:word16] != 0x0000 l0A18
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r1:<invalid> r0:<invalid>
// LocalsOut: fp(16)

l09EA:
	branch Mem0[0x0EF6:word16] != 0x0000 l0A18
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r1:<invalid> r0:<invalid>
// LocalsOut: fp(16)

l09F0:
	branch Mem0[0x0F10:word16] < 0x0000 l09FE
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r1:<invalid> r0:<invalid>
// LocalsOut: fp(16)

l09FE:
	branch r2_102 == 0x0002 l0A2A
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r1:<invalid> r0:<invalid>
// LocalsOut: fp(16)

l09F6:
	branch r2_102 == 0x0049 l0A2A
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r1:<invalid> r0:<invalid>
// LocalsOut: fp(16)

l0A2A:
	word16 r4_56
	word16 r5_57
	fn0AB6(r4, r5, out r4_56, out r5_57)
	word16 r4_59
	word16 r5_60
	fn0A74(r4_56, r5_57, out r4_59, out r5_60)
	Mem63[fp - 0x0004:word16] = r2_102
	Mem64[fp - 0x0003:byte] = 0x04
	word16 r4_67
	word16 r5_68
	fn0AB6(r4_59, r5_60, out r4_67, out r5_68)
	word16 r5_71
	fn0A74(r4_67, r5_68, out r4, out r5_71)
	Mem73[0x0F04:word16] = 0x0000
	branch DPB(NZV_146, false, 0) l0A5E
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r1:<invalid> r0:<invalid>

l0A54:
	Mem80[0x0EFA:word16] = 0x0000
	Mem82[0x0EFC:word16] = 0x0005
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):0x03

l0A5E:
	return r4
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> r1:<invalid> -2(fp):<invalid> -1(fp):0x03

l09FC:
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r1:<invalid> r0:<invalid>
// LocalsOut: fp(16)

l0A04:
	r2_102 = r2_102 + Mem0[0x0F10:word16]
	word16 r4_133
	word16 r5_134
	fn0AB6(r4, r5, out r4_133, out r5_134)
	word16 r5_136
	r4 = fn0A60(r4_133, r5_134, out r5_136)
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r1:<invalid> r0:<invalid>

l0A18:
	Mem110[0x0F04:word16] = r2_102
	return r4
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid> -1(fp):0x03

fn0998_exit:
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r2:<invalid> r1:<invalid> r0:<invalid> r5:<invalid> r4:<invalid> -2(fp):<invalid> -1(fp):0x03



word16 fn0A60(word16 r4, word16 r5, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5
// LiveOut: r4 r5
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0A60_entry:
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0A60:
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0A60_thunk_fn0AE8:
	word16 r0_7
	word16 r4_8
	word16 r5_9
	fn0AE8(r4, 0x0A64, r5, out r0_7, out r4_8, out r5_9)
	return r4_8
// DataOut: pc r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r5:0A64 -2(fp):r5

fn0A60_exit:
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> -2(fp):r5



word16 fn0A74(word16 r4, word16 r5, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5
// LiveOut: r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0A74_entry:
// DataOut: pc r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0A74:
// DataOut: pc r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0A74_thunk_fn0AE8:
	word16 r0_7
	word16 r4_8
	word16 r5_9
	fn0AE8(r4, 0x0A78, r5, out r0_7, out r4_8, out r5_9)
	return r0_7
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r5:0A78 -2(fp):r5

fn0A74_exit:
// DataOut: r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> -2(fp):r5



word16 fn0A7C(word16 r4, word16 r5, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5
// LiveOut: r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0A7C_entry:
// DataOut: pc r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0A7C:
	Mem4[r4:byte] = Mem0[0x0F24:byte]
// DataOut: pc r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0A80_thunk_fn0AE8:
	word16 r0_13
	word16 r4_14
	word16 r5_15
	fn0AE8(r4 + 0x0001, 0x0A84, r5, out r0_13, out r4_14, out r5_15)
	return r4_14
// DataOut: pc r1 r2 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r4:r4 + 0x0001 r5:0A84 -2(fp):r5

fn0A7C_exit:
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r4:<invalid> r5:<invalid> r0:<invalid> -2(fp):r5



word16 fn0A94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: NZVC r0
// Preserved: sp
fn0A94_entry:
// DataOut: pc r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0A94:
	word16 r0_10 = ((DPB(__swab(Mem0[0x0AB2:word16]), 0x00, 0) << 1) + Mem0[0x0AB2:word16] << 2) + Mem0[0x0AB2:word16]
	Mem13[0x0AB4:word16] = r0_10 + 0x3619
	return r0_10 + 0x3619
// DataOut: pc r0 r1 r2 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0A94_exit:
// DataOut: r0
// DataOut (flags): 
// SymbolicIn: sp:fp r0:<invalid>



word16 fn0AB6(word16 r4, word16 r5, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5
// LiveOut: r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0AB6_entry:
// DataOut: pc r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0AB6:
// DataOut: pc r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0AB6_thunk_fn0AE8:
	word16 r0_7
	word16 r4_8
	word16 r5_9
	fn0AE8(r4, 0x0ABA, r5, out r0_7, out r4_8, out r5_9)
	return r0_7
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r5:0ABA -2(fp):r5

fn0AB6_exit:
// DataOut: r0 r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r5:<invalid> r0:<invalid> r4:<invalid> -2(fp):r5



bool fn0AE8(word16 r4, word16 r5, word16 wArg00, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5
// LiveOut: Z r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
// Stack args: Stack +0000(16)
l0AE8:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0AE8_entry:
// DataOut: pc r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0AE8:
	word16 r0_14 = Mem0[r5:word16]
// DataOut: pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0000(16)

l0AEC:
	byte v8_15 = Mem0[r0_14:byte]
	Mem17[r4:byte] = v8_15
	r0_14 = r0_14 + 0x0001
	r4 = r4 + 0x0001
	branch v8_15 != 0x00 l0AEC
// DataOut: pc r0 r1 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 r5:r5 + 0x0002 r0:<invalid> r4:<invalid> -2(fp):r0
// LocalsOut: fp(16) Local -0002(16) Stack +0000(16)

l0AF0:
	word16 sp_35
	word16 r0_36
	byte NZ_37
	bool V_38
	word16 r5_39
	word16 r4_40
	bool Z_41
	byte NZV_42
	call r5 + 0x0002 (retsize: 2; FPU: 2;)
		uses: NZ_26,NZV_30,r0_25,r4_22,r5_33,sp_34,V_28,wLoc02_4,Z_27
		defs: NZ_37,NZV_42,r0_36,r4_40,r5_39,sp_35,V_38,Z_41
	return Z_41
// DataOut: pc r0 r1 r2 r3 r4 r5 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0002 r5:r5 + 0x0002 r0:<invalid> r4:<invalid> -2(fp):r0

fn0AE8_exit:
// DataOut: r0 r4 r5 sp
// DataOut (flags): Z
// SymbolicIn: sp:fp + 2 r5:<invalid> r0:<invalid> r4:<invalid> -2(fp):r0



word16 fn0AF6(word16 r4, word16 r5, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5
// LiveOut: r4 r5
// Trashed: NZVC r0 r4 r5 sp
// Preserved:
fn0AF6_entry:
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0AF6:
	word16 r4_13
	word16 r5_14
	fn0AB6(r4, r5, out r4_13, out r5_14)
	Mem16[r4_13:byte] = 0x80
	PRINT(0x1178)
	return 0x1178
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0AF6_exit:
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:0x1178 r4:0x1178 r5:<invalid> -2(fp):<invalid> -1(fp):0x18



word16 fn0B1A(word16 r4, word16 r5, byte bArg00, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4 r5
// LiveOut: r4 r5 sp
// Trashed: NZV r0 r3 r4 r5 sp
// Preserved:
fn0B1A_entry:
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0B1A:
	word16 r4_12
	word16 r5_13
	fn0AB6(r4, r5, out r4_12, out r5_13)
	Mem16[fp - 0x0003:word16] = r5_13
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0B30_thunk_fn0AE8:
	word16 r0_19
	word16 r4_20
	word16 r5_21
	fn0AE8(r4_12, 0x0B34, wArg00, out r0_19, out r4_20, out r5_21)
	return r4_20
// DataOut: pc r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:0x0005 r5:0B34 r4:<invalid> -3(fp):r5 -1(fp):0x2B 0(fp):0x02

fn0B1A_exit:
// DataOut: r4 r5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r0:<invalid> r3:0x0005 r5:<invalid> r4:<invalid> -3(fp):r5 -1(fp):0x2B 0(fp):0x02



void fn0B60(word16 r0, word16 r3, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r3 r4
// LiveOut:
// Trashed: NZVC r0 r3 r4
// Preserved: r1 r2 r5 sp
fn0B60_entry:
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0B60:
	word16 wLoc08_113 = 0x0000
	branch r3 < 0x0000 l0B74
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16)

l0B74:
	Mem131[0x0BC8:word16] = 0x0030
	r3 = -r3
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 -8(fp):0x0000 -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0B6C:
	Mem127[0x0BC8:word16] = 0x0020
// DataOut: r0 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 -8(fp):0x0000 -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0B7C:
	branch r3 == 0x0000 l0BBE
// DataOut: r0 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:-r3 -8(fp):0x0000 -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0B80:
	word16 r2_54 = 0x0BD4 - (r3 << 1)
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:-r3 r5:-r3 -8(fp):0x0000 -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0B88:
	word16 r5_63 = 0x0030
	word16 v16_66 = Mem0[r2_54:word16]
	r2_54 = r2_54 + 0x0002
	branch v16_66 == 0x0000 l0BBE
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0B8E:
	r0 = r0 - v16_66
	branch r0 <u 0x0000 l0B96
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0B96:
	word16 r5_104
	r0 = r0 + v16_66
	branch wLoc08_113 != 0x0000 l0BB4
// DataOut: r0 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0B9C:
	branch r5_63 == 0xFFD0 l0BA4
// DataOut: r0 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0BA4:
	branch r3 == 0x0001 l0BB4
// DataOut: r0 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0BAA:
	branch Mem0[r2_54:word16] == 0x0000 l0BB4
// DataOut: r0 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0BAE:
	r5_104 = (int16) Mem0[0x0BC6:byte]
// DataOut: r0 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0BA0:
	wLoc08_113 = wLoc08_113 + 0x0001
// DataOut: r0 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0BB4:
	r5_104 = r5_63 + 0x0000
// DataOut: r0 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0BB8:
	Mem93[r4:word16] = r5_104
	r4 = r4 + 0x0002
	r3 = r3 - 0x0001
	branch r3 != 0x0000 l0B88
// DataOut: r0 r2 r3 r4
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)

l0BBE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1

fn0B60_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r3:<invalid> r5:r5 r2:r2 r1:r1 r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1

l0B92:
	r5_63 = r5_63 + 0x0001
// DataOut: r0 r1 r2 r3 r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 r3:<invalid> r5:<invalid> r2:<invalid> r1:<invalid> r0:<invalid> r4:<invalid> -8(fp):<invalid> -6(fp):r5 -4(fp):r2 -2(fp):r1
// LocalsOut: fp(16) Local -0008(16)



void fn0BD6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2
// Preserved: sp
fn0BD6_entry:
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0BD6:
	Mem2[0x0F1A:word16] = 0x0003
	Mem3[0x0B5C:word16] = 0x0000
	Mem5[0x0F0E:word16] = 0xF800
	Mem6[0x0F10:word16] = 0xE000
	word16 r1_14 = 0x0E56
	word16 r0_18 = 0x0006
// DataOut: pc r0 r1 r5
// DataOut (flags): 
// SymbolicIn: sp:fp

l0BF4:
	word16 r2_19 = 0x000A
// DataOut: pc r0 r1 r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>

l0BF8:
	Mem24[r1_14:byte] = 0x04
	r1_14 = r1_14 + 0x0001
	r2_19 = r2_19 - 0x0001
	branch r2_19 != 0x0000 l0BF8
// DataOut: pc r0 r1 r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>

l0C00:
	r1_14 = r1_14 + 0x000A
	r0_18 = r0_18 - 0x0001
	branch r0_18 != 0x0000 l0BF4
// DataOut: pc r0 r1 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>

l0C08:
	Mem35[0x1166:word16] = 0x1100
	Mem36[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	Mem38[0x1174:word16] = Mem36[0x1170:word16]
	return
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>

fn0BD6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:0x1166 r2:<invalid>



word16 fn0C20(word16 r5, word16 pc, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc r5
// LiveOut: r4 r5
// Trashed: NZVC r0 r1 r2 r4 r5 sp
// Preserved:
fn0C20_entry:
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0C20:
	word16 r1_11 = 0x0DB8
	word16 r0_14 = 0x0006
	word16 r2_12 = 0x0005
// DataOut: pc r0 r1 r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0C2C:
	Mem10[r1_11:word16] = r2_12
	r1_11 = r1_11 + 0x0002
	r2_12 = r2_12 + 0x0002
	r0_14 = r0_14 - 0x0001
	branch r0_14 != 0x0000 l0C2C
// DataOut: pc r0 r1 r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>
// LocalsOut: fp(16)

l0C36:
	word16 r1_17 = 0x0000
	word16 r0_19 = 0x0008
	word16 r2_20 = 0x000B
// DataOut: pc r0 r1 r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>
// LocalsOut: fp(16)

l0C40:
	Mem26[r1_17 + 0x0DE0:word16] = r2_20
	Mem27[r1_17 + 0x0DF0:word16] = r2_20
	Mem28[r1_17 + 0x0E00:word16] = r2_20
	Mem29[r1_17 + 0x0E10:word16] = r2_20
	Mem30[r1_17 + 0x0E20:word16] = r2_20
	Mem31[r1_17 + 0x0E30:word16] = r2_20
	Mem32[r1_17 + 0x0DC4:word16] = 0x0006
	r1_17 = r1_17 + 0x0002
	r2_20 = r2_20 + 0x0008
	r0_19 = r0_19 - 0x0001
	branch r0_19 != 0x0000 l0C40
// DataOut: pc r0 r1 r2 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>
// LocalsOut: fp(16)

l0C68:
	word16 r1_42 = 0x0EE6
	word16 r0_43 = 0x0010
// DataOut: pc r0 r1 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>
// LocalsOut: fp(16)

l0C70:
	Mem48[r1_42:word16] = 0x0000
	r1_42 = r1_42 + 0x0002
	r0_43 = r0_43 - 0x0001
	branch r0_43 != 0x0000 l0C70
// DataOut: pc r0 r1 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>
// LocalsOut: fp(16)

l0C76:
	Mem54[0x0F0A:word16] = 0xFFFF
	Mem55[0x0F14:word16] = 0x0030
	Mem56[0x0F16:word16] = 0x0002
	Mem57[0x0F18:word16] = 0x0078
	Mem58[0x0F1C:word16] = 0x000A
	Mem59[0x0F1E:word16] = 0x0004
	Mem60[0x0F28:word16] = 0x0004
	Mem61[0x0F20:word16] = 0x0064
	Mem62[0x0F22:word16] = 0x0001
	Mem65[pc + 0x025E:word16] = Mem62[pc + 0x025E:word16] << 1
	word16 v17_66 = Mem65[pc + 0x025C:word16] << 1
	Mem67[pc + 0x025C:word16] = v17_66
	branch v17_66 != 0x0000 l0CBA
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>
// LocalsOut: fp(16)

l0CB6:
	Mem84[pc + 0x0256:word16] = Mem67[pc + 0x0256:word16] >> 1
// DataOut: pc r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>
// LocalsOut: fp(16)

l0CBA:
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid>
// LocalsOut: Local -0002(0)

l0CBE_thunk_fn0AE8:
	word16 r0_78
	word16 r4_79
	word16 r5_80
	fn0AE8(0x1178, 0x0CC2, r5, out r0_78, out r4_79, out r5_80)
	return r4_79
// DataOut: pc r4 r5
// DataOut (flags): 
// SymbolicIn: sp:fp - 2 r1:<invalid> r0:<invalid> r2:<invalid> r4:0x1178 r5:0CC2 -2(fp):r5

fn0C20_exit:
// DataOut: r4 r5
// DataOut (flags): 
// SymbolicIn: sp:<invalid> r1:<invalid> r0:<invalid> r2:<invalid> r4:<invalid> r5:<invalid> -2(fp):r5



void fn0D98(word16 r0, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0 r4
// LiveOut:
// Trashed: NZV r0 r1 r2 r4
// Preserved: sp
fn0D98_entry:
// DataOut: r0 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0D98:
	word16 r1_18 = 0x0046
// DataOut: r0 r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0D9C:
	Mem16[r4:byte] = Mem0[(int16) Mem0[r0:byte] + 0x0EE0:byte]
	r0 = r0 + 0x0002
	r4 = r4 + 0x0001
	r1_18 = r1_18 - 0x0001
	branch r1_18 != 0x0000 l0D9C
// DataOut: r0 r1 r4
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid> r4:<invalid>

l0DA8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid> r4:<invalid>

fn0D98_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp r1:<invalid> r0:<invalid> r2:<invalid> r4:<invalid>



