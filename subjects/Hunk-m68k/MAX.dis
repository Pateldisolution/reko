void fn00001000(word32 d0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 d0
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 a7 d0 d1 d2 d3 d4 d5
// Preserved: a5 a7 d7
fn00001000_entry:
// DataOut: a0 d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0010(32)

l00001000:
// DataOut: a0 d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0010(32)

l0000100A:
	word32 a6_8 = Mem0[0x00000004:word32]
	word32 d2_190 = d0
	word32 a2_202 = a0
	branch Mem0[a6_8 + 20:word16] >=u 0x0024 l00001036
// DataOut: a2 a4 a6 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0010(32)

l00001020:
	word32 a0_463 = 0x00003D90
	word32 d0_466 = 0x0000000C
// DataOut: a0 a2 a4 a6 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD86 a6:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l00001030:
	Mem470[a0_463:word32] = 0x00000000
	a0_463 = a0_463 + 4
	d0_466 = d0_466 - 0x00000001
	branch d0_466 != 0x00000000 l00001030
// DataOut: a0 a2 a4 a6 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD86 a6:<invalid> a0:<invalid> d0:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l00001036:
	Mem14[0x00003D90:word32] = fp
	Mem16[0x00003D94:word32] = a6_8
	word32 d0_19 = FindTask(0x00000000)
	word32 d0_23 = OpenLibrary(0x000012BC, 0)
	branch d0_23 == 0x00000000 l00001226
// DataOut: a2 a3 a4 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD86 a6:<invalid> a0:<invalid> d0:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l00001226:
	Alert(0x00038007)
// DataOut: a3 d0
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> a0:<invalid>

l00001056:
	word32 d4_418
	Mem82[0x00003D98:word32] = d0_23
	branch Mem82[d0_19 + 172:word32] != 0x00000000 l00001066
// DataOut: a2 a3 a4 d2
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> a0:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l00001066:
	word32 a0_421 = a0
	d4_418 = 3
// DataOut: a0 a2 a3 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> a0:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l0000106A:
	branch Mem82[a0_475:byte] != 0x20 l00001072
// DataOut: a0 a2 a3 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> a0:<invalid> d4:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l00001070:
	d4_418 = DPB(d4_418, (word16) d4_418 + 0x0001, 0)
// DataOut: a0 a2 a3 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> a0:<invalid> d4:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l00001072:
	a0_421 = a0_475 + 1
	word32 a0_475 = a0_421
	branch Mem82[a0_475:byte] != 0x00 l0000106A
// DataOut: a0 a2 a3 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> a0:<invalid> d4:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l00001060:
	d4_418 = 2
	d2_190 = 8
// DataOut: a2 a3 a4 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d0 a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> a0:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l00001076:
	word32 d0_91 = d4_418 << 0x00000002
	word32 d0_93 = d0_91 + d2_190
	word32 d1_206 = 0x00010001
	d0_23 = AllocMem(d0_93 + 0x00000011, 0x00010001)
	branch d0_23 == 0x00000000 l0000123E
// DataOut: a2 a3 a4 d0 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> a0:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l0000123E:
	CloseLibrary(Mem82[0x00003D98:word32])
	Alert(0x00010000)
// DataOut: a3 d0
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a0:<invalid>

l0000125C:
	branch Mem16[d0_19 + 172:word32] != 0x00000000 l00001268
// DataOut: a3 d0
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d7:d7 a5:a5 a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 -12(fp):d7 -8(fp):a5 -4(fp):<invalid>

l00001262:
	fn00001214(d0_19)
	fn0000126C(d0_23)
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d7:d7 a5:a5 a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 -12(fp):d7 -8(fp):a5 -4(fp):<invalid>

l00001268:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d7:d7 a5:a5 a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 -12(fp):d7 -8(fp):a5 -4(fp):<invalid>

l00001096:
	word32 dwLoc0C_126
	word32 a0_131
	Mem108[d0_23:word32] = d0_93 + 0x00000011
	Mem112[d0_23 + 12:word32] = d4_418 - 0x00000001
	Mem116[d0_23 + 8:word32] = d0_23 + 16 + d0_91
	Mem118[0x00000000:word32] = 0x00000000
	word32 d0_119 = Mem118[d0_19 + 172:word32]
	branch d0_119 == 0x00000000 l00001190
// DataOut: a2 a3 a4 a5 d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a0:<invalid>
// LocalsOut: fp(32) Local -0010(32)

l00001190:
	fn00001214(d0_19)
	Mem352[0x00003D9C:word32] = d0_119
	Mem354[0x00003DA0:word32] = d0_119
	Mem359[0x00000000:word32] = 0x00000000
	dwLoc0C_126 = d0_119
	word32 d0_362 = Mem359[d0_119 + 36:word32]
	branch d0_362 == 0x00000000 l000011B6
// DataOut: a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l000011AE:
	Enable()
// DataOut: a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a5:<invalid> a0:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l000011B6:
	Supervisor(d0_23)
	Mem369[d0_23 + 4:word32] = d0_362
	branch d0_362 != 0x00000000 l000011D2
// DataOut: a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l000011D2:
	Mem378[0x00003DA4:word32] = d0_362
	Mem380[0x00003DA8:word32] = d0_362
	Mem382[0x00003DAC:word32] = d0_362
	Mem384[d0_19 + 156:word32] = d0_362
	Mem386[d0_19 + 160:word32] = d0_362
	word32 d0_390 = Mem386[(d0_362 << 0x00000002) + 8:word32]
	branch d0_390 == 0x00000000 l000011F4
// DataOut: a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d2:0x000003ED a2:<invalid> a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:000012C8 -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l000011F0:
	Mem396[d0_19 + 164:word32] = d0_390
// DataOut: a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d2:0x000003ED a2:<invalid> a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l000011F4:
// DataOut: a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d2:0x000003ED a2:<invalid> a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l000011CC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d2:0x000003ED a2:<invalid> a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:000012C8 -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l000011CE_thunk_fn0000127C:
	word32 a1_374
	word32 a5_375
	fn0000127C(out a1_374, out a5_375)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d2:20 a2:<invalid> a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:000012C8 a5:<invalid> a0:000012C8 -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l000010B6:
	word32 d0_172 = Mem118[(d0_119 << 0x00000002) + 16:word32]
	word32 a1_175 = Mem118[d0_23 + 8:word32]
	word32 a0_180 = (d0_172 << 0x00000002) + 1
	word32 d0_181 = (int32) Mem118[d0_172 << 0x00000002:byte]
	Mem182[a0_180 + d0_181:byte] = 0x00
	Mem184[d0_23 + 16:word32] = a0_180
	word32 a6_185 = d0_23 + 20
	word32 d3_186 = 1
	word32 a0_188 = a0 + d2_190
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d2 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:a0 a4:0000BD86 a6:<invalid> a1:000012BC d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:0x00010001 a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l000010DA:
	a0_188 = a0_188 - 1
	branch Mem184[a0_188:byte] >u 0x20 l000010E2
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d2 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:a0 a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:1 d1:0x00010001 a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l000010DE_1:
	word16 v36_346 = SLICE(d2_190, word16, 0)
	d2_190 = DPB(d2_190, v36_346 - 1, 0)
	branch v36_346 != 0x0000 l000010DA
// DataOut: a0 a1 a2 a3 a4 a5 a6 d0 d2 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:a0 a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:1 d1:0x00010001 a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l000010E2:
	Mem196[a0_188 + 1:byte] = 0x00
// DataOut: a1 a2 a3 a4 a5 a6 d0 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:a0 a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:1 d1:0x00010001 a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l000010E6:
	byte v38_211 = Mem196[a2_202:byte]
	a2_202 = a2_202 + 1
	d1_206 = DPB(d1_206, v38_211, 0)
	branch v38_211 == 0x00 l00001148
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l000010EA:
	branch v38_211 == 0x20 l000010E6
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l000010F0:
	branch v38_211 == 0x09 l000010E6
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l000010F6:
	branch d3_186 - Mem196[d0_23 + 12:word32] == 0x00000000 l00001148
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l000010FC:
	Mem268[a6_185:word32] = a1_175
	a6_185 = a6_185 + 4
	d3_186 = DPB(d3_186, (word16) d3_186 + 0x0001, 0)
	branch v38_211 == 0x22 l0000111A
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l0000111A:
	byte v65_310 = Mem268[a2_202:byte]
	a2_202 = a2_202 + 1
	d1_206 = DPB(d1_206, v65_310, 0)
	branch v65_310 == 0x00 l00001148
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l0000111E:
	branch v65_310 == 0x22 l00001116
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l00001124:
	branch v65_310 != 0x2A l00001144
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l0000112A:
	byte v68_329 = Mem268[a2_202:byte]
	a2_202 = a2_202 + 1
	d1_206 = DPB(d1_206, v68_329, 0)
	branch (v68_329 & 0xDF) != 0x4E l0000113C
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d2 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l0000113C:
	branch (v68_329 & 0xDF) != 0x45 l00001144
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l00001142:
	d1_206 = 27
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l00001138:
	d1_206 = 10
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l00001144:
	Mem326[a1_175:byte] = (byte) d1_206
	a1_175 = a1_175 + 1
// DataOut: a1 a2 a3 a4 a5 a6 d0 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l00001106:
	Mem288[a1_175:byte] = v38_211
	a1_175 = a1_175 + 1
// DataOut: a1 a2 a3 a4 a5 a6 d0 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l00001108:
	byte v46_294 = Mem288[a2_202:byte]
	a2_202 = a2_202 + 1
	d1_206 = DPB(d1_206, v46_294, 0)
	branch v46_294 == 0x00 l00001148
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l00001148:
	Mem224[a1_175:byte] = 0x00
	Mem225[a6_185:word32] = 0x00000000
	execPrivate4()
	Mem233[0x00003DA4:word32] = d0_181
	execPrivate5()
	Mem235[0x00003DA8:word32] = d0_181
	dwLoc0C_126 = d0_23 + 16
	dwLoc10 = d3_186
	branch Mem235[Mem235[0x00003D94:word32] + 20:word16] <u 0x0024 l0000117A
// DataOut: a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00001172:
	word32 v82_254 = Mem235[d0_19 + 224:word32]
	Mem255[0x00003DAC:word32] = v82_254
	branch v82_254 != 0x00000000 l0000117E
// DataOut: a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0000117A:
	Mem252[0x00003DAC:word32] = d0_181
// DataOut: a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l0000117E:
	branch Mem235[d0_19 + 8:byte] != 0x0D l000011F8
// DataOut: a3 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l000011F8:
	a0_131 = Mem118[d0_19 + 58:word32]
// DataOut: a0 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00001186:
	word32 a0_244 = Mem235[d0_19 + 176:word32]
	a0_131 = a0_244 + 4 - Mem235[a0_244:word32]
// DataOut: a0 a4 a5
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000010 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):<invalid>
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l00001202:
	Mem140[0x00003DB8:word32] = a0_131
	Mem142[0x00003DBC:word32] = fp - 16
	fn00001354(d0_23, dwLoc10, dwLoc0C_126)
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l00001212_thunk_fn0000127C:
	word32 a1_146
	word32 a5_147
	fn0000127C(out a1_146, out a5_147)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d2:0 a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

fn00001000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d7:d7 a5:<invalid> a0:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

l0000110C:
	branch v46_294 == 0x20 l00001116
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l00001116:
	Mem281[a1_175:byte] = 0x00
	a1_175 = a1_175 + 1
// DataOut: a1 a2 a3 a4 a5 a6 d0 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)

l00001112:
	Mem303[a1_175:byte] = v46_294
	a1_175 = a1_175 + 1
// DataOut: a1 a2 a3 a4 a5 a6 d0 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d2:<invalid> a2:<invalid> a4:0000BD86 a6:<invalid> a1:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d1:<invalid> a5:<invalid> a0:<invalid> -4(fp):<invalid>
// LocalsOut: fp(32)



void fn00001214(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3
// LiveOut:
// Trashed: a0
// Preserved: a7
fn00001214_entry:
// DataOut: a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001214:
	WaitPort(a3 + 92)
	GetMsg(a3 + 92)
	return
// DataOut: a3 a4 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00001214_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a0:a3 + 92



void fn0000126C(word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2
// LiveOut:
// Trashed: a1
// Preserved: a7
fn0000126C_entry:
// DataOut: a2 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
// DataOut: a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

fn0000126C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a1:a2



word32 fn00001278(word32 dwArg04, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
// DataOut: d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001278:
// DataOut: d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001278_thunk_fn0000127C:
	word32 a1_5
	word32 a5_6
	return fn0000127C(out a1_5, out a5_6)
// DataOut: a1 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid>

fn00001278_exit:
// DataOut: a1 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d2:<invalid> a4:<invalid> a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d0:<invalid>



word32 fn0000127C(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1
// Preserved: a7
fn0000127C_entry:
// DataOut: d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000127C:
	word32 a7_5 = Mem0[0x00003D90:word32]
	word32 v7_10 = Mem0[a7_5 - 4:word32]
	word32 v5_7 = Mem0[a7_5 - 8:word32]
	word32 a5_12
	*a5Out = v7_10
	word32 d1_13 = Mem0[v7_10 + 4:word32]
	branch d1_13 == 0x00000000 l0000129E
// DataOut: a2 a4 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001296:
	execPrivate1()
// DataOut: a2 a4 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000BD86 a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid>

l0000129E:
	CloseLibrary(Mem0[0x00003D98:word32])
	branch v5_7 == 0x00000000 l000012B0
// DataOut: a2 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000BD86 a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid>

l000012AE:
	fn0000126C(v5_7)
// DataOut: a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000BD86 a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d0:<invalid>

l000012B0:
	FreeMem(v7_10, Mem0[v7_10:word32])
	word32 a1_21
	*a1Out = v7_10
	return d1_13
// DataOut: a1 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> a4:0000BD86 a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d0:<invalid>

fn0000127C_exit:
// DataOut: a1 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp a4:0000BD86 a6:<invalid> a2:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> d0:d2



word32 fn000012D0(word32 dwArg04, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d1
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
// Stack args: Stack +0004(32)
fn000012D0_entry:
// DataOut: d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000012D0:
	word32 a3_11 = 0x00003ED8
	branch 0x00003ED8 == 0x00000000 l00001308
// DataOut: a3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l000012E2:
	word32 d2_43 = 1
	branch Mem0[0x00003EDC:word32] == 0x00000000 l000012F6
// DataOut: a3 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 a3:00003ED8 d0:0x00003ED8 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l000012EA:
	d2_43 = d2_43 + 0x00000001
	branch Mem0[0x00003ED8 + (d2_43 << 0x00000002):word32] != 0x00000000 l000012EA
// DataOut: a3 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 a3:00003ED8 d0:<invalid> d2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l000012F6:
	word32 d2_54 = d2_43 - 0x00000001
	branch d2_54 == 0x00000000 l00001308
// DataOut: a3 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 a3:00003ED8 d0:<invalid> d2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l000012FA:
	word32 d0_60 = d2_54 << 0x00000002
	word32 a2_62 = Mem0[a3_11 + d0_60:word32]
	word32 a7_67
	word32 a2_69
	word32 d2_70
	word32 d0_71
	byte CVZN_72
	bool Z_73
	byte ZN_74
	bool C_75
	bool V_76
	byte CVZNX_77
	word32 d1_78
	word32 a1_79
	word32 a5_80
	call a2_62 (retsize: 4; depth: 16)
		uses: a1,a2_62,a3_58,a5,a7_8,C_50,CVZN_13,CVZNX_61,d0_60,d1,d2_57,dwLoc04_4,dwLoc08_7,dwLoc0C_10,dwLoc10,V_49,Z_56,ZN_51
		defs: a1_79,a2_69,a3_68,a5_80,a7_67,C_75,CVZN_72,CVZNX_77,d0_71,d1_78,d2_70,V_76,Z_73,ZN_74
	d2_54 = d2_70 - 0x00000001
	branch d2_70 != 0x00000001 l000012FA
// DataOut: a3 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 a3:00003ED8 d0:<invalid> d2:<invalid> a2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l00001308:
	word32 a1_31
	word32 a5_32
	return fn00001278(dwArg04, out a1_31, out a5_32)
// DataOut: a1 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 a3:00003ED8 d0:<invalid> d2:<invalid> a2:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3

fn000012D0_exit:
// DataOut: a1 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 d0:<invalid> d2:d2 a2:a2 a4:<invalid> a6:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> -16(fp):<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3



word32 fn0000131C(word32 dwArg04, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d1
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
// Stack args: Stack +0004(32)
fn0000131C_entry:
	*a1Out = a1
	*a5Out = a5
// DataOut: a1 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l0000131C:
	branch Mem0[0x00003DC0:word32] != 0x00000000 l0000134E
// DataOut: a1 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00001328:
	word32 a3_35 = Mem0[0x00003EE8:word32]
	Mem38[0x00003DC0:word32] = 1
	branch a3_35 == 0x00000000 l00001346
// DataOut: a3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l0000133A:
	word32 a2_60 = Mem38[a3_35 + 4:word32]
	word32 a7_61
	word32 a3_62
	word32 a2_63
	byte ZN_64
	bool C_65
	bool V_66
	bool Z_67
	word32 d0_68
	byte CVZN_69
	word32 d1_70
	word32 a1_71
	word32 a5_72
	call a2_60 (retsize: 4; depth: 12)
		uses: a1,a2_60,a3_59,a5,a7_5,C_11,CVZN_40,d0_39,d1,dwLoc04_4,dwLoc08_7,dwLoc0C,V_12,Z_41,ZN_9
		defs: a1_71,a2_63,a3_62,a5_72,a7_61,C_65,CVZN_69,d0_68,d1_70,V_66,Z_67,ZN_64
	a3_35 = Mem38[a3_62:word32]
	branch a3_35 != 0x00000000 l0000133A
// DataOut: a3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 a3:<invalid> d0:<invalid> a2:<invalid> -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32) Stack +0004(32)

l00001346:
	word32 a1_55
	word32 a5_56
	d1 = fn000012D0(dwArg04, out a1_55, out a5_56)
// DataOut: a1 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 a3:<invalid> d0:<invalid> a2:<invalid> -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l0000134E:
	return d1
// DataOut: a1 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 a3:<invalid> d0:<invalid> a2:<invalid> a4:<invalid> a6:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3

fn0000131C_exit:
// DataOut: a1 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp a2:a2 a3:a3 d0:<invalid> a4:<invalid> a6:<invalid> a5:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3



void fn00001354(word32 a5, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
// DataOut: a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001354:
	word32 a3_51 = 0x00003ED0
	word32 d0_20 = 0x00003ECC
	branch 0x00003ECC == 0x00000000 l00001372
// DataOut: a3 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00001366:
	branch Mem0[0x00003ED0:word32] == 0x00000000 l00001372
// DataOut: a3 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 a3:00003ED0 d0:0x00003ECC -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l0000136A:
	word32 a7_60
	word32 a2_62
	byte CVZN_64
	bool Z_65
	byte ZN_66
	bool C_67
	bool V_68
	word32 a1_70
	word32 d1_71
	call Mem0[a3_51:word32] (retsize: 4; depth: 12)
		uses: a1,a2_54,a3_53,a5,a7_5,C_49,CVZN_10,d0_9,d1,dwLoc04_4,dwLoc08_7,dwLoc0C,dwLoc10,dwLoc14,V_50,Z_48,ZN_47
		defs: a1_70,a2_62,a3_61,a5_69,a7_60,C_67,CVZN_64,d0_63,d1_71,V_68,Z_65,ZN_66
	branch Mem0[a3_51:word32] != 0x00000000 l0000136A
// DataOut: a3 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 a3:<invalid> d0:<invalid> a2:<invalid> -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00001372:
	word32 a1_38
	word32 a5_39
	fn0000131C(fn00001390(d0_20, a5), out a1_38, out a5_39)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 a3:<invalid> d0:<invalid> a2:<invalid> -8(fp):a2 -4(fp):a3

fn00001354_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a3:a3 d0:<invalid> a2:a2 a0:<invalid> d1:<invalid> a4:<invalid> a6:<invalid> a5:<invalid> a1:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):a2 -4(fp):a3



word32 fn00001390(word32 d0, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5 d0
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00001390_entry:
// DataOut: a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32)

l00001390:
	word32 d1_6
	word32 a1_7
	fn00002F18(d0, 0x000013DC, out d1_6, out a1_7)
	fn0000141C(d1_6, a1_7, a5, 0x000013F0)
	word32 d0_23 = dwLoc08
	branch dwLoc08 - dwLoc04 == 0x00000000 l000013D8
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0014(32)

l000013BE:
	word32 d1_53
	word32 a1_54
	d0_23 = fn00002F18(fn00001408(dwLoc08, dwLoc04), 0x000013F8, out d1_53, out a1_54)
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> -24(fp):000013F0 -20(fp):fp - 0x00000008 -16(fp):fp - 0x00000004 -12(fp):000013DC

l000013D8:
	return d0_23
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp - 0x00000008 a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid>

fn00001390_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid>



word32 fn00001408(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZN d0 d1
// Preserved: a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn00001408_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0004(32) Stack +0008(32)

l00001408:
	word32 d0_11 = dwArg04
	branch dwArg08 - dwArg04 >= 0x00000000 l00001416
// DataOut: d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp

l00001416:
	d0_11 = dwArg08
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d1:<invalid> d0:<invalid>

l00001414:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d1:<invalid> d0:<invalid>

l00001418:
	return d0_11
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d1:<invalid> d0:<invalid>

fn00001408_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d1:<invalid> d0:<invalid>



void fn0000141C(word32 d1, word32 a1, word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 a5 d1
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
// Stack args: Stack +0004(32)
fn0000141C_entry:
// DataOut: a1 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l0000141C:
	fn00001468(d1, a1, a5, Mem0[0x00003EF4:word32], dwArg04, fp + 8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp

fn0000141C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> d0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):fp + 8



word32 fn00001438(byte bArg07, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX a0 d0
// Preserved: a2 a7
// Stack args: Stack +0007(8) Stack +0008(32)
fn00001438_entry:
// DataOut: a1 a3 a4 a5 a6 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0007(8) Stack +0008(32)

l00001438:
	word32 d0_13 = dwArg08
	branch dwArg08 == 0x00000000 l00001462
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: Stack +0007(8)

l00001444:
	d0_13 = Mem0[dwArg08 + 4:word32]
	branch d0_13 - Mem0[dwArg08 + 8:word32] >=u 0x00000000 l00001456
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> -4(fp):a2
// LocalsOut: Stack +0007(8)

l0000144E:
	Mem37[Mem0[dwArg08 + 4:word32]:byte] = bArg07
// DataOut: a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> -4(fp):a2

l00001456:
	Mem29[dwArg08 + 20:word32] = Mem0[dwArg08 + 20:word32] + 0x00000001
	Mem32[dwArg08 + 4:word32] = Mem29[dwArg08 + 4:word32] - 0x00000001
// DataOut: a1 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> -4(fp):a2

l00001462:
	return d0_13
// DataOut: a1 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> -4(fp):a2

fn00001438_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp a2:a2 d0:<invalid> a0:<invalid> -4(fp):a2



void fn00001468(word32 d1, word32 a1, word32 a5, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 a5 d1
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00001468_entry:
// DataOut: a1 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00001468:
	word32 a7_149 = fp + -120
	word32 d2_139 = dwArg0C
	word32 a4_146 = dwArg08
	word32 a2_1010 = dwArg04
	word32 d4_140 = 0
	word32 d5_1223 = 0
	branch Mem0[dwArg08:byte] == 0x00 l0000246A
// DataOut: a1 a2 a4 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000148A:
	word32 d3_165
	word32 d3_150 = 0
	branch Mem0[a4_146:byte] != 0x25 l00002368
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002368:
	word32 d0_2924 = (int32) Mem0[0x00002BED + (DPB(d0, Mem0[a4_146:byte], 0) & 0x000000FF):byte]
	d0 = d0_2924 & 0x00000008
	branch (d0_2924 & 0x00000008) == 0x00000000 l000023F4
// DataOut: a2 a4 a5 a7 d1 d2 d3 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000023F4:
	word32 a0_3041 = a2_1010 + 24
	Mem3043[a0_3041:word32] = Mem0[a0_3041:word32] | 0x00000001
	word32 a0_3044 = a2_1010 + 20
	word32 v103_3045 = Mem3043[a0_3044:word32] - 0x00000001
	Mem3046[a0_3044:word32] = v103_3045
	CV = cond(v103_3045) (alias)
	branch v103_3045 < 0x00000000 l00002426
// DataOut: a2 a4 a5 a7 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002426:
	word32 a7_3111 = a7_149 - 4
	Mem3113[a7_3111:word32] = a2_1010
	Mem3120[a7_3111 + 48:word32] = fn00002604(dwArg00, out d1, out a1, out a5)
// DataOut: a1 a2 a4 a5 a7 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002406:
	a1 = a2_1010 + 4
	word32 a0_3086 = Mem3046[a1:word32]
	word32 a7_3087 = a7_149 - 4
	Mem3089[a7_3087:word32] = a2_1010
	Mem3093[a1:word32] = a0_3086 + 1
	a2_1010 = Mem3093[a7_3087:word32]
	byte v107_3097 = Mem3093[a0_3086:byte]
	Mem3101[a7_3087:word32] = d1
	Mem3106[a7_3087 + 48:word32] = (int32) v107_3097
	d1 = Mem3106[a7_3087:word32]
// DataOut: a1 a2 a4 a5 a7 d1 d2 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002434:
	d0 = (int32) (int16) Mem3046[a4_146:byte]
	d5_1223 = Mem3046[a7_149 + 44:word32]
	d3_165 = 0x00000001
	d4_140 = d4_140 + 0x00000001
	branch d0 - Mem3046[a7_149 + 44:word32] == 0x00000000 l0000245E
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002448:
	branch d5_1223 == 0xFFFFFFFF l0000245A
// DataOut: a1 a2 a4 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0x00000001 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002450:
	word32 a7_3076 = a7_149 - 4
	Mem3078[a7_3076:word32] = a2_1010
	Mem3081[a7_3076 - 4:word32] = d5_1223
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a4 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0x00000001 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000245A:
	d3_165 = 0x00000000
	d4_140 = d4_140 - 0x00000001
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0x00000001 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002384:
	word32 d0_2972
	word32 a0_2962 = a2_1010 + 24
	Mem2964[a0_2962:word32] = Mem0[a0_2962:word32] | 0x00000001
	word32 a0_2965 = a2_1010 + 20
	word32 v88_2966 = Mem2964[a0_2965:word32] - 0x00000001
	Mem2967[a0_2965:word32] = v88_2966
	CV = cond(v88_2966) (alias)
	branch v88_2966 < 0x00000000 l000023AE
// DataOut: a2 a4 a5 a7 d2 d3 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000023AE:
	Mem3032[a7_149 - 4:word32] = a2_1010
	word32 d1_3034
	d0_2972 = fn00002604(dwArg00, out d1_3034, out a1, out a5)
	d1 = d0_2972
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002396:
	a1 = a2_1010 + 4
	word32 a0_3013 = Mem2967[a1:word32]
	word32 a7_3014 = a7_149 - 4
	Mem3016[a7_3014:word32] = a2_1010
	Mem3020[a1:word32] = a0_3013 + 1
	byte v92_3024 = Mem3020[a0_3013:byte]
	a2_1010 = Mem3020[a7_3014:word32]
	d0_2972 = DPB(d0, v92_3024, 0)
	d1 = (int32) v92_3024
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000023BA:
	word32 d0_2988 = (int32) Mem2967[0x00002BED + (DPB(d0_2972, (byte) d1, 0) & 0x000000FF):byte]
	d5_1223 = d1
	d4_140 = d4_140 + 0x00000001
	d0 = d0_2988 & 0x00000008
	branch (d0_2988 & 0x00000008) != 0x00000000 l00002384
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000023DC:
	branch d1 == 0xFFFFFFFF l000023EE
// DataOut: a1 a2 a4 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000023E4:
	word32 a7_3003 = a7_149 - 4
	Mem3005[a7_3003:word32] = a2_1010
	Mem3008[a7_3003 - 4:word32] = d1
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a4 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000023EE:
	d4_140 = d4_140 - 0x00000001
	d3_165 = 1
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000245E:
	a4_146 = a4_146 + 1
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001494:
	Mem186[a7_149 + 72:byte] = 0x69
	Mem187[a7_149 + 73:byte] = 0x00
	word32 a3_188 = a4_146 + 1
	word32 d0_196 = (int32) Mem187[0x00002BED + (int32) Mem187[a3_188:byte]:byte]
	word32 d6_184 = -1
	d0 = d0_196 & 0x00000004
	branch (d0_196 & 0x00000004) == 0x00000000 l00001518
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000014BC:
	word32 d0_2867 = (int32) Mem187[0x00002BED + (int32) Mem187[a3_188:byte]:byte]
	d6_184 = 0
	d0 = d0_2867 & 0x00000004
	branch (d0_2867 & 0x00000004) == 0x00000000 l00001518
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:-1 a3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000014D6:
	word32 a7_2878 = a7_149 - 4
	Mem2880[a7_2878:word32] = d2_139
	word32 d1_2885 = __swap(10) *u (word16) d6_184
	word32 d0_2892 = (word16) d6_184 *u 10 + DPB(__swap(DPB(d1_2885, (word16) (d1_2885 + __swap(d6_184) *u 0x000A), 0)), 0x0000, 0)
	a3_188 = a3_188 + 1
	word32 d1_2899 = (int32) Mem2880[a3_188:byte]
	word32 d0_2911 = (int32) Mem2880[0x00002BED + (int32) Mem2880[a3_188:byte]:byte]
	d2_139 = Mem2880[a7_2878:word32]
	d1 = d1_2899 - 0x00000030
	d6_184 = d1_2899 - 0x00000030 + d0_2892
	d0 = d0_2911 & 0x00000004
	branch (d0_2911 & 0x00000004) != 0x00000000 l000014D6
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001518:
	branch Mem187[a3_188:byte] == 0x68 l00001542
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000151E:
	branch Mem187[a3_188:byte] == 0x6C l00001542
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001524:
	branch Mem187[a3_188:byte] == 0x4C l00001542
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000152A:
	branch Mem187[a3_188:byte] == 0x7A l00001542
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001530:
	branch Mem187[a3_188:byte] == 0x6A l00001542
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001536:
	branch Mem187[a3_188:byte] == 0x74 l00001542
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000153C:
	branch Mem187[a3_188:byte] != 0x2A l000015AA
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001542:
	d7 = DPB(d7, Mem187[a7_149 + 73:byte], 0)
	d1 = DPB(d1, Mem187[a7_149 + 72:byte], 0)
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000154A:
	branch Mem187[a3_188:byte] != 0x2A l00001554
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001554:
	branch (byte) d1 != 0x68 l00001564
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000155A:
	branch Mem187[a3_188:byte] != 0x68 l00001564
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001564:
	branch (byte) d1 != 0x6C l00001574
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000156A:
	branch Mem187[a3_188:byte] != 0x6C l00001574
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001574:
	d1 = DPB(d1, Mem187[a3_188:byte], 0)
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001570:
	d1 = 1
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001560:
	d1 = 2
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001550:
	d7 = 1
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001576:
	a3_188 = a3_188 + 1
	branch Mem187[a3_188:byte] == 0x68 l0000154A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000157E:
	branch Mem187[a3_188:byte] == 0x6C l0000154A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001584:
	branch Mem187[a3_188:byte] == 0x4C l0000154A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000158A:
	branch Mem187[a3_188:byte] == 0x7A l0000154A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001590:
	branch Mem187[a3_188:byte] == 0x6A l0000154A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001596:
	branch Mem187[a3_188:byte] == 0x74 l0000154A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000159C:
	branch Mem187[a3_188:byte] == 0x2A l0000154A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015A2:
	Mem2815[a7_149 + 72:byte] = (byte) d1
	Mem2817[a7_149 + 73:byte] = (byte) d7
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015AA:
	branch Mem187[a7_149 + 72:byte] != 0x6A l000015B8
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015B2:
	Mem2776[a7_149 + 72:byte] = 0x01
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015B8:
	branch Mem187[a7_149 + 72:byte] != 0x74 l000015C6
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015C0:
	Mem2773[a7_149 + 72:byte] = 0x69
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015C6:
	branch Mem187[a7_149 + 72:byte] != 0x7A l000015D4
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015CE:
	Mem2770[a7_149 + 72:byte] = 0x6C
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015D4:
	byte v71_228 = Mem187[a3_188:byte]
	word32 a3_1633 = a3_188 + 1
	d7 = DPB(d7, v71_228, 0)
	branch v71_228 == 0x00 l0000164A
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d7:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015D8:
	branch v71_228 == 0x25 l0000164A
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015DE:
	branch v71_228 == 0x63 l0000164A
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015E4:
	branch v71_228 == 0x6E l0000164A
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015EA:
	branch v71_228 == 0x5B l0000164A
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:0 d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000015F0:
	word32 d0_2716
	word32 a0_2706 = a2_1010 + 24
	Mem2708[a0_2706:word32] = Mem187[a0_2706:word32] | 0x00000001
	word32 a0_2709 = a2_1010 + 20
	word32 v77_2710 = Mem2708[a0_2709:word32] - 0x00000001
	Mem2711[a0_2709:word32] = v77_2710
	CV = cond(v77_2710) (alias)
	branch v77_2710 < 0x00000000 l0000161A
// DataOut: a2 a3 a5 a7 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000161A:
	Mem2760[a7_149 - 4:word32] = a2_1010
	word32 d1_2762
	d0_2716 = fn00002604(dwArg00, out d1_2762, out a1, out a5)
	d1 = d0_2716
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001602:
	a1 = a2_1010 + 4
	word32 a0_2741 = Mem2711[a1:word32]
	word32 a7_2742 = a7_149 - 4
	Mem2744[a7_2742:word32] = a2_1010
	Mem2748[a1:word32] = a0_2741 + 1
	byte v83_2752 = Mem2748[a0_2741:byte]
	a2_1010 = Mem2748[a7_2742:word32]
	d0_2716 = DPB(d0, v83_2752, 0)
	d1 = (int32) v83_2752
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001626:
	word32 d0_2732 = (int32) Mem2711[0x00002BED + (DPB(d0_2716, (byte) d1, 0) & 0x000000FF):byte]
	d5_1223 = d1
	d4_140 = d4_140 + 0x00000001
	d0 = d0_2732 & 0x00000008
	branch (d0_2732 & 0x00000008) != 0x00000000 l000015F0
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001648:
	d3_150 = 1
// DataOut: a1 a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> a1:<invalid> d1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000164A:
	word32 d1_251 = DPB(d1, v71_228 - 0x25, 0)
	branch v71_228 == 0x25 l00001A96
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A96:
	word32 a0_2602 = a2_1010 + 24
	Mem2604[a0_2602:word32] = Mem187[a0_2602:word32] | 0x00000001
	word32 a0_2605 = a2_1010 + 20
	word32 v127_2606 = Mem2604[a0_2605:word32] - 0x00000001
	Mem2607[a0_2605:word32] = v127_2606
	CV = cond(v127_2606) (alias)
	branch v127_2606 < 0x00000000 l00001AC8
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001AC8:
	word32 a7_2668 = a7_149 - 4
	Mem2670[a7_2668:word32] = a2_1010
	d0 = fn00002604(dwArg00, out d1, out a1, out a5)
	Mem2677[a7_2668 + 48:word32] = d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001AA8:
	a1 = a2_1010 + 4
	word32 a0_2643 = Mem2607[a1:word32]
	word32 a7_2644 = a7_149 - 4
	Mem2646[a7_2644:word32] = a2_1010
	Mem2650[a1:word32] = a0_2643 + 1
	byte v131_2654 = Mem2650[a0_2643:byte]
	a2_1010 = Mem2650[a7_2644:word32]
	Mem2658[a7_2644:word32] = d1_251
	Mem2663[a7_2644 + 48:word32] = (int32) v131_2654
	d0 = DPB(d0, v131_2654, 0)
	d1 = Mem2663[a7_2644:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001AD6:
	d5_1223 = Mem2607[a7_149 + 44:word32]
	d3_165 = d3_150 + 0x00000001
	d4_140 = d4_140 + 0x00000001
	branch Mem2607[a7_149 + 44:word32] == 0x00000025 l00002362
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001AEA:
	branch d5_1223 == 0xFFFFFFFF l00001AFC
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001AF2:
	word32 a7_2633 = a7_149 - 4
	Mem2635[a7_2633:word32] = a2_1010
	Mem2638[a7_2633 - 4:word32] = d5_1223
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001AFC:
	d3_165 = d3_165 - 0x00000001
	d4_140 = d4_140 - 0x00000001
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001654:
	branch v71_228 == 0x5B l00001792
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001792:
	Mem2147[a7_149 + 44:byte] = 0x00
	branch Mem2147[a3_1633:byte] != 0x5E l000017A4
// DataOut: a2 a3 a5 a7 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000179C:
	Mem2599[a7_149 + 44:byte] = 0x01
	a3_1633 = a3_1633 + 1
// DataOut: a2 a3 a5 a7 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017A4:
	Mem2152[a7_149 + 52:word32] = 0x00000000
	byte v455_2153 = Mem2152[a7_149 + 44:byte]
	d7 = DPB(d7, v455_2153, 0)
	word32 d1_2155 = Mem2152[a7_149 + 52:word32]
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017B0:
	word32 d5_2166
	branch v455_2153 == 0x00 l000017BC
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017BC:
	d5_2166 = 0
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017B4:
	d5_2166 = 0x000000FF
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017BE:
	Mem2169[a5 + d1_2155:byte] = (byte) d5_2166
	d1_2155 = d1_2155 + 0x00000001
	branch d1_2155 <u 0x00000020 l000017B0
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017D0:
	Mem2176[a7_149 + 132:word32] = d2_139
	Mem2178[a7_149 + 44:byte] = v455_2153
	byte v464_2179 = Mem2178[a7_149 + 44:byte]
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017DC:
	branch Mem2178[a3_1633:byte] == 0x00 l00001852
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017E0:
	byte v465_2499 = Mem2178[a3_1633:byte]
	a3_1633 = a3_1633 + 1
	d1_2155 = DPB(d1_2155, v465_2499, 0)
	branch Mem2178[a3_1633:byte] != 0x2D l000017F4
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017E8:
	branch v465_2499 - Mem2178[a3_1633 + 1:byte] >=u 0x00 l000017F4
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017F4:
	d7 = DPB(d7, v465_2499, 0)
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017EE:
	a3_1633 = a3_1633 + 2
	d7 = DPB(d7, Mem2178[a3_1633 + 1:byte], 0)
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000017F6:
	word32 d5_2509 = (int32) v465_2499
	d0 = (int32) (byte) d7
	branch d0 - d5_2509 <u 0x00000000 l0000184C
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001802:
	branch v464_2179 == 0x00 l00001826
// DataOut: a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001826:
	word32 a0_2568 = a7_149 + 78 + (d5_2509 >>u 0x00000003)
	d1_2155 = (int32) Mem2178[a0_2568:byte]
	Mem2580[a0_2568:byte] = (byte) (1 << (d5_2509 & 7) | d1_2155)
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001806:
	word32 a0_2550 = a7_149 + 78 + (d5_2509 >>u 0x00000003)
	d1_2155 = (int32) Mem2178[a0_2550:byte]
	Mem2563[a0_2550:byte] = (byte) (~(1 << (d5_2509 & 7)) & d1_2155)
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001842:
	d5_2509 = d5_2509 + 0x00000001
	d0 = (int32) (byte) d7
	branch d0 - d5_2509 >=u 0x00000000 l00001802
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000184C:
	branch Mem2178[a3_1633:byte] != 0x5D l000017DC
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001852:
	word32 a6_2210
	d2_139 = Mem2178[a7_149 + 132:word32]
	a3_1633 = a3_1633 + 1
	branch Mem2178[a7_149 + 73:byte] != 0x00 l00001872
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001872:
	a6_2210 = 0x00000000
// DataOut: a2 a3 a5 a6 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000185E:
	word32 d0_2490 = d2_139 + 0x00000003 >>u 0x00000002
	d2_139 = (d0_2490 << 0x00000002) + 0x00000004
	d0 = d0_2490 << 0x00000002
	a6_2210 = Mem2178[d2_139 + -4:word32]
// DataOut: a2 a3 a5 a6 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001874:
	word32 a0_2211 = a2_1010 + 24
	Mem2213[a0_2211:word32] = Mem2178[a0_2211:word32] | 0x00000001
	word32 a0_2214 = a2_1010 + 20
	word32 v482_2215 = Mem2213[a0_2214:word32] - 0x00000001
	Mem2216[a0_2214:word32] = v482_2215
	CV = cond(v482_2215) (alias)
	branch v482_2215 < 0x00000000 l000018A6
// DataOut: a2 a3 a5 a6 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000018A6:
	word32 a7_2476 = a7_149 - 4
	Mem2478[a7_2476:word32] = a2_1010
	d0 = fn00002604(dwArg00, out d1, out a1, out a5)
	Mem2485[a7_2476 + 48:word32] = d0
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001886:
	a1 = a2_1010 + 4
	word32 a0_2451 = Mem2216[a1:word32]
	word32 a7_2452 = a7_149 - 4
	Mem2454[a7_2452:word32] = a2_1010
	Mem2458[a1:word32] = a0_2451 + 1
	byte v486_2462 = Mem2458[a0_2451:byte]
	a2_1010 = Mem2458[a7_2452:word32]
	Mem2466[a7_2452:word32] = d1_2155
	Mem2471[a7_2452 + 48:word32] = (int32) v486_2462
	d0 = DPB(d0, v486_2462, 0)
	d1 = Mem2471[a7_2452:word32]
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000018B4:
	d5_1223 = Mem2216[a7_149 + 44:word32]
	word32 d3_2227 = d3_150 + 0x00000001
	word32 d4_2228 = d4_140 + 0x00000001
	branch Mem2216[a7_149 + 44:word32] == 0xFFFFFFFF l00001982
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000018C8:
	word32 a7_2282 = a7_149 - 4
	Mem2284[a7_2282:word32] = a7_149 + 78
	Mem2287[a7_2282 - 4:word32] = a1
	Mem2289[a7_2282 - 0x00000008:word32] = 0x00000008
	Mem2292[a7_2282 - 0x0000000C:word32] = d5_1223
	d1 = (int32) Mem2292[Mem2292[a7_2282:word32] + fn0000254C(dwArg00, dwArg04):byte]
	a1 = Mem2292[a7_2282 - 0x00000004:word32]
	d0 = 1 << (d5_1223 & 7) & d1
	branch d0 == 0x00000000 l00001982
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000018F8:
	branch d6_184 - d3_2227 <u 0x00000000 l00001982
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000018FE:
	byte v499_2320 = Mem2292[a7_2282 + 77:byte]
	d7 = DPB(d7, v499_2320, 0)
// DataOut: a2 a3 a5 a6 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001902:
	branch v499_2320 != 0x00 l00001908
// DataOut: a2 a3 a5 a6 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001906:
	Mem2447[a6_2210:byte] = (byte) d5_1223
	a6_2210 = a6_2210 + 1
// DataOut: a2 a3 a5 a6 a7 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001908:
	word32 a0_2343 = a2_1010 + 24
	Mem2345[a0_2343:word32] = Mem2292[a0_2343:word32] | 0x00000001
	word32 a0_2346 = a2_1010 + 20
	word32 v504_2347 = Mem2345[a0_2346:word32] - 0x00000001
	Mem2348[a0_2346:word32] = v504_2347
	CV = cond(v504_2347) (alias)
	branch v504_2347 < 0x00000000 l00001932
// DataOut: a2 a3 a5 a6 a7 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001932:
	Mem2437[a7_149 - 4:word32] = a2_1010
	word32 d1_2439
	d0 = fn00002604(dwArg00, out d1_2439, out a1, out a5)
	d1 = d0
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000191A:
	a1 = a2_1010 + 4
	word32 a0_2418 = Mem2348[a1:word32]
	word32 a7_2419 = a7_149 - 4
	Mem2421[a7_2419:word32] = a2_1010
	Mem2425[a1:word32] = a0_2418 + 1
	byte v508_2429 = Mem2425[a0_2418:byte]
	a2_1010 = Mem2425[a7_2419:word32]
	d0 = DPB(d0, v508_2429, 0)
	d1 = (int32) v508_2429
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000193E:
	d5_1223 = d1
	d3_2227 = d3_2227 + 0x00000001
	d4_2228 = d4_2228 + 0x00000001
	branch d1 == 0xFFFFFFFF l0000197E
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000194C:
	word32 a7_2379 = a7_149 - 4
	Mem2381[a7_2379:word32] = a7_149 + 78
	Mem2384[a7_2379 - 4:word32] = a1
	Mem2386[a7_2379 - 0x00000008:word32] = 0x00000008
	Mem2389[a7_2379 - 0x0000000C:word32] = d1
	d1 = (int32) Mem2389[Mem2389[a7_2379:word32] + fn0000254C(dwArg00, dwArg04):byte]
	a1 = Mem2389[a7_2379 - 0x00000004:word32]
	d0 = 1 << (d1 & 7) & d1
	branch d0 == 0x00000000 l0000197E
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000197A:
	branch d6_184 - d3_2227 >=u 0x00000000 l00001902
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000197E:
	Mem2376[a7_149 + 73:byte] = v499_2320
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001982:
	branch d5_1223 == 0xFFFFFFFF l00001994
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000198A:
	word32 a7_2272 = a7_149 - 4
	Mem2274[a7_2272:word32] = a2_1010
	Mem2277[a7_2272 - 4:word32] = d5_1223
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001994:
	d3_165 = d3_2227 - 0x00000001
	d4_140 = d4_2228 - 0x00000001
	branch Mem2216[a7_149 + 73:byte] != 0x00 l00002362
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019A0:
	branch d3_165 == 0x00000000 l00002362
// DataOut: a1 a2 a3 a5 a6 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019A6:
	Mem2267[a6_2210:byte] = 0x00
	Mem2270[a7_149 + 60:word32] = Mem2267[a7_149 + 60:word32] + 0x00000001
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000165C:
	word32 d1_285 = DPB(d1, v71_228 - 0x63, 0)
	branch v71_228 == 0x63 l00001672
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001672:
	branch d6_184 != 0xFFFFFFFF l0000167C
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000167A:
	d6_184 = 1
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000167C:
	word32 a1_1923
	branch Mem187[a7_149 + 73:byte] != 0x00 l00001696
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001696:
	a1_1923 = 0x00000000
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001682:
	d0 = d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002
	d2_139 = d0 + 0x00000004
	a1_1923 = Mem187[d0:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001698:
	word32 a0_1926 = a2_1010 + 24
	Mem1928[a0_1926:word32] = Mem187[a0_1926:word32] | 0x00000001
	word32 a0_1929 = a2_1010 + 20
	Mem1931[a0_1929:word32] = Mem1928[a0_1929:word32] - 0x00000001
	Mem1934[a7_149 + 44:word32] = a1_1923
	CV = DPB(CV, false, 0) (alias)
	branch CV l000016D0
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000016D0:
	word32 a1_2116 = Mem1934[a7_149 + 44:word32]
	word32 a7_2117 = a7_149 - 4
	Mem2119[a7_2117:word32] = a2_1010
	Mem2121[a7_2117 + 48:word32] = a1_2116
	word32 a1_2124
	d0 = fn00002604(dwArg00, out d1, out a1_2124, out a5)
	Mem2128[a7_2117 + 56:word32] = d0
	Mem2131[a7_2117 + 48:word32] = Mem2128[a7_2117 + 48:word32]
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000016B0:
	word32 a1_2090 = a2_1010 + 4
	word32 a0_2091 = Mem1934[a1_2090:word32]
	word32 a7_2092 = a7_149 - 4
	Mem2094[a7_2092:word32] = a2_1010
	Mem2098[a1_2090:word32] = a0_2091 + 1
	byte v235_2102 = Mem2098[a0_2091:byte]
	a2_1010 = Mem2098[a7_2092:word32]
	Mem2106[a7_2092:word32] = d1_285
	Mem2111[a7_2092 + 56:word32] = (int32) v235_2102
	d0 = DPB(d0, v235_2102, 0)
	d1 = Mem2111[a7_2092:word32]
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000016EE:
	a1 = Mem1934[a7_149 + 44:word32]
	d5_1223 = Mem1934[a7_149 + 52:word32]
	word32 d3_1947 = d3_150 + 0x00000001
	word32 d4_1948 = d4_140 + 0x00000001
	branch Mem1934[a7_149 + 52:word32] == 0xFFFFFFFF l00001766
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001704:
	Mem2000[a7_149 + 44:word32] = a1
	branch d6_184 - d3_1947 <u 0x00000000 l00001766
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000170C:
	byte v249_2004 = Mem2000[a7_149 + 73:byte]
	d7 = DPB(d7, v249_2004, 0)
	word32 a4_2007 = Mem2000[a7_149 + 44:word32]
// DataOut: a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001714:
	branch v249_2004 != 0x00 l0000171A
// DataOut: a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001718:
	Mem2087[a4_2007:byte] = (byte) d5_1223
	a4_2007 = a4_2007 + 1
// DataOut: a2 a3 a4 a5 a7 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000171A:
	word32 a0_2028 = a2_1010 + 24
	Mem2030[a0_2028:word32] = Mem2000[a0_2028:word32] | 0x00000001
	word32 a0_2031 = a2_1010 + 20
	word32 v256_2032 = Mem2030[a0_2031:word32] - 0x00000001
	Mem2033[a0_2031:word32] = v256_2032
	CV = cond(v256_2032) (alias)
	branch v256_2032 < 0x00000000 l00001744
// DataOut: a2 a3 a4 a5 a7 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001744:
	Mem2077[a7_149 - 4:word32] = a2_1010
	word32 d1_2079
	d0 = fn00002604(dwArg00, out d1_2079, out a1, out a5)
	d1 = d0
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000172C:
	a1 = a2_1010 + 4
	word32 a0_2058 = Mem2033[a1:word32]
	word32 a7_2059 = a7_149 - 4
	Mem2061[a7_2059:word32] = a2_1010
	Mem2065[a1:word32] = a0_2058 + 1
	byte v260_2069 = Mem2065[a0_2058:byte]
	a2_1010 = Mem2065[a7_2059:word32]
	d0 = DPB(d0, v260_2069, 0)
	d1 = (int32) v260_2069
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001750:
	d5_1223 = d1
	d3_1947 = d3_1947 + 0x00000001
	d4_1948 = d4_1948 + 0x00000001
	branch d1 == 0xFFFFFFFF l00001762
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000175E:
	branch d6_184 - d3_1947 >=u 0x00000000 l00001714
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001762:
	Mem2052[a7_149 + 73:byte] = v249_2004
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001766:
	branch d5_1223 == 0xFFFFFFFF l00001778
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000176E:
	word32 a7_1990 = a7_149 - 4
	Mem1992[a7_1990:word32] = a2_1010
	Mem1995[a7_1990 - 4:word32] = d5_1223
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001778:
	d3_165 = d3_1947 - 0x00000001
	d4_140 = d4_1948 - 0x00000001
	branch Mem1934[a7_149 + 73:byte] != 0x00 l00002362
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001784:
	branch d3_165 == 0x00000000 l00002362
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000178A:
	Mem1988[a7_149 + 60:word32] = Mem1934[a7_149 + 60:word32] + 0x00000001
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001660:
	d1 = DPB(d1, v71_228 - 0x6E, 0)
	branch v71_228 == 0x6E l00001B04
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B04:
	branch Mem187[a7_149 + 73:byte] != 0x00 l00001B9C
// DataOut: a1 a2 a3 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B0C:
	branch Mem187[a7_149 + 72:byte] != 0x01 l00001B2E
// DataOut: a1 a2 a3 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B2E:
	branch Mem187[a7_149 + 72:byte] != 0x6C l00001B4C
// DataOut: a1 a2 a3 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B4C:
	branch Mem187[a7_149 + 72:byte] != 0x68 l00001B6A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B6A:
	branch Mem187[a7_149 + 72:byte] != 0x02 l00001B88
// DataOut: a1 a2 a3 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B88:
	d0 = d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1912[Mem187[d0:word32]:word32] = d4_140
	d2_139 = d0 + 0x00000004
// DataOut: a1 a2 a3 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B72:
	d0 = d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1900[Mem187[d0:word32]:byte] = (byte) d4_140
	d2_139 = d0 + 0x00000004
// DataOut: a1 a2 a3 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B54:
	d0 = d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1885[Mem187[d0:word32]:word16] = (word16) d4_140
	d2_139 = d0 + 0x00000004
// DataOut: a1 a2 a3 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B36:
	d0 = d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1870[Mem187[d0:word32]:word32] = d4_140
	d2_139 = d0 + 0x00000004
// DataOut: a1 a2 a3 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B14:
	d0 = d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 a0_1849 = Mem187[d0:word32]
	Mem1851[a0_1849 + 4:word32] = d4_140
	Mem1852[a0_1849:word32] = 0x00000000
	d2_139 = d0 + 0x00000004
// DataOut: a1 a2 a3 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001B9C:
	Mem1836[a7_149 + 60:word32] = Mem187[a7_149 + 60:word32] + 0x00000001
	d3_165 = 1
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001668:
	d1 = DPB(d1, v71_228 - 0x73, 0)
	branch v71_228 == 0x73 l000019B0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019B0:
	branch Mem187[a7_149 + 73:byte] != 0x00 l000019CA
// DataOut: a1 a2 a3 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019CA:
	a5 = 0x00000000
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019B6:
	d0 = d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002
	d2_139 = d0 + 0x00000004
	a5 = Mem187[d0:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019CC:
	branch d5_1223 == 0xFFFFFFFF l00001A68
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019D6:
	word32 d0_1700 = (int32) Mem187[0x00002BED + (DPB(d0, (byte) d5_1223, 0) & 0x000000FF):byte]
	d0 = d0_1700 & 0x00000008
	branch (d0_1700 & 0x00000008) != 0x00000000 l00001A68
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019F2:
	branch d6_184 - d3_150 <u 0x00000000 l00001A68
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019F6:
	byte v154_1709 = Mem187[a7_149 + 73:byte]
	d7 = DPB(d7, v154_1709, 0)
// DataOut: a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019FA:
	branch v154_1709 != 0x00 l00001A00
// DataOut: a2 a3 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000019FE:
	Mem1808[a5:byte] = (byte) d5_1223
	a5 = a5 + 1
// DataOut: a2 a3 a5 a7 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A00:
	word32 a0_1731 = a2_1010 + 24
	Mem1733[a0_1731:word32] = Mem187[a0_1731:word32] | 0x00000001
	word32 a0_1734 = a2_1010 + 20
	word32 v160_1735 = Mem1733[a0_1734:word32] - 0x00000001
	Mem1736[a0_1734:word32] = v160_1735
	CV = cond(v160_1735) (alias)
	branch v160_1735 < 0x00000000 l00001A2A
// DataOut: a2 a3 a5 a7 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A2A:
	Mem1798[a7_149 - 4:word32] = a2_1010
	word32 d1_1800
	d0 = fn00002604(dwArg00, out d1_1800, out a1, out a5)
	d1 = d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A12:
	a1 = a2_1010 + 4
	word32 a0_1779 = Mem1736[a1:word32]
	word32 a7_1780 = a7_149 - 4
	Mem1782[a7_1780:word32] = a2_1010
	Mem1786[a1:word32] = a0_1779 + 1
	byte v164_1790 = Mem1786[a0_1779:byte]
	a2_1010 = Mem1786[a7_1780:word32]
	d0 = DPB(d0, v164_1790, 0)
	d1 = (int32) v164_1790
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A36:
	d5_1223 = d1
	d3_150 = d3_150 + 0x00000001
	d4_140 = d4_140 + 0x00000001
	branch d1 == 0xFFFFFFFF l00001A64
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A44:
	word32 d0_1769 = (int32) Mem1736[0x00002BED + (DPB(d0, (byte) d1, 0) & 0x000000FF):byte]
	d0 = d0_1769 & 0x00000008
	branch (d0_1769 & 0x00000008) != 0x00000000 l00001A64
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A60:
	branch d6_184 - d3_150 >=u 0x00000000 l000019FA
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A64:
	Mem1760[a7_149 + 73:byte] = v154_1709
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A68:
	branch d5_1223 == 0xFFFFFFFF l00001A7A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A70:
	word32 a7_1684 = a7_149 - 4
	Mem1686[a7_1684:word32] = a2_1010
	Mem1689[a7_1684 - 4:word32] = d5_1223
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A7A:
	d3_165 = d3_150 - 0x00000001
	d4_140 = d4_140 - 0x00000001
	branch Mem187[a7_149 + 73:byte] != 0x00 l00002362
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A86:
	branch d3_165 == 0x00000000 l00002362
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001A8C:
	Mem1679[a5:byte] = 0x00
	Mem1682[a7_149 + 60:word32] = Mem1679[a7_149 + 60:word32] + 0x00000001
	a5 = a5 + 1
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a5:<invalid> a1:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000166E:
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001BA6:
	Mem296[a7_149 + 48:word32] = 0x00000000
	Mem297[a7_149 + 44:word32] = 0x00000000
	Mem298[a7_149 + 110:word32] = 0x00000000
	branch v71_228 != 0x00 l00001BB8
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001BB6:
	a3_1633 = a3_1633 - 1
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001BB8:
	branch v71_228 != 0x70 l00001BC6
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001BBE:
	Mem1630[a7_149 + 72:byte] = 0x6C
	d7 = 120
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001BC6:
	branch d5_1223 != 0x0000002D l00001BD4
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001BCE:
	branch (byte) d7 != 0x75 l00001BDC
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001BD4:
	branch d5_1223 != 0x0000002B l00001C2C
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001BDC:
	branch d6_184 - d3_150 <u 0x00000000 l00001C2C
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001BE0:
	Mem1564[a7_149 + 110:word32] = d5_1223
	word32 a0_1565 = a2_1010 + 24
	Mem1567[a0_1565:word32] = Mem1564[a0_1565:word32] | 0x00000001
	word32 a0_1568 = a2_1010 + 20
	word32 v186_1569 = Mem1567[a0_1568:word32] - 0x00000001
	Mem1570[a0_1568:word32] = v186_1569
	CV = cond(v186_1569) (alias)
	branch v186_1569 < 0x00000000 l00001C16
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001C16:
	word32 a7_1611 = a7_149 - 4
	Mem1613[a7_1611:word32] = a2_1010
	d0 = fn00002604(dwArg00, out d1, out a1, out a5)
	Mem1620[a7_1611 + 56:word32] = d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001BF6:
	a1 = a2_1010 + 4
	word32 a0_1586 = Mem1570[a1:word32]
	word32 a7_1587 = a7_149 - 4
	Mem1589[a7_1587:word32] = a2_1010
	Mem1593[a1:word32] = a0_1586 + 1
	byte v190_1597 = Mem1593[a0_1586:byte]
	a2_1010 = Mem1593[a7_1587:word32]
	Mem1601[a7_1587:word32] = d1
	Mem1606[a7_1587 + 56:word32] = (int32) v190_1597
	d0 = DPB(d0, v190_1597, 0)
	d1 = Mem1606[a7_1587:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001C24:
	d5_1223 = Mem1570[a7_149 + 52:word32]
	d3_150 = d3_150 + 0x00000001
	d4_140 = d4_140 + 0x00000001
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001C2C:
	branch (byte) d7 != 0x69 l00001D9E
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001C34:
	branch d5_1223 != 0x00000030 l00001D60
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001C3E:
	branch d6_184 - d3_150 <u 0x00000000 l00001D60
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D60:
	word32 d0_1317 = (int32) Mem298[0x00002BED + (DPB(d0, (byte) d5_1223, 0) & 0x000000FF):byte]
	d0 = d0_1317 & 0x00000004
	branch (d0_1317 & 0x00000004) != 0x00000000 l00001D9E
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D7C:
	word32 d0_1330 = (int32) Mem298[0x00002BED + (DPB(d0_1317 & 0x00000004, (byte) d5_1223, 0) & 0x000000FF):byte]
	d0 = d0_1330 & 0x00000044
	branch (d0_1330 & 0x00000044) == 0x00000000 l00001D9E
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D98:
	branch d6_184 - d3_150 <u 0x00000000 l00001D9E
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D9C:
	d7 = 120
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001C44:
	word32 d0_1354
	word32 a0_1344 = a2_1010 + 24
	Mem1346[a0_1344:word32] = Mem298[a0_1344:word32] | 0x00000001
	word32 a0_1347 = a2_1010 + 20
	word32 v202_1348 = Mem1346[a0_1347:word32] - 0x00000001
	Mem1349[a0_1347:word32] = v202_1348
	CV = cond(v202_1348) (alias)
	branch v202_1348 < 0x00000000 l00001C76
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001C76:
	word32 a7_1547 = a7_149 - 4
	Mem1549[a7_1547:word32] = a2_1010
	d0_1354 = fn00002604(dwArg00, out d1, out a1, out a5)
	Mem1556[a7_1547 + 56:word32] = d0_1354
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001C56:
	a1 = a2_1010 + 4
	word32 a0_1522 = Mem1349[a1:word32]
	word32 a7_1523 = a7_149 - 4
	Mem1525[a7_1523:word32] = a2_1010
	Mem1529[a1:word32] = a0_1522 + 1
	byte v206_1533 = Mem1529[a0_1522:byte]
	a2_1010 = Mem1529[a7_1523:word32]
	Mem1537[a7_1523:word32] = d1
	Mem1542[a7_1523 + 56:word32] = (int32) v206_1533
	d0_1354 = DPB(d0, v206_1533, 0)
	d1 = Mem1542[a7_1523:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001C84:
	Mem1360[a7_149 + 64:word32] = Mem1349[a7_149 + 52:word32]
	word32 d0_1365 = DPB(d0_1354, Mem1360[a7_149 + 55:byte], 0)
	word32 d3_1361 = d3_150 + 0x00000001
	d0 = d0_1365 & 0x000000FF
	branch __btst(Mem1360[0x00002BED + (int32) ((int16) (d0_1365 & 0x000000FF)):byte], 0x0000) l00001CAA
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001CA6:
	d0 = DPB(d0_1365 & 0x000000FF, (byte) (d0_1365 & 0x000000FF) | 0x20, 0)
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002BEC d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001CAA:
	branch d0 != 0x00000078 l00001D42
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002BEC d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001CB4:
	branch d6_184 - d3_1361 <u 0x00000000 l00001D42
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002BEC d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D42:
	d7 = 111
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002BEC d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001CBA:
	word32 d0_1429
	word32 a0_1419 = a2_1010 + 24
	Mem1421[a0_1419:word32] = Mem1360[a0_1419:word32] | 0x00000001
	word32 a0_1422 = a2_1010 + 20
	word32 v220_1423 = Mem1421[a0_1422:word32] - 0x00000001
	Mem1424[a0_1422:word32] = v220_1423
	CV = cond(v220_1423) (alias)
	branch v220_1423 < 0x00000000 l00001CEC
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002BEC d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001CEC:
	word32 a7_1504 = a7_149 - 4
	Mem1506[a7_1504:word32] = a2_1010
	d0_1429 = fn00002604(dwArg00, out d1, out a1, out a5)
	Mem1513[a7_1504 + 56:word32] = d0_1429
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001CCC:
	a1 = a2_1010 + 4
	word32 a0_1479 = Mem1424[a1:word32]
	word32 a7_1480 = a7_149 - 4
	Mem1482[a7_1480:word32] = a2_1010
	Mem1486[a1:word32] = a0_1479 + 1
	byte v224_1490 = Mem1486[a0_1479:byte]
	a2_1010 = Mem1486[a7_1480:word32]
	Mem1494[a7_1480:word32] = d1
	Mem1499[a7_1480 + 56:word32] = (int32) v224_1490
	d0_1429 = DPB(d0, v224_1490, 0)
	d1 = Mem1499[a7_1480:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001CFA:
	Mem1435[a7_149 + 74:word32] = Mem1424[a7_149 + 52:word32]
	word32 d0_1446 = (int32) Mem1435[0x00002BED + (DPB(d0_1429, (byte) d5_1223, 0) & 0x000000FF):byte]
	d0 = d0_1446 & 0x00000044
	branch (d0_1446 & 0x00000044) == 0x00000000 l00001D26
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D20:
	branch d6_184 - (d3_1361 + 0x00000001) <u 0x00000000 l00001D26
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D24:
	d7 = 120
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D26:
	branch Mem1435[a7_149 + 74:word32] == 0xFFFFFFFF l00001D3C
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D30:
	word32 a7_1463 = a7_149 - 4
	Mem1465[a7_1463:word32] = a2_1010
	Mem1469[a7_1463 - 4:word32] = Mem1465[a7_1463 + 78:word32]
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D3C:
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D44:
	branch Mem1360[a7_149 + 64:word32] == 0xFFFFFFFF l00001D5A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D4E:
	word32 a7_1403 = a7_149 - 4
	Mem1405[a7_1403:word32] = a2_1010
	Mem1409[a7_1403 - 4:word32] = Mem1405[a7_1403 + 68:word32]
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D5A:
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001D9E:
	word32 d3_1151 = d3_150
	word32 d4_1152 = d4_140
	branch (byte) d7 != 0x78 l00001ED2
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001DA6:
	branch d5_1223 != 0x00000030 l00001ED2
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001DB0:
	branch d6_184 - d3_150 <u 0x00000000 l00001ED2
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001DB6:
	word32 d0_1106
	word32 a0_1096 = a2_1010 + 24
	Mem1098[a0_1096:word32] = Mem298[a0_1096:word32] | 0x00000001
	word32 a0_1099 = a2_1010 + 20
	word32 v287_1100 = Mem1098[a0_1099:word32] - 0x00000001
	Mem1101[a0_1099:word32] = v287_1100
	CV = cond(v287_1100) (alias)
	branch v287_1100 < 0x00000000 l00001DE8
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001DE8:
	word32 a7_1294 = a7_149 - 4
	Mem1296[a7_1294:word32] = a2_1010
	d0_1106 = fn00002604(dwArg00, out d1, out a1, out a5)
	Mem1303[a7_1294 + 56:word32] = d0_1106
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001DC8:
	a1 = a2_1010 + 4
	word32 a0_1269 = Mem1101[a1:word32]
	word32 a7_1270 = a7_149 - 4
	Mem1272[a7_1270:word32] = a2_1010
	Mem1276[a1:word32] = a0_1269 + 1
	byte v291_1280 = Mem1276[a0_1269:byte]
	a2_1010 = Mem1276[a7_1270:word32]
	Mem1284[a7_1270:word32] = d1
	Mem1289[a7_1270 + 56:word32] = (int32) v291_1280
	d0_1106 = DPB(d0, v291_1280, 0)
	d1 = Mem1289[a7_1270:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001DF6:
	Mem1112[a7_149 + 64:word32] = Mem1101[a7_149 + 52:word32]
	word32 d0_1117 = DPB(d0_1106, Mem1112[a7_149 + 55:byte], 0)
	word32 d3_1113 = d3_150 + 0x00000001
	word32 d4_1114 = d4_140 + 0x00000001
	d0 = d0_1117 & 0x000000FF
	branch __btst(Mem1112[0x00002BED + (int32) ((int16) (d0_1117 & 0x000000FF)):byte], 0x0000) l00001E1C
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001E18:
	d0 = DPB(d0_1117 & 0x000000FF, (byte) (d0_1117 & 0x000000FF) | 0x20, 0)
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002BEC d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001E1C:
	branch d0 != 0x00000078 l00001EB8
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002BEC d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001E26:
	branch d6_184 - d3_1113 <u 0x00000000 l00001EB8
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002BEC d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001E2C:
	word32 d0_1177
	word32 a0_1167 = a2_1010 + 24
	Mem1169[a0_1167:word32] = Mem1112[a0_1167:word32] | 0x00000001
	word32 a0_1170 = a2_1010 + 20
	word32 v304_1171 = Mem1169[a0_1170:word32] - 0x00000001
	Mem1172[a0_1170:word32] = v304_1171
	CV = cond(v304_1171) (alias)
	branch v304_1171 < 0x00000000 l00001E5E
// DataOut: a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:00002BEC d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001E5E:
	word32 a7_1251 = a7_149 - 4
	Mem1253[a7_1251:word32] = a2_1010
	d0_1177 = fn00002604(dwArg00, out d1, out a1, out a5)
	Mem1260[a7_1251 + 56:word32] = d0_1177
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001E3E:
	a1 = a2_1010 + 4
	word32 a0_1226 = Mem1172[a1:word32]
	word32 a7_1227 = a7_149 - 4
	Mem1229[a7_1227:word32] = a2_1010
	Mem1233[a1:word32] = a0_1226 + 1
	byte v308_1237 = Mem1233[a0_1226:byte]
	a2_1010 = Mem1233[a7_1227:word32]
	Mem1241[a7_1227:word32] = d1
	Mem1246[a7_1227 + 56:word32] = (int32) v308_1237
	d0_1177 = DPB(d0, v308_1237, 0)
	d1 = Mem1246[a7_1227:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001E6C:
	Mem1183[a7_149 + 74:word32] = Mem1172[a7_149 + 52:word32]
	word32 d0_1194 = (int32) Mem1183[0x00002BED + (DPB(d0_1177, Mem1183[a7_149 + 55:byte], 0) & 0x000000FF):byte]
	d3_1151 = d3_1113 + 0x00000001
	d4_1152 = d4_1114 + 0x00000001
	d0 = d0_1194 & 0x00000044
	branch (d0_1194 & 0x00000044) == 0x00000000 l00001E9E
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001E94:
	branch d6_184 - (d3_1113 + 0x00000001) <u 0x00000000 l00001E9E
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001E9E:
	branch Mem1183[a7_149 + 74:word32] == 0xFFFFFFFF l00001EB4
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001EA8:
	word32 a7_1210 = a7_149 - 4
	Mem1212[a7_1210:word32] = a2_1010
	Mem1216[a7_1210 - 4:word32] = Mem1212[a7_1210 + 78:word32]
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001EB4:
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001EB8:
	branch Mem1112[a7_149 + 64:word32] == 0xFFFFFFFF l00001ECE
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001EC2:
	word32 a7_1154 = a7_149 - 4
	Mem1156[a7_1154:word32] = a2_1010
	Mem1160[a7_1154 - 4:word32] = Mem1156[a7_1154 + 68:word32]
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001ECE:
	d3_1151 = d3_1113 - 0x00000001
	d4_1152 = d4_1114 - 0x00000001
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001E98:
	d5_1223 = Mem1183[a7_149 + 74:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001ED2:
	branch (byte) d7 == 0x78 l00001EDE
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001ED8:
	branch (byte) d7 != 0x58 l00001EE8
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001EE8:
	branch (byte) d7 != 0x6F l00001EF8
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001EF8:
	Mem1088[a7_149 + 52:word32] = 0x0000000A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001EEE:
	Mem1085[a7_149 + 52:word32] = 0x00000008
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001F00:
	Mem1082[a7_149 + 64:word32] = Mem298[a7_149 + 52:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001EDE:
	Mem1073[a7_149 + 64:word32] = 0x00000010
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001F06:
	Mem365[a7_149 + 114:word32] = Mem298[a7_149 + 64:word32]
	word32 d0_373 = (int32) Mem365[0x00002BED + (DPB(d0, (byte) d5_1223, 0) & 0x000000FF):byte]
	Mem376[a7_149 + 132:word32] = d2_139
	Mem378[a7_149 + 52:word32] = d4_1152
	Mem380[a7_149 + 74:byte] = (byte) d7
	d0 = d0_373 & 0x00000044
	branch (d0_373 & 0x00000044) == 0x00000000 l0000216E
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001F38:
	branch Mem380[a7_149 + 114:word32] != 0x0000000A l00001F6E
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001F42:
	word32 d0_1059 = (int32) Mem380[0x00002BED + (DPB(d0_373 & 0x00000044, (byte) d5_1223, 0) & 0x000000FF):byte]
	Mem1062[a7_149 + 132:word32] = d2_139
	Mem1064[a7_149 + 52:word32] = d4_1152
	Mem1066[a7_149 + 74:byte] = (byte) d7
	d0 = d0_1059 & 0x00000004
	branch (d0_1059 & 0x00000004) == 0x00000000 l0000216E
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001F6E:
	branch Mem380[a7_149 + 114:word32] != 0x00000008 l00001F8E
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001F78:
	Mem1044[a7_149 + 132:word32] = d2_139
	Mem1046[a7_149 + 52:word32] = d4_1152
	Mem1048[a7_149 + 74:byte] = (byte) d7
	branch d5_1223 > 0x00000037 l0000216E
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001F8E:
	Mem715[a7_149 + 132:word32] = d2_139
	Mem717[a7_149 + 52:word32] = d4_1152
	Mem719[a7_149 + 64:word32] = d6_184
	Mem721[a7_149 + 74:byte] = (byte) d7
	branch d6_184 - d3_1151 <u 0x00000000 l0000216E
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001FA4:
	d7 = Mem721[a7_149 + 114:word32]
	word32 a4_727 = Mem721[a7_149 + 64:word32]
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00001FAC:
	word32 d4_1039
	word32 a7_742 = a7_149 - 4
	Mem744[a7_742:word32] = d2_139
	word32 v347_748 = Mem744[a7_742:word32]
	Mem753[a7_742:word32] = d7 >> 31
	Mem756[a7_742 - 4:word32] = d7
	Mem759[a7_742 - 8:word32] = a1
	Mem763[a7_742 - 12:word32] = Mem759[a7_742 + 52:word32]
	Mem767[a7_742 - 16:word32] = Mem763[a7_742 + 48:word32]
	Mem770[a7_742 - 20:word32] = d7
	Mem772[a7_742 - 24:word32] = d7 >> 31
	word32 d1_774
	Mem781[a7_742 + 68:word32] = fn0000248C(dwArg00, dwArg04, dwArg08, dwArg0C, out d1_774)
	Mem783[a7_742 + 72:word32] = d1_774
	branch ((int32) Mem783[0x00002BED + (DPB(Mem783[a7_742:word32], (byte) d5_1223, 0) & 0x000000FF):byte] & 0x00000004) == 0x00000000 l0000200C
// DataOut: a2 a3 a4 a5 a7 d2 d3 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000200C:
	d4_1039 = 0
// DataOut: a2 a3 a4 a5 a7 d2 d3 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002002:
	d4_1039 = d5_1223 - 0x00000030
// DataOut: a2 a3 a4 a5 a7 d2 d3 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000200E:
	word32 d6_1034
	Mem807[a7_149 - 4:word32] = v347_748
	Mem815[a7_149 - 4:word32] = Mem807[a7_149 - 4:word32]
	word32 d2_817 = d4_1039 + Mem815[a7_149 + 68:word32]
	Mem821[a7_149 + 48:word32] = d2_817
	Mem825[a7_149 - 8:word32] = d3_1151
	word32 d0_809 = d4_1039 >> 31
	Mem830[a7_149 + 44:word32] = Mem825[a7_149 + 64:word32] + d0_809 + (d2_817 <u 0x00000000)
	word32 v367_831 = Mem830[a7_149 - 8:word32]
	word32 v368_834 = Mem830[a7_149 - 4:word32]
	branch ((int32) Mem830[0x00002BED + (DPB(d0_809, (byte) d5_1223, 0) & 0x000000FF):byte] & 0x00000001) == 0x00000000 l0000205E
// DataOut: a2 a3 a4 a5 a7 d2 d3 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000205E:
	d6_1034 = 0
// DataOut: a2 a3 a4 a5 a7 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002054:
	d6_1034 = d5_1223 - 0x00000037
// DataOut: a2 a3 a4 a5 a7 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002060:
	word32 d2_1029
	Mem856[a7_149 - 4:word32] = v368_834
	Mem864[a7_149 - 4:word32] = Mem856[a7_149 - 4:word32]
	word32 d2_866 = d6_1034 + Mem864[a7_149 + 48:word32]
	Mem870[a7_149 + 68:word32] = d2_866
	Mem874[a7_149 - 8:word32] = v367_831
	word32 d0_858 = d6_1034 >> 31
	Mem879[a7_149 + 64:word32] = Mem874[a7_149 + 44:word32] + d0_858 + (d2_866 <u 0x00000000)
	word32 v377_880 = Mem879[a7_149 - 8:word32]
	branch ((int32) Mem879[0x00002BED + (DPB(d0_858, (byte) d5_1223, 0) & 0x000000FF):byte] & 0x00000002) == 0x00000000 l000020B0
// DataOut: a2 a3 a4 a5 a7 d3 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000020B0:
	d2_1029 = 0
// DataOut: a2 a3 a4 a5 a7 d2 d3 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000020A6:
	d2_1029 = d5_1223 - 0x00000057
// DataOut: a2 a3 a4 a5 a7 d2 d3 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000020B2:
	word32 d0_1012
	Mem905[a7_149 - 4:word32] = d2_1029
	Mem913[a7_149 - 4:word32] = Mem905[a7_149 - 4:word32]
	word32 d2_915 = d2_1029 + Mem913[a7_149 + 68:word32]
	Mem919[a7_149 + 48:word32] = d2_915
	Mem923[a7_149 - 8:word32] = v377_880
	Mem927[a7_149 + 44:word32] = Mem923[a7_149 + 64:word32] + (d2_1029 >> 31) + (d2_915 <u 0x00000000)
	word32 a0_934 = a2_1010 + 24
	word32 v387_928 = Mem927[a7_149 - 8:word32]
	d2_139 = Mem927[a7_149 - 4:word32]
	Mem937[a0_934:word32] = Mem927[a0_934:word32] | 1
	word32 a0_938 = a2_1010 + 20
	word32 v390_939 = Mem937[a0_938:word32] - 0x00000001
	Mem940[a0_938:word32] = v390_939
	CV = cond(v390_939) (alias)
	branch v390_939 < 0x00000000 l00002104
// DataOut: a2 a3 a4 a5 a7 d2 d3 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002104:
	Mem1019[a7_149 - 4:word32] = a2_1010
	word32 d1_1021
	d0_1012 = fn00002604(dwArg00, out d1_1021, out a1, out a5)
	d1 = d0_1012
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:1 a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000020EC:
	a1 = a2_1010 + 4
	word32 a0_1000 = Mem940[a1:word32]
	Mem1003[a7_149 - 4:word32] = a2_1010
	Mem1007[a1:word32] = a0_1000 + 1
	byte v394_1011 = Mem1007[a0_1000:byte]
	a2_1010 = Mem1007[a7_149 - 4:word32]
	d0_1012 = DPB(1, v394_1011, 0)
	d1 = (int32) v394_1011
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:1 a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002110:
	Mem953[a7_149 + 52:word32] = Mem940[a7_149 + 52:word32] + 0x00000001
	word32 d0_962 = (int32) Mem953[0x00002BED + (DPB(d0_1012, (byte) d1, 0) & 0x000000FF):byte]
	d5_1223 = d1
	d3_1151 = v387_928 + 0x00000001
	d0 = d0_962 & 0x00000044
	branch (d0_962 & 0x00000044) == 0x00000000 l0000216E
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002134:
	branch d7 != 0x0000000A l00002158
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000213C:
	word32 d0_993 = (int32) Mem953[0x00002BED + (DPB(d0_962 & 0x00000044, (byte) d1, 0) & 0x000000FF):byte]
	d0 = d0_993 & 0x00000004
	branch (d0_993 & 0x00000004) == 0x00000000 l0000216E
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002158:
	branch d7 != 0x00000008 l00002168
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002160:
	branch d1 > 0x00000037 l0000216E
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002168:
	branch a4_727 - (v387_928 + 0x00000001) >=u 0x00000000 l00001FAC
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000216E:
	byte v396_402 = Mem380[a7_149 + 74:byte]
	d7 = DPB(d7, v396_402, 0)
	word32 d4_404 = Mem380[a7_149 + 52:word32]
	d2_139 = Mem380[a7_149 + 132:word32]
	branch Mem380[a7_149 + 110:word32] == 0x00000000 l000021A2
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002180:
	branch d3_1151 != 0x00000002 l000021A2
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002188:
	branch d5_1223 == 0xFFFFFFFF l0000219A
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002190:
	word32 a7_693 = a7_149 - 4
	Mem695[a7_693:word32] = a2_1010
	Mem698[a7_693 - 4:word32] = d5_1223
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000219A:
	d3_1151 = d3_1151 - 0x00000001
	d4_404 = d4_404 - 0x00000001
	d5_1223 = Mem380[a7_149 + 110:word32]
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021A2:
	branch d5_1223 == 0xFFFFFFFF l000021B4
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021AA:
	word32 a7_670 = a7_149 - 4
	Mem672[a7_670:word32] = a2_1010
	Mem675[a7_670 - 4:word32] = d5_1223
	d0 = fn00001438(bArg03, dwArg04)
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021B4:
	d3_165 = d3_1151 - 0x00000001
	d4_140 = d4_404 - 0x00000001
	branch Mem380[a7_149 + 73:byte] != 0x00 l00002362
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021C0:
	branch d3_165 == 0x00000000 l00002362
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021C6:
	branch v396_402 != 0x75 l00002288
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002288:
	branch Mem380[a7_149 + 110:word32] != 0x0000002D l000022A4
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000022A4:
	Mem666[a7_149 + 56:word32] = Mem380[a7_149 + 48:word32]
	Mem668[a7_149 + 52:word32] = Mem666[a7_149 + 44:word32]
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002292:
	word32 v441_650 = a7_149 + 44
	d1 = -Mem380[v441_650 + 4:word32]
	d0 = -Mem380[v441_650:word32] - (d1 <u 0x00000000)
	a7_149 = Mem380[a7_149 + 0x00000038:word32]
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000022B0:
	word32 a7_555 = a7_149 - 4
	Mem557[a7_555:word32] = d0
	Mem564[a7_555 + 48:byte] = Mem557[a7_555 + 76:byte] - 0x01
	a7_149 = a7_555 + 4
	branch Mem564[a7_555 + 48:byte] == 0x00 l000022DA
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000022DA:
	word32 d0_638 = d2_139 + 0x00000003 >>u 0x00000002
	d2_139 = (d0_638 << 0x00000002) + 0x00000004
	word32 a0_644 = Mem564[d2_139 + -4:word32]
	Mem646[a0_644 + 4:word32] = Mem564[a7_555 + 60:word32]
	Mem648[a0_644:word32] = Mem646[a7_555 + 56:word32]
	d0 = d0_638 << 0x00000002
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000022C4:
	byte v451_572 = Mem564[a7_555 + 48:byte] - 0x01
	Mem573[a7_555 + 48:byte] = v451_572
	branch v451_572 == 0x00 l0000232C
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000232C:
	d2_139 = (d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	d0 = Mem573[a7_555 + 60:word32]
	Mem634[Mem573[d2_139 + -4:word32]:byte] = (byte) d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000022CA:
	byte v452_576 = Mem573[a7_555 + 48:byte] - 0x66
	Mem577[a7_555 + 48:byte] = v452_576
	branch v452_576 == 0x00 l00002312
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002312:
	d2_139 = (d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	d0 = Mem577[a7_555 + 60:word32]
	Mem621[Mem577[d2_139 + -4:word32]:word16] = (word16) d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000022D2:
	byte v453_580 = Mem577[a7_555 + 48:byte] - 0x04
	Mem581[a7_555 + 48:byte] = v453_580
	branch v453_580 == 0x00 l000022F8
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000022F8:
	d2_139 = (d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	d0 = Mem581[a7_555 + 60:word32]
	Mem608[Mem581[d2_139 + -4:word32]:word32] = d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000022D8:
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002346:
	d2_139 = (d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	d0 = Mem581[a7_555 + 60:word32]
	Mem595[Mem581[d2_139 + -4:word32]:word32] = d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021CE:
	word32 a7_451 = a7_149 - 4
	Mem453[a7_451:word32] = d0
	Mem460[a7_451 + 56:byte] = Mem453[a7_451 + 76:byte] - 0x01
	a7_149 = a7_451 + 4
	branch Mem460[a7_451 + 56:byte] == 0x00 l000021F8
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021F8:
	word32 d0_534 = d2_139 + 0x00000003 >>u 0x00000002
	d2_139 = (d0_534 << 0x00000002) + 0x00000004
	word32 a0_540 = Mem460[d2_139 + -4:word32]
	Mem542[a0_540 + 4:word32] = Mem460[a7_451 + 52:word32]
	Mem544[a0_540:word32] = Mem542[a7_451 + 48:word32]
	d0 = d0_534 << 0x00000002
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021E2:
	byte v430_468 = Mem460[a7_451 + 56:byte] - 0x01
	Mem469[a7_451 + 56:byte] = v430_468
	branch v430_468 == 0x00 l00002250
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002250:
	d2_139 = (d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	d0 = Mem469[a7_451 + 52:word32]
	Mem530[Mem469[d2_139 + -4:word32]:byte] = (byte) d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021E8:
	byte v431_472 = Mem469[a7_451 + 56:byte] - 0x66
	Mem473[a7_451 + 56:byte] = v431_472
	branch v431_472 == 0x00 l00002234
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002234:
	d2_139 = (d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	d0 = Mem473[a7_451 + 52:word32]
	Mem517[Mem473[d2_139 + -4:word32]:word16] = (word16) d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021F0:
	byte v432_476 = Mem473[a7_451 + 56:byte] - 0x04
	Mem477[a7_451 + 56:byte] = v432_476
	branch v432_476 == 0x00 l00002218
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002218:
	d2_139 = (d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	d0 = Mem477[a7_451 + 52:word32]
	Mem504[Mem477[d2_139 + -4:word32]:word32] = d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l000021F6:
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000226C:
	d2_139 = (d2_139 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	d0 = Mem477[a7_451 + 52:word32]
	Mem491[Mem477[d2_139 + -4:word32]:word32] = d0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000235E:
	Mem449[a7_149 + 60:word32] = Mem380[a7_149 + 60:word32] + 0x00000001
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> a5:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002362:
	a4_146 = a3_1633
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d6:<invalid> a3:<invalid> d0:<invalid> a0:<invalid> d7:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002460:
	branch d3_165 == 0x00000000 l0000246A
// DataOut: a1 a2 a4 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002464:
	branch Mem0[a4_146:byte] != 0x00 l0000148A
// DataOut: a1 a2 a4 a5 a7 d1 d2 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000246A:
	branch d5_1223 != 0xFFFFFFFF l0000247C
// DataOut: a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002472:
	branch Mem0[a7_149 + 60:word32] != 0x00000000 l0000247C
// DataOut: a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l0000247C:
// DataOut: a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002478:
// DataOut: a7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d3:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

l00002480:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d2:<invalid> a4:<invalid> a2:<invalid> d4:<invalid> d5:<invalid> d0:<invalid> d3:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> d6:<invalid> a3:<invalid> d7:<invalid> a5:<invalid> a6:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>

fn00001468_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d2 a4:a4 a2:a2 d4:d4 d5:d5 d0:<invalid> d3:d3 d6:d6 d7:d7 a3:a3 a5:a5 a6:a6 a0:<invalid> a1:<invalid> d1:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):d2 -116(fp):d3 -112(fp):d4 -108(fp):d5 -104(fp):d6 -100(fp):d7 -96(fp):a2 -92(fp):a3 -88(fp):a4 -84(fp):a5 -80(fp):a6 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -47(fp):<invalid> -46(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> 12(fp):<invalid>



word32 fn0000248C(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn0000248C_entry:
// DataOut: a2 a3 a4 a5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l0000248C:
	word32 d0_24 = __swap(dwArg08)
	word32 d1_26 = __swap(dwArg10)
	word32 d4_29 = DPB(d4, (word16) dwArg08, 0) *u (word16) dwArg10
	word32 d1_32 = d1_26 *u (word16) d0_24
	word32 d2_38 = dwArg08 *u (word16) d1_26 + __swap(DPB(d4_29, (word16) d4_29 ^ (word16) d4_29, 0)) + dwArg10 *u (word16) d0_24
	branch d2_38 >=u 0x00000000 l000024C0
// DataOut: a2 a3 a4 a5 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +000C(32)

l000024BA:
	d1_32 = d1_32 + 0x00010000
// DataOut: a2 a3 a4 a5 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d5:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32) Stack +0004(32) Stack +000C(32)

l000024C0:
	word32 d2_42 = __swap(d2_38)
	word32 d3_56 = __swap(dwArg0C) *u (word16) dwArg08
	word32 d3_61 = __swap(DPB(d3_56, (word16) (d3_56 + __swap(dwArg08) *u (word16) dwArg0C), 0))
	word32 d3_72 = __swap(dwArg04) *u (word16) dwArg10
	word32 d3_77 = __swap(DPB(d3_72, (word16) (d3_72 + __swap(dwArg10) *u (word16) dwArg04), 0))
	word32 d1_49
	*d1Out = DPB(d2_42, (word16) d4_29, 0)
	return (int32) (word16) d2_42 + d1_32 + (dwArg0C *u (word16) dwArg08 + DPB(d3_61, (word16) d3_61 ^ (word16) d3_61, 0)) + (dwArg04 *u (word16) dwArg10 + DPB(d3_77, (word16) d3_77 ^ (word16) d3_77, 0))
// DataOut: a2 a3 a4 a5 d0 d1 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d5:<invalid> d6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> d3:<invalid> d4:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

fn0000248C_exit:
// DataOut: d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d5:d5 d6:d6 d0:<invalid> d1:<invalid> d2:d2 d3:d3 d4:d4 -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6



word32 fn0000254C(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a7
// Stack args: Stack +0004(32) Stack +0008(32)
fn0000254C_entry:
// DataOut: a2 a3 a5 a6 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l0000254C:
	branch dwArg04 > 0x00000000 l0000256C
// DataOut: a2 a3 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp

l0000256C:
	branch dwArg08 > 0x00000000 l0000256E_thunk_fn0000257E
// DataOut: a2 a3 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l0000256E_thunk_fn0000257E:
	word32 d1_47
	return fn0000257E(dwArg04, dwArg08, out d1_47)
// DataOut: a2 a3 a5 a6 d0 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l00002570:
	word32 d1_43
	return -fn0000257E(dwArg04, -dwArg08, out d1_43)
// DataOut: a2 a3 a5 a6 d0 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l00002556:
	word32 d0_20 = -dwArg04
	branch dwArg08 > 0x00000000 l00002564
// DataOut: a2 a3 a5 a6 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l00002564:
	word32 d1_32
	return -fn0000257E(d0_20, dwArg08, out d1_32)
// DataOut: a2 a3 a5 a6 d0 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

l0000255C:
	word32 d1_28
	return fn0000257E(d0_20, -dwArg08, out d1_28)
// DataOut: a2 a3 a5 a6 d0 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>

fn0000254C_exit:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> d1:<invalid>



word32 fn0000257E(word32 d0, word32 d1, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d1
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn0000257E_entry:
// DataOut: a2 a3 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000257E:
	word32 d1_158 = __swap(d1)
	word16 v10_8 = (word16) d1_158
	word32 d2_9 = DPB(d2, v10_8, 0)
	branch v10_8 != 0x0000 l000025A4
// DataOut: a2 a3 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000025A4:
	word32 d3_160 = 16
	branch (word16) d1_158 >=u 0x0080 l000025B2
// DataOut: a2 a3 a5 a6 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d1:<invalid> d2:<invalid> -4(fp):d2
// LocalsOut: fp(32)

l000025AE:
	d1_158 = __rol(d1_158, 0x00000008)
	d3_160 = 8
// DataOut: a2 a3 a5 a6 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:16 -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32)

l000025B2:
	branch (word16) d1_158 >=u 0x0800 l000025BC
// DataOut: a2 a3 a5 a6 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32)

l000025B8:
	d1_158 = __rol(d1_158, 0x00000004)
	d3_160 = DPB(d3_160, (word16) d3_160 - 0x0004, 0)
// DataOut: a2 a3 a5 a6 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32)

l000025BC:
	branch (word16) d1_158 >=u 0x2000 l000025C6
// DataOut: a2 a3 a5 a6 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32)

l000025C2:
	d1_158 = __rol(d1_158, 0x00000002)
	d3_160 = DPB(d3_160, (word16) d3_160 - 0x0002, 0)
// DataOut: a2 a3 a5 a6 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32)

l000025C6:
	branch (word16) d1_158 < 0x0000 l000025CE
// DataOut: a2 a3 a5 a6 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32)

l000025CA:
	d1_158 = __rol(d1_158, 0x00000001)
	d3_160 = DPB(d3_160, (word16) d3_160 - 0x0001, 0)
// DataOut: a2 a3 a5 a6 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32)

l000025CE:
	word32 d2_103 = DPB(__swap(DPB(d2, (word16) d0, 0)), 0x0000, 0) >>u d3_160
	word32 d0_100 = d0 >>u d3_160
	word32 d3_104 = __swap(d3_160)
	uint16 v39_106 = (uint16) (d0_100 /u (uint16) d1_158)
	word32 d1_115 = __swap(d1_158)
	word32 d3_110 = DPB(d3_104, v39_106, 0)
	word32 d0_117 = DPB(DPB(d0_100, (uint16) (d0_100 % (uint16) d1_158), 16), (word16) d2_103, 0) - DPB(d2_103, v39_106, 0) *u (word16) d1_115
	branch d0_117 >=u 0x00000000 l000025F0
// DataOut: a2 a3 a5 a6 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32)

l000025EA:
	d3_110 = DPB(d3_104, v39_106 - 0x0001, 0)
	d0_117 = d0_117 + d1_115
// DataOut: a2 a3 a5 a6 d0 d3 d4 d5 d6 d7
// DataOut (flags): C
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32)

l000025EE:
	branch d0_117 >=u 0x00000000 l000025EE
// DataOut: a2 a3 a5 a6 d0 d3 d4 d5 d6 d7
// DataOut (flags): C
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2
// LocalsOut: fp(32)

l000025F0:
	word32 d1_138
	*d1Out = __swap(__rol(d0_117, __swap(d3_110)))
	return (int32) (word16) d3_110
// DataOut: a2 a3 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 8 d1:<invalid> d2:<invalid> d3:<invalid> d0:<invalid> -8(fp):d3 -4(fp):d2

l00002586:
	word32 d0_29 = __swap(d0)
	word32 d1_30 = __swap(d1_158)
	word16 v13_32 = (word16) d0_29
	word32 d2_33 = DPB(__swap(d2_9), v13_32, 0)
	branch v13_32 == 0x0000 l00002594
// DataOut: a2 a3 a5 a6 d0 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d1:<invalid> d2:<invalid> -4(fp):d2

l00002590:
	uint16 v15_64 = (uint16) (d2_33 /u (uint16) d1_30)
	d2_33 = DPB(DPB(d2_33, (uint16) (d2_33 % (uint16) d1_30), 16), v15_64, 0)
	d0_29 = DPB(d0_29, v15_64, 0)
// DataOut: a2 a3 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d1:<invalid> d2:<invalid> d0:<invalid> -4(fp):d2

l00002594:
	word32 d0_38 = __swap(d0_29)
	word32 d2_40 = DPB(d2_33, (word16) d0_38, 0)
	uint16 v28_42 = (uint16) (d2_40 /u (uint16) d1_30)
	word32 d1_49
	*d1Out = DPB(d1_30, (word16) __swap(DPB(DPB(d2_40, (uint16) (d2_40 % (uint16) d1_30), 16), v28_42, 0)), 0)
	return DPB(d0_38, v28_42, 0)
// DataOut: a2 a3 a5 a6 d0 d1 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d1:<invalid> d2:<invalid> d0:<invalid> -4(fp):d2

fn0000257E_exit:
// DataOut: d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d1:<invalid> d2:d2 d0:<invalid> d3:d3 -8(fp):d3 -4(fp):d2



word32 fn00002604(word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d0 d1
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5
// Stack args: Stack +0004(32)
fn00002604_entry:
// DataOut: d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002604:
	word32 d0_141
	word32 a1_28
	word32 a5_29
	word32 d1_30
	*d1Out = fn00002BBC(out a1_28, out a5_29)
	branch dwArg04 != 0x00000000 l0000261C
// DataOut: a1 a2 a5 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000261C:
	branch (Mem0[dwArg04 + 24:word32] & 42) == 32 l0000262E
// DataOut: a1 a2 a5 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000262E:
	Mem87[dwArg04 + 24:word32] = Mem0[dwArg04 + 24:word32] | 1
	word32 d0_101 = Mem87[dwArg04 + 24:word32] & 0x00000200
	branch d0_101 == 0x00000000 l00002646
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00002640:
	word32 a1_215
	word32 a5_216
	d0_101 = fn00002AEC(out a1_215, out a5_216)
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00002646:
	branch Mem87[dwArg04 + 28:word32] != 0x00000000 l00002664
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000264C:
	d0_101 = Mem87[dwArg04 + 24:word32] & 4
	branch d0_101 == 0x00000000 l0000265C
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000265C:
	Mem213[dwArg04 + 28:word32] = 0x00000400
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00002654:
	Mem210[dwArg04 + 28:word32] = 1
	d0_101 = 1
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00002664:
	branch Mem87[dwArg04 + 8:word32] != 0x00000000 l000026A0
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000266A:
	word32 d4_176
	branch (Mem87[dwArg04 + 24:word32] & 0x00000080) == 0x00000000 l0000267E
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000267E:
	d4_176 = 1
// DataOut: a1 a2 a5 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> a1:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000267A:
	d4_176 = 2
// DataOut: a1 a2 a5 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> a1:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00002680:
	word32 d1_184
	word32 a1_185
	word32 d0_186 = fn00002718(d4_176 + Mem87[dwArg04 + 28:word32], out d1_184, out a1_185)
	d0_101 = d0_186
	branch d0_186 != 0x00000000 l00002698
// DataOut: a1 a2 a3 a5 d0 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> a1:<invalid> d4:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00002698:
	Mem196[dwArg04 + 8:word32] = d0_186 + 1
	word32 a1_194
	*a1Out = d0_186 + 1
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> -36(fp):<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000026A0:
	Mem120[dwArg04 + 4:word32] = Mem87[dwArg04 + 8:word32]
	word32 d1_123
	*d1Out = Mem120[dwArg04:word32]
	execPrivate2()
	Mem127[dwArg04 + 20:word32] = d0_101
	word32 v26_128 = Mem127[dwArg04 + 20:word32] - 0x00000001
	Mem129[dwArg04 + 20:word32] = v26_128
	branch v26_128 >= 0x00000000 l000026E6
// DataOut: a1 a2 a5 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d1:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -36(fp):<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000026E6:
	word32 a0_158 = Mem129[dwArg04 + 4:word32]
	Mem162[dwArg04 + 4:word32] = a0_158 + 1
	word32 a1_157
	*a1Out = dwArg04 + 4
	d0_141 = DPB(d0_101, Mem162[a0_158:byte], 0) & 0x000000FF
// DataOut: a1 a5 d0 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d3:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -36(fp):<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000026C4:
	branch Mem129[dwArg04 + 20:word32] != -1 l000026D6
// DataOut: a1 a2 a5 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d3:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -36(fp):<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000026D6:
	Mem153[dwArg04 + 24:word32] = Mem129[dwArg04 + 24:word32] | 16
// DataOut: a1 a2 a5 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:-1 d5:32 a0:<invalid> d3:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -36(fp):<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000026CC:
	Mem146[dwArg04 + 24:word32] = Mem129[dwArg04 + 24:word32] | 8
// DataOut: a1 a2 a5 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:-1 d5:32 a0:<invalid> d3:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -36(fp):<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000026DE:
	Mem140[dwArg04 + 20:word32] = 0x00000000
	d0_141 = -1
// DataOut: a1 a5 d0 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> d3:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -36(fp):<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00002694:
	d0_141 = -1
// DataOut: a1 a5 d0 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 a0:<invalid> a1:<invalid> d4:<invalid> a3:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> -36(fp):<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00002628:
	d0_141 = -1
// DataOut: a1 a5 d0 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00002616:
	d0_141 = -1
// DataOut: a1 a5 d0 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000026FA:
	return d0_141
// DataOut: a1 a5 d0 d1 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 a2:<invalid> d0:<invalid> d5:32 d1:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> a6:<invalid> a1:<invalid> a4:<invalid> d4:<invalid> a3:<invalid> a5:<invalid> -36(fp):<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

fn00002604_exit:
// DataOut: a1 a5 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp a2:a2 d0:<invalid> d2:d2 d3:d3 d4:d4 d5:d5 a3:a3 a4:a4 a6:a6 d1:<invalid> a0:<invalid> a1:<invalid> a5:<invalid> -36(fp):<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):d5 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6



word32 fn00002718(word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2
// Stack args: Stack +0004(32)
fn00002718_entry:
	*d1Out = d1
	*a1Out = a1
// DataOut: a1 a2 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002718:
	word32 d0_20
	branch dwArg04 != 0x00000000 l00002726
// DataOut: a1 a2 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002726:
	branch Mem0[0x00003DC8:word32] != 0x00000000 l0000274A
// DataOut: a1 a2 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d2:<invalid> -4(fp):d2
// LocalsOut: fp(32)

l0000272E:
	word32 a0_84 = Mem0[0x00003DC4:word32]
	Mem92[0x00000000:word32] = 0x00000000
	word32 d1_98
	word32 a1_99
	Mem102[0x00003DC8:word32] = fn00002A0C(dwLoc10, a0_84, a0_84, out d1_98, out a1_99)
// DataOut: a1 a2 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d2:<invalid> -4(fp):d2
// LocalsOut: fp(32)

l0000274A:
	branch Mem0[0x00003DC8:word32] != 0x00000000 l00002756
// DataOut: a1 a2 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d2:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2
// LocalsOut: fp(32)

l00002756:
	word32 d1_70
	word32 d0_71 = fn000028E8(Mem0[0x00003DC8:word32], dwArg04 + 4, out d1_70)
	word32 a1_72
	*a1Out = d0_71
	branch d0_71 != 0x00000000 l00002774
// DataOut: a1 a2 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d2:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

l00002774:
	Mem80[d0_71:word32] = dwArg04
	d0_20 = d0_71 + 4
// DataOut: a1 a2 a5 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d2:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

l00002770:
	d0_20 = 0
// DataOut: a1 a2 a5 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d2:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

l00002752:
	d0_20 = 0
// DataOut: a1 a2 a5 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d2:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

l00002722:
	d0_20 = 0
// DataOut: a1 a2 a5 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d2:<invalid> -4(fp):d2

l0000277C:
	return d0_20
// DataOut: a1 a2 a5 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 d2:<invalid> d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2

fn00002718_exit:
// DataOut: a1 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d2 d0:<invalid> a0:<invalid> a1:<invalid> d1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):d2



void fn00002784(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
// Stack args: Stack +0004(32)
fn00002784_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002784:
	branch dwArg04 == 0x00000000 l000027AE
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000278E:
	branch Mem0[0x00003DC8:word32] == 0x00000000 l000027AE
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid>
// LocalsOut: fp(32)

l00002796:
	fn0000284C(Mem0[0x00003DC8:word32], dwArg04 - 4, Mem0[dwArg04 - 4:word32] + 4)
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid>

l000027AE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

fn00002784_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>



void fn0000284C(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn0000284C_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l0000284C:
	branch Mem0[Mem0[0x00003D94:word32] + 20:word16] <u 0x0027 l0000287C
// DataOut: a4 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000287C:
	branch dwArg04 == 0x00000000 l000028E0
// DataOut: a4 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002880:
	branch dwArg08 == 0x00000000 l000028E0
// DataOut: a4 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> d2:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002884:
	word32 a3_113 = dwArg08 + -12
	branch dwArg0C - Mem0[dwArg04 + 20:word32] >=u 0x00000000 l000028C6
// DataOut: a3 a4 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> d2:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002890:
	word32 a2_87 = dwArg04
// DataOut: a2 a4 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> d2:<invalid> a3:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002892:
	a2_87 = Mem0[a2_87:word32]
	branch Mem0[a2_87:word32] == 0x00000000 l000028E0
// DataOut: a2 a4 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> d2:<invalid> a3:<invalid> a2:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002898:
	branch Mem0[a2_87 + 8:byte] == 0x00 l00002892
// DataOut: a2 a4 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> d2:<invalid> a3:<invalid> a2:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000289E:
	branch dwArg08 - Mem0[a2_87 + 20:word32] <u 0x00000000 l00002892
// DataOut: a2 a4 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> d2:<invalid> a3:<invalid> a2:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000028A4:
	branch dwArg08 - Mem0[a2_87 + 24:word32] >=u 0x00000000 l00002892
// DataOut: a2 a4 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> d2:<invalid> a3:<invalid> a2:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000028AA:
	Deallocate(a2_87, dwArg08, dwArg0C)
	branch Mem0[a2_87 + 28:word32] - Mem0[dwArg04 + 16:word32] != 0x00000000 l000028E0
// DataOut: a2
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> d2:<invalid> a3:<invalid> a2:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000028C4:
	a3_113 = a2_87
// DataOut: a3
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> d2:<invalid> a3:<invalid> a2:<invalid> a6:<invalid> a1:<invalid> d0:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000028C6:
	Remove(a3_113)
	word32 a3_82 = a3_113 - 4
	FreeMem(a3_82, Mem0[a3_82:word32])
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> d2:<invalid> a3:<invalid> a2:<invalid> a6:<invalid> a1:<invalid> d0:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000286A:
	FreePooled(dwArg08, dwArg04)
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000028E0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> a5:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> a1:<invalid> d0:<invalid> d2:<invalid> a3:<invalid> a2:<invalid> -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6

fn0000284C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp d1:<invalid> a5:a5 a4:a4 a0:<invalid> a6:a6 a1:<invalid> d0:<invalid> d2:d2 a2:a2 a3:a3 -24(fp):d2 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6



word32 fn000028E8(word32 dwArg04, word32 dwArg08, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
// Stack args: Stack +0004(32) Stack +0008(32)
fn000028E8_entry:
	*d1Out = d1
// DataOut: d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l000028E8:
	word32 d0_45
	branch Mem0[Mem0[0x00003D94:word32] + 20:word16] <u 0x0027 l00002914
// DataOut: a4 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002914:
	word32 a3_123 = 0x00000000
	branch dwArg04 == 0x00000000 l00002A04
// DataOut: a3 a4 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000291C:
	branch dwArg08 == 0x00000000 l00002A04
// DataOut: a3 a4 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:0x00000000 d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002922:
	branch dwArg08 - Mem0[dwArg04 + 20:word32] >=u 0x00000000 l000029D6
// DataOut: a4 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:0x00000000 d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000029D6:
	word32 d1_210 = Mem0[dwArg04 + 12:word32]
	*d1Out = d1_210
	word32 d0_213 = AllocMem(dwArg08 + 16, d1_210)
	a3_123 = d0_213
	branch d0_213 == 0x00000000 l00002A04
// DataOut: a3 a4 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:0x00000000 d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000029F0:
	Mem219[d0_213:word32] = dwArg08 + 16
	AddTail(dwArg04, d0_213 + 4)
	Mem225[d0_213 + 12:word32] = 0x00000000
	a3_123 = d0_213 + 16
// DataOut: a3 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> d3:<invalid> d1:<invalid> a6:<invalid> d0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000292A:
	word32 a5_104 = Mem0[dwArg04:word32]
// DataOut: a4 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:0x00000000 d4:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000292C:
	branch Mem0[a5_104:word32] == 0x00000000 l0000294E
// DataOut: a4 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> a6:<invalid> d0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000294E:
	word32 d3_164 = Mem0[dwArg04 + 16:word32] + 40
	word32 d1_166 = Mem0[dwArg04 + 12:word32]
	*d1Out = d1_166
	word32 d0_169 = AllocMem(d3_164, d1_166)
	a3_123 = d0_169
	branch d0_169 == 0x00000000 l00002A04
// DataOut: a3 a4 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> a6:<invalid> d0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000296C:
	Mem175[d0_169:word32] = d3_164
	Mem178[d0_169 + 12:byte] = 0x0A
	Mem182[d0_169 + 20:word32] = d0_169 + 40
	Mem184[d0_169 + 24:word32] = d0_169 + 40
	Mem186[Mem184[d0_169 + 20:word32]:word32] = 0x00000000
	word32 a2_187 = Mem186[d0_169 + 20:word32]
	Mem190[a2_187 + 4:word32] = Mem186[dwArg04 + 16:word32]
	Mem193[d0_169 + 32:word32] = Mem190[a2_187 + 4:word32]
	Mem197[d0_169 + 28:word32] = Mem193[d0_169 + 32:word32] + Mem193[d0_169 + 20:word32]
	AddHead(dwArg04, d0_169 + 4)
	a3_123 = Allocate(d0_169 + 4, dwArg08)
// DataOut: a3 a4 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> d3:<invalid> d1:<invalid> a6:<invalid> d0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002930:
	branch Mem0[a5_104 + 8:byte] == 0x00 l0000294A
// DataOut: a4 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> a6:<invalid> d0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002936:
	word32 d0_158 = Allocate(a5_104, dwArg08)
	a3_123 = d0_158
	branch d0_158 != 0x00000000 l000029BA
// DataOut: a3 a4 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> a6:<invalid> d0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000029BA:
	branch (Mem0[dwArg04 + 12:word32] & 0x00010000) == 0x00000000 l00002A04
// DataOut: a3 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> a6:<invalid> d0:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000029C6:
	word32 a2_131 = a3_123
	word32 d2_133 = dwArg08 + 0x00000007 >>u 0x00000003
// DataOut: a2 a3 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> a6:<invalid> d0:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000029CC:
	Mem137[a2_131:word32] = 0x00000000
	word32 a2_138 = a2_131 + 4
	Mem139[a2_138:word32] = 0x00000000
	a2_131 = a2_138 + 4
	d2_133 = d2_133 - 0x00000001
	branch d2_133 != 0x00000000 l000029CC
// DataOut: a2 a3 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> a6:<invalid> d0:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l000029D4:
// DataOut: a3 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> a6:<invalid> d0:<invalid> d3:<invalid> d1:<invalid> a2:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002A04:
	d0_45 = a3_123
// DataOut: d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> d3:<invalid> d1:<invalid> a6:<invalid> d0:<invalid> a1:<invalid> a5:<invalid> a2:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l0000294A:
	a5_104 = Mem0[a5_104:word32]
// DataOut: a4 a5 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a3:<invalid> d4:<invalid> a5:<invalid> a6:<invalid> d0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002902:
	d0_45 = AllocPooled(dwArg08, dwArg04)
// DataOut: d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6
// LocalsOut: fp(32)

l00002A06:
	return d0_45
// DataOut: d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 32 d2:<invalid> a4:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> a3:<invalid> d4:<invalid> d3:<invalid> d1:<invalid> a1:<invalid> a5:<invalid> a2:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6

fn000028E8_exit:
// DataOut: d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d2 a4:a4 a0:<invalid> a6:a6 d0:<invalid> d3:d3 d4:d4 a2:a2 a3:a3 a5:a5 d1:<invalid> a1:<invalid> -32(fp):d2 -28(fp):d3 -24(fp):d4 -20(fp):a2 -16(fp):a3 -12(fp):a4 -8(fp):a5 -4(fp):a6



word32 fn00002A0C(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & d1Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00002A0C_entry:
	*a1Out = a1
	*d1Out = d1
// DataOut: a1 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00002A0C:
	word32 d0_30
	branch Mem0[Mem0[0x00003D94:word32] + 20:word16] <u 0x0027 l00002A3A
// DataOut: a1 a2 a5 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002A3A:
	word32 a1_51
	*a1Out = 0x00000000
	branch dwArg08 - dwArg0C <u 0x00000000 l00002A74
// DataOut: a1 a2 a5 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d3:<invalid> a2:<invalid> a0:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32) Stack +0004(32)

l00002A40:
	word32 d0_71 = AllocMem(24, 0)
	word32 d1_70
	*d1Out = 0
	*a1Out = d0_71
	branch d0_71 == 0x00000000 l00002A74
// DataOut: a1 a2 a5 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d3:<invalid> a2:<invalid> a0:<invalid> a1:0x00000000 -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32) Stack +0004(32)

l00002A56:
	Mem78[d0_71:word32] = d0_71 + 4
	Mem79[d0_71 + 4:word32] = 0x00000000
	Mem81[d0_71 + 8:word32] = d0_71
	Mem83[d0_71 + 12:word32] = dwArg04
	Mem87[d0_71 + 16:word32] = dwArg08 + 0x00000007 & -8
	Mem89[d0_71 + 20:word32] = dwArg0C
// DataOut: a1 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d0:<invalid> d1:0 -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002A74:
	d0_30 = a1_51
// DataOut: a1 a5 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d3:<invalid> a2:<invalid> a0:<invalid> a1:<invalid> a6:<invalid> d0:<invalid> d1:0 -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002A26:
	word32 d1_44
	*d1Out = dwArg08
	d0_30 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
// DataOut: a1 a5 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d3:<invalid> a2:<invalid> a0:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002A76:
	return d0_30
// DataOut: a1 a5 d0 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 16 d3:<invalid> a2:<invalid> a0:<invalid> a6:<invalid> d0:<invalid> d1:<invalid> d2:<invalid> a1:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6

fn00002A0C_exit:
// DataOut: a1 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d3:d3 a2:a2 a0:<invalid> a6:a6 d0:<invalid> d1:<invalid> d2:d2 a1:<invalid> -16(fp):d2 -12(fp):d3 -8(fp):a2 -4(fp):a6



void fn00002A7C(word32 d0, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
// Stack args: Stack +0004(32)
fn00002A7C_entry:
// DataOut: d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002A7C:
	branch Mem0[Mem0[0x00003D94:word32] + 20:word16] <u 0x0027 l00002AA0
// DataOut: d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002AA0:
	branch dwArg04 == 0x00000000 l00002AE4
// DataOut: d0 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a0:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002AA4:
	RemHead(dwArg04)
	word32 a2_47 = d0
	branch d0 == 0x00000000 l00002AD6
// DataOut: a2 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a0:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002AB6:
	word32 a2_59 = a2_47 - 4
	word32 d0_60 = Mem0[a2_59:word32]
	FreeMem(a2_59, d0_60)
	RemHead(dwArg04)
	a2_47 = d0_60
	branch d0_60 != 0x00000000 l00002AB6
// DataOut: a2 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a0:<invalid> a6:<invalid> a2:<invalid> d1:d0 d0:<invalid> a1:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002AD6:
	FreeMem(dwArg04, 24)
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a0:<invalid> a6:<invalid> a2:<invalid> d1:d0 d0:<invalid> a1:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002A92:
	DeletePrivatePool(dwArg04)
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a0:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002AE4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a0:<invalid> a6:<invalid> a2:<invalid> d1:d0 d0:24 a1:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a6

fn00002A7C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d2 a0:<invalid> a6:a6 a2:a2 d1:d0 d0:24 a1:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a6



word32 fn00002AEC(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d0
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a7
fn00002AEC_entry:
	*a1Out = a1
	*a5Out = a5
// DataOut: a1 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002AEC:
	word32 a2_40 = Mem0[0x00003EEC:word32]
	word32 d0_24 = a2_40
	branch a2_40 == 0x00000000 l00002B24
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002AFA:
	branch (Mem0[a2_40 + 24:word32] & 0x00000202) != 0x00000202 l00002B1A
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: fp(32)

l00002B0C:
	branch Mem0[a2_40:word32] == 0x00000000 l00002B1A
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: fp(32)

l00002B10:
	word32 a1_66
	word32 a5_67
	fn00002B28(a2_40, out a1_66, out a5_67)
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: fp(32)

l00002B1A:
	a2_40 = Mem0[a2_40 + 12:word32]
	d0_24 = a2_40
	branch a2_40 != 0x00000000 l00002AFA
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: fp(32)

l00002B24:
	return d0_24
// DataOut: a1 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2

fn00002AEC_exit:
// DataOut: a1 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp a2:a2 d0:<invalid> a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2



word32 fn00002B28(word32 dwArg04, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d0
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
// Stack args: Stack +0004(32)
fn00002B28_entry:
// DataOut: d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002B28:
	word32 d0_107
	word32 a1_19
	word32 a5_20
	fn00002BBC(out a1_19, out a5_20)
	branch dwArg04 != 0x00000000 l00002B3E
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002B3E:
	branch Mem0[dwArg04 + 28:word32] != 0x00000000 l00002B5C
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B44:
	branch (Mem0[dwArg04 + 24:word32] & 4) == 0x00000000 l00002B54
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B54:
	Mem127[dwArg04 + 28:word32] = 0x00000400
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B4C:
	Mem124[dwArg04 + 28:word32] = 1
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B5C:
	branch Mem0[dwArg04 + 8:word32] != 0x00000000 l00002B66
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B66:
	word32 d0_67 = Mem0[dwArg04 + 24:word32] & 2
	branch d0_67 == 0x00000000 l00002BAC
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B6E:
	branch Mem0[dwArg04:word32] == 0x00000000 l00002B9C
// DataOut: a1 a2 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B9C:
	d0_107 = 0
// DataOut: a1 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B72:
	word32 d4_94 = Mem0[dwArg04 + 4:word32] - Mem0[dwArg04 + 8:word32]
	execPrivate3()
	branch d4_94 - d0_67 == 0x00000000 l00002BA0
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002BA0:
	Mem110[dwArg04 + 4:word32] = Mem0[dwArg04 + 8:word32]
	Mem112[dwArg04 + 20:word32] = Mem110[dwArg04 + 28:word32]
// DataOut: a1 a2 a5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002BAC:
	Mem85[dwArg04 + 24:word32] = Mem0[dwArg04 + 24:word32] & -4
	d0_107 = 0
// DataOut: a1 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B90:
	Mem106[dwArg04 + 24:word32] = Mem0[dwArg04 + 24:word32] | 16
	d0_107 = -1
// DataOut: a1 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B62:
	d0_107 = 0
// DataOut: a1 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002B3A:
	d0_107 = -1
// DataOut: a1 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6
// LocalsOut: fp(32)

l00002BB6:
	return d0_107
// DataOut: a1 a5 d0 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> d4:<invalid> d2:<invalid> a6:<invalid> d3:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6

fn00002B28_exit:
// DataOut: a1 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp a2:a2 d0:<invalid> d2:d2 d3:d3 d4:d4 a6:a6 a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):a2 -4(fp):a6



word32 fn00002BBC(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d1
// Trashed: CVZNX a1 a4 a5 d0 d1
// Preserved: a6 a7
fn00002BBC_entry:
	*a1Out = a1
	*a5Out = a5
// DataOut: a1 a2 a5 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002BBC:
	SetSignal(0, 0x00001000)
	word32 d1_20 = 0x00001000
	branch 0x00000000 == 0x00000000 l00002BE6
// DataOut: a1 a2 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002BDA:
	word32 a1_28
	word32 a5_29
	d1_20 = fn0000131C(0x00000014, out a1_28, out a5_29)
// DataOut: a1 a2 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a6:<invalid> d0:0x00000000 d1:0x00001000 -4(fp):a6

l00002BE6:
	return d1_20
// DataOut: a1 a2 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a6:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):00000014 -4(fp):a6

fn00002BBC_exit:
// DataOut: a1 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp a6:a6 d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):00000014 -4(fp):a6



void fn00002ED4(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a7
// Stack args: Stack +0004(32)
fn00002ED4_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002ED4:
	branch dwArg04 == 0x00000000 l00002EEC
// DataOut: a2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00002EEC:
	word32 a2_36 = Mem0[0x00003EEC:word32]
	branch a2_36 == 0x00000000 l00002F12
// DataOut: a2
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> -4(fp):a2
// LocalsOut: fp(32)

l00002EF6:
	branch (Mem0[a2_36 + 24:word32] & 2) == 0x00000000 l00002F08
// DataOut: a2
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: fp(32)

l00002EFE:
	word32 a1_69
	word32 a5_70
	fn00002B28(a2_36, out a1_69, out a5_70)
// DataOut: a2
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: fp(32)

l00002F08:
	a2_36 = Mem0[a2_36 + 12:word32]
	branch a2_36 != 0x00000000 l00002EF6
// DataOut: a2
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2
// LocalsOut: fp(32)

l00002EE0:
	word32 a1_27
	word32 a5_28
	fn00002B28(dwArg04, out a1_27, out a5_28)
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> -4(fp):a2

l00002F12:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp - 4 a2:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2

fn00002ED4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: a7:fp a2:a2 d0:0 a0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -8(fp):<invalid> -4(fp):a2



word32 fn00002F18(word32 d0, word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0
// LiveOut: a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
// Stack args: Stack +0004(32)
fn00002F18_entry:
// DataOut: a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32)

l00002F18:
	word32 d1_18
	word32 a1_19
	return fn00002F34(d0, Mem0[0x00003EF8:word32], dwArg04, fp + 8, out d1_18, out a1_19)
// DataOut: a1 a5 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp

fn00002F18_exit:
// DataOut: a1 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):fp + 8



word32 fn00002F34(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & d1Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0
// LiveOut: a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn00002F34_entry:
	*d1Out = d1
	*a1Out = a1
// DataOut: a1 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l00002F34:
	word32 d0_127
	word32 a7_154 = fp + -112
	word32 d3_1398 = dwArg0C
	word32 a5_152 = dwArg04
	word32 a4_151 = dwArg08
	word32 d6_119 = 0
	branch Mem0[dwArg08:byte] == 0x00 l0000387A
// DataOut: a1 a4 a5 a7 d0 d1 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:fp

l00002F50:
	branch Mem0[a4_151:byte] != 0x25 l00003854
// DataOut: a1 a4 a5 a7 d0 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003854:
	word32 a7_1810 = a7_154 - 4
	Mem1812[a7_1810:word32] = a5_152
	Mem1820[a7_1810 - 4:word32] = (int32) (int16) Mem1812[a4_151:byte]
	a4_151 = a4_151 + 1
	word32 d1_1822
	word32 a1_1823
	d0 = fn000038B4(dwArg00, dwArg04, out d1_1822, out a1_1823, out a5_152)
	a7_154 = a7_1810 + 4
	branch d0 != 0xFFFFFFFF l00003872
// DataOut: a1 a4 a5 a7 d0 d1 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003872:
	d6_119 = d6_119 + 0x00000001
// DataOut: a1 a4 a5 a7 d0 d1 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000386E:
	d0_127 = d6_119
// DataOut: a1 a7 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002F58:
	Mem186[a7_154 + 64:word32] = 0x00000000
	Mem188[a7_154 + 72:word32] = 0x00000000
	Mem192[a7_154 + 102:word32] = 0x00000000
	word32 d5_1641 = -1
	word32 d4_1335 = 105
	word32 a3_1380 = a7_154 + 76
	word32 d7_1168 = 0
	word32 a2_1594 = a4_151 + 1
	word32 d2_1167 = Mem192[a7_154 + 72:word32]
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002F76:
	word32 d1_1685 = 0
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002F78:
	word32 a7_214 = a7_154 - 4
	Mem216[a7_214:word32] = d0
	d0 = Mem216[a7_214:word32]
	branch Mem216[0x0000388C + d1_1685:byte] - Mem216[a2_1594:byte] != 0x00 l00002F9C
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002F9C:
	d1_1685 = d1_1685 + 0x00000001
	branch d1_1685 <u 0x00000005 l00002F78
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:0000388C d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002F8A:
	Mem1792[a7_214:word32] = d1_1685
	word32 d1_1794 = 1 << d1_1685
	d0 = d1_1794
	d1_1685 = Mem1792[a7_214:word32]
	d2_1167 = d2_1167 | d1_1794
	a2_1594 = a2_1594 + 1
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:0000388C d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002FA6:
	branch d1_1685 <u 0x00000005 l00002F76
// DataOut: a1 a2 a3 a4 a5 a7 d0 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:0000388C d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002FAE:
	word32 a0_1010
	word32 d0_1632
	Mem236[a7_154 + 72:word32] = d2_1167
	branch Mem236[a2_1594:byte] != 0x2A l00002FEC
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:0000388C d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002FEC:
	a0_1010 = 0x00002BED + (DPB(d0, Mem236[a2_1594:byte], 0) & 0x000000FF)
	word32 d0_1733 = (int32) Mem236[a0_1010:byte]
	d0_1632 = d0_1733 & 0x00000004
	branch (d0_1733 & 0x00000004) == 0x00000000 l00003058
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:0000388C d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003008:
	d2_1167 = Mem236[a7_154 + 64:word32]
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000300C:
	Mem1748[a7_154 - 4:word32] = d3_1398
	word32 d1_1753 = __swap(10) *u (word16) d2_1167
	word32 d0_1760 = (word16) d2_1167 *u 10 + DPB(__swap(DPB(d1_1753, (word16) (d1_1753 + __swap(d2_1167) *u 0x000A), 0)), 0x0000, 0)
	a2_1594 = a2_1594 + 1
	a0_1010 = 0x00002BED + (DPB(d0_1760, Mem1748[a2_1594:byte], 0) & 0x000000FF)
	word32 d1_1768 = (int32) (int16) Mem1748[a2_1594:byte]
	word32 d0_1780 = (int32) Mem1748[a0_1010:byte]
	d3_1398 = Mem1748[a7_154 - 4:word32]
	d1_1685 = d1_1768 - 0x00000030
	d2_1167 = d1_1768 - 0x00000030 + d0_1760
	d0_1632 = d0_1780 & 0x00000004
	branch (d0_1780 & 0x00000004) != 0x00000000 l0000300C
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003054:
	Mem1787[a7_154 + 64:word32] = d2_1167
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002FB8:
	d0_1632 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 v36_1711 = Mem236[d0_1632:word32]
	Mem1712[a7_154 + 44:word32] = v36_1711
	a2_1594 = a2_1594 + 1
	d3_1398 = d0_1632 + 0x00000004
	a0_1010 = d0_1632 + 0x00000004
	branch v36_1711 >= 0x00000000 l00002FE4
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:0000388C d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002FE4:
	Mem1724[a7_154 + 64:word32] = Mem1712[a7_154 + 44:word32]
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00002FD0:
	Mem1716[a7_154 + 72:word32] = Mem1712[a7_154 + 72:word32] | 0x00000004
	d0_1632 = -Mem1716[a7_154 + 44:word32]
	Mem1721[a7_154 + 64:word32] = d0_1632
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003058:
	branch Mem236[a2_1594:byte] != 0x2E l000030EC
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003060:
	a2_1594 = a2_1594 + 1
	branch Mem236[a2_1594:byte] != 0x2A l00003086
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003086:
	a0_1010 = 0x00002BED + (DPB(d0_1632, Mem236[a2_1594:byte], 0) & 0x000000FF)
	word32 d0_1651 = (int32) Mem236[a0_1010:byte]
	d5_1641 = 0
	d0_1632 = d0_1651 & 0x00000004
	branch (d0_1651 & 0x00000004) == 0x00000000 l000030EC
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000030A4:
	word32 a7_1662 = a7_154 - 4
	Mem1664[a7_1662:word32] = d2_1167
	word32 d1_1669 = __swap(10) *u (word16) d5_1641
	word32 d0_1676 = (word16) d5_1641 *u 10 + DPB(__swap(DPB(d1_1669, (word16) (d1_1669 + __swap(d5_1641) *u 0x000A), 0)), 0x0000, 0)
	a2_1594 = a2_1594 + 1
	a0_1010 = 0x00002BED + (DPB(d0_1676, Mem1664[a2_1594:byte], 0) & 0x000000FF)
	word32 d1_1684 = (int32) (int16) Mem1664[a2_1594:byte]
	word32 d0_1696 = (int32) Mem1664[a0_1010:byte]
	d2_1167 = Mem1664[a7_1662:word32]
	d1_1685 = d1_1684 - 0x00000030
	d5_1641 = d1_1684 - 0x00000030 + d0_1676
	d0_1632 = d0_1696 & 0x00000004
	branch (d0_1696 & 0x00000004) != 0x00000000 l000030A4
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003068:
	d0_1632 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 v44_1637 = Mem236[d0_1632:word32]
	Mem1638[a7_154 + 44:word32] = v44_1637
	a2_1594 = a2_1594 + 1
	d3_1398 = d0_1632 + 0x00000004
	a0_1010 = d0_1632 + 0x00000004
	branch v44_1637 < 0x00000000 l000030EC
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003080:
	d5_1641 = Mem1638[a7_154 + 44:word32]
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:-1 d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000030EC:
	word32 a7_267 = a7_154
	branch Mem236[a2_1594:byte] == 0x68 l00003110
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000030F2:
	branch Mem236[a2_1594:byte] == 0x6C l00003110
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000030F8:
	branch Mem236[a2_1594:byte] == 0x4C l00003110
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000030FE:
	branch Mem236[a2_1594:byte] == 0x6A l00003110
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003104:
	branch Mem236[a2_1594:byte] == 0x7A l00003110
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000310A:
	branch Mem236[a2_1594:byte] != 0x74 l00003116
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003110:
	a2_1594 = a2_1594 + 1
	d4_1335 = (int32) (int16) Mem236[a2_1594:byte]
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:105 a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003116:
	branch d4_1335 != 0x00000068 l00003128
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000311E:
	branch Mem236[a2_1594:byte] != 0x68 l00003128
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003124:
	d4_1335 = 2
	a2_1594 = a2_1594 + 1
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003128:
	branch d4_1335 != 0x0000006C l0000313A
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003130:
	branch Mem236[a2_1594:byte] != 0x6C l0000313A
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003136:
	d4_1335 = 1
	a2_1594 = a2_1594 + 1
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000313A:
	branch d4_1335 != 0x0000006A l00003144
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003142:
	d4_1335 = 1
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003144:
	branch d4_1335 != 0x0000007A l0000314E
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000314C:
	d4_1335 = 108
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000314E:
	branch d4_1335 != 0x00000074 l00003158
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003156:
	d4_1335 = 105
// DataOut: a1 a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003158:
	word32 d5_1386
	byte v84_296 = Mem236[a2_1594:byte]
	word32 a2_1379 = a2_1594 + 1
	word32 d1_1039 = DPB(d1_1685, v84_296, 0)
	*d1Out = d1_1039
	word32 d0_1382 = DPB(d0_1632, v84_296, 0)
	branch v84_296 == 0x25 l000035E0
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035E0:
	Mem1580[a7_154 + 102:word32] = 0x00000001
	a3_1380 = 0x00003888
	d5_1386 = 0
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003164:
	branch v84_296 == 0x58 l000031B2
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000316A:
	branch v84_296 == 0x63 l00003560
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003560:
	branch d4_1335 != 0x0000006C l0000357C
// DataOut: a1 a2 a3 a5 a7 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000357C:
	d0_1382 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1576[a3_1380:byte] = Mem236[d0_1382 + 0x00000003:byte]
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003568:
	d0_1382 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1565[a3_1380:byte] = Mem236[d0_1382 + 0x00000003:byte]
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000358E:
	a0_1010 = (d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	d3_1398 = (d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	Mem1553[a7_154 + 102:word32] = 0x00000001
	d5_1386 = 0
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003172:
	branch v84_296 == 0x64 l000031B2
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003178:
	branch v84_296 == 0x69 l000031B2
// DataOut: a1 a2 a3 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000317E:
	Mem1352[a7_154 + 44:byte] = v84_296
	branch v84_296 == 0x6E l000035F2
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035F2:
	branch d4_1335 != 0x00000001 l00003614
// DataOut: a1 a2 a3 a5 a7 d1 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003614:
	branch d4_1335 != 0x0000006C l00003632
// DataOut: a1 a2 a3 a5 a7 d1 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003632:
	branch d4_1335 != 0x00000068 l00003650
// DataOut: a1 a2 a3 a5 a7 d1 d3 d4 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003650:
	branch d4_1335 != 0x00000002 l0000366E
// DataOut: a1 a2 a3 a5 a7 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000366E:
	d0_1382 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	a0_1010 = Mem1352[d0_1382:word32]
	Mem1543[a0_1010:word32] = d6_119
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003658:
	d0_1382 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	a0_1010 = Mem1352[d0_1382:word32]
	Mem1531[a0_1010:byte] = (byte) d6_119
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000363A:
	d0_1382 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	a0_1010 = Mem1352[d0_1382:word32]
	Mem1516[a0_1010:word16] = (word16) d6_119
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000361C:
	d0_1382 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	a0_1010 = Mem1352[d0_1382:word32]
	Mem1501[a0_1010:word32] = d6_119
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035FA:
	d0_1382 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	a0_1010 = Mem1352[d0_1382:word32]
	Mem1482[a0_1010 + 4:word32] = d6_119
	Mem1483[a0_1010:word32] = 0x00000000
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003682:
	d3_1398 = (d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002) + 0x00000004
	Mem1467[a7_154 + 64:word32] = 0x00000000
	d5_1386 = 0
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000318A:
	byte v93_1356 = Mem1352[a7_154 + 44:byte]
	byte VZ_1363 = cond(v93_1356 - 0x70)
	branch v93_1356 <=u 0x70 l000031B2
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003198:
	byte v97_1364 = Mem1352[a7_154 + 44:byte]
	branch v97_1364 == 0x73 l0000359C
// DataOut: a1 a2 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000359C:
	d0_1382 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	a3_1380 = Mem1352[d0_1382:word32]
	Mem1403[a7_154 + 102:word32] = 0x00000000
	d3_1398 = d0_1382 + 0x00000004
	a0_1010 = d0_1382 + 0x00000004
	word32 a1_1402 = a3_1380
	*a1Out = a1_1402
	branch d5_1641 == 0x00000000 l000035BE
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035B8:
	word32 v110_1455 = d5_1641 - Mem1403[a7_154 + 102:word32]
	VZ_1363 = cond(v110_1455) (alias)
	branch v110_1455 <=u 0x00000000 l000035DA
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035BE:
	branch Mem1403[a3_1380:byte] == 0x00 l000035DA
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035C2:
	d0_1382 = Mem1403[a7_154 + 102:word32]
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035C6:
	d0_1382 = d0_1382 + 0x00000001
	a1_1402 = a1_1402 + 1
	*a1Out = a1_1402
	VZ_1363 = DPB(VZ_1363, false, 0) (alias)
	branch VZ_1363 l000035D2
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035CE:
	word32 v111_1452 = d5_1641 - d0_1382
	VZ_1363 = cond(v111_1452) (alias)
	branch v111_1452 <=u 0x00000000 l000035D6
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035D2:
	branch Mem1403[a1_1402:byte] != 0x00 l000035C6
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035D6:
	Mem1444[a7_154 + 102:word32] = d0_1382
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000035DA:
	d5_1386 = 0
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000031A4:
	branch v97_1364 == 0x75 l000031B2
// DataOut: a1 a2 a4 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000031AA:
	branch v97_1364 != 0x78 l0000368A
// DataOut: a1 a2 a4 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000368A:
	branch v84_296 != 0x00 l00003690
// DataOut: a1 a2 a4 a5 a7 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000368E:
	a2_1379 = a2_1379 - 1
// DataOut: a1 a2 a4 a5 a7 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003690:
	d0_1382 = a2_1379 - a4_151
	Mem1385[a7_154 + 102:word32] = d0_1382
	Mem1387[a7_154 + 64:word32] = 0x00000000
	a3_1380 = a4_151
	d5_1386 = 0
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000031B2:
	branch v84_296 != 0x70 l000031C4
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000031B8:
	Mem1338[a7_154 + 72:word32] = Mem236[a7_154 + 72:word32] | 0x00000001
	d4_1335 = 108
	d1_1039 = 120
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000031C4:
	word32 d3_1008
	word32 a7_1147
	branch (byte) d1_1039 == 0x64 l000031D2
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000031CA:
	branch (byte) d1_1039 != 0x69 l0000331C
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000331C:
	branch d4_1335 != 0x00000001 l00003340
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003340:
	branch d4_1335 != 0x0000006C l00003362
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003362:
	word32 d0_1323 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1329[a7_154 + 60:word32] = Mem236[d0_1323:word32]
	Mem1330[a7_154 + 56:word32] = 0x00000000
	d3_1008 = d0_1323 + 0x00000004
	a0_1010 = d0_1323 + 0x00000004
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003348:
	word32 d0_1308 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1314[a7_154 + 60:word32] = Mem236[d0_1308:word32]
	Mem1315[a7_154 + 56:word32] = 0x00000000
	d3_1008 = d0_1308 + 0x00000004
	a0_1010 = d0_1308 + 0x00000004
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003324:
	word32 d0_1292 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1298[a7_154 + 60:word32] = Mem236[d0_1292 + 0x00000004:word32]
	Mem1300[a7_154 + 56:word32] = Mem1298[d0_1292:word32]
	d3_1008 = d0_1292 + 0x00000008
	a0_1010 = d0_1292 + 0x00000008
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000337A:
	branch d4_1335 != 0x00000068 l00003396
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003382:
	word16 v231_1274 = Mem236[a7_154 + 62:word16]
	word32 a7_1276 = a7_154 - 4
	Mem1278[a7_1276:word32] = d1_1039
	Mem1283[a7_1276 + 64:word32] = (int32) v231_1274
	Mem1284[a7_1276 + 60:word32] = 0x00000000
	d1_1039 = Mem1284[a7_1276:word32]
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003396:
	branch d4_1335 != 0x00000002 l000033B2
// DataOut: a2 a5 a7 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000339E:
	byte v244_1259 = Mem236[a7_154 + 63:byte]
	word32 a7_1261 = a7_154 - 4
	Mem1263[a7_1261:word32] = d1_1039
	Mem1268[a7_1261 + 64:word32] = (int32) v244_1259
	Mem1269[a7_1261 + 60:word32] = 0x00000000
	d1_1039 = Mem1269[a7_1261:word32]
// DataOut: a2 a5 a7 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000033B2:
	word32 d0_1149 = Mem236[a7_154 + 72:word32] & 1
	Mem1151[a7_154 + 44:byte] = (byte) d1_1039
	a7_1147 = a7_154
	branch d0_1149 == 0x00000000 l00003450
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000033C2:
	branch (byte) d1_1039 != 0x6F l000033FE
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000033C8:
	branch d5_1641 != 0x00000000 l000033F2
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000033CC:
	word32 a7_1235 = a7_154 - 4
	Mem1237[a7_1235:word32] = d0_1149
	Mem1240[a7_1235 - 4:word32] = d1_1039
	word32 d0_1241 = Mem1240[a7_1235 + 64:word32]
	word32 d1_1242 = Mem1240[a7_1235 + 60:word32]
	Mem1245[a7_1235 - 8:word32] = d2_1167
	d2_1167 = Mem1245[a7_1235 - 8:word32]
	d1_1039 = Mem1245[a7_1235 - 4:word32]
	d0_1149 = Mem1245[a7_1235:word32]
	branch d1_1242 - (d0_1241 <u 0x00000000) == 0x00000000 l000033FE
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000033F2:
	word32 a0_1228 = a7_154 + 106
	Mem1233[a0_1228:byte] = 0x30
	a0_1010 = a0_1228
	d7_1168 = 0x00000001
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000033FE:
	a7_1147 = a7_154
	branch (byte) d1_1039 == 0x78 l0000340E
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003404:
	Mem1214[a7_154 + 44:byte] = (byte) d1_1039
	branch (byte) d1_1039 != 0x58 l00003450
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000340E:
	Mem1175[a7_154 + 44:byte] = (byte) d1_1039
	word32 a7_1176 = a7_154 - 4
	Mem1178[a7_1176:word32] = d0_1149
	Mem1181[a7_1176 - 4:word32] = d1_1039
	word32 d0_1182 = Mem1181[a7_1176 + 64:word32]
	word32 d1_1183 = Mem1181[a7_1176 + 60:word32]
	Mem1186[a7_1176 - 8:word32] = d2_1167
	word32 d1_1196 = Mem1186[a7_1176 - 4:word32]
	a7_1147 = a7_1176 + 4
	branch d1_1183 - (d0_1182 <u 0x00000000) == 0x00000000 l00003450
// DataOut: a2 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003438:
	Mem1204[a7_1176 + 110 + d7_1168:byte] = 0x30
	word32 d7_1202 = d7_1168 + 0x00000001
	a0_1010 = a7_1176 + 110 + d7_1202
	Mem1209[a0_1010:byte] = (byte) d1_1196
	Mem1211[a7_1176 + 48:byte] = (byte) d1_1196
	d7_1168 = d7_1202 + 0x00000001
// DataOut: a2 a5 a7 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000031D2:
	word32 d0_1006
	branch d4_1335 != 0x00000001 l000031F8
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000031F8:
	branch d4_1335 != 0x0000006C l00003224
// DataOut: a2 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003224:
	word32 d0_1044 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 d0_1048 = Mem236[d0_1044:word32]
	Mem1050[a7_154 + 52:word32] = d0_1048
	word32 a7_1051 = a7_154 - 4
	Mem1053[a7_1051:word32] = d1_1039
	Mem1058[a7_1051 + 52:word32] = d0_1048 >> 31
	word32 v208_1059 = Mem1058[a7_1051:word32]
	d3_1008 = d0_1044 + 0x00000004
	a0_1010 = d0_1044 + 0x00000004
	d0_1006 = d0_1048 >> 31
	d1_1039 = v208_1059
	branch d4_1335 != 0x00000068 l0000326A
// DataOut: a2 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000324E:
	word16 v210_1098 = Mem1058[a7_1051 + 58:word16]
	Mem1102[a7_1051:word32] = v208_1059
	word32 d1_1105 = (int32) v210_1098
	Mem1107[a7_1051 + 56:word32] = d1_1105
	Mem1110[a7_1051 - 4:word32] = DPB(d0_1048 >> 31, v210_1098, 0)
	Mem1115[a7_1051 + 52:word32] = d1_1105 >> 31
	d1_1039 = Mem1115[a7_1051 - 4:word32]
	d0_1006 = Mem1115[a7_1051:word32]
// DataOut: a2 a5 a7 d0 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000326A:
	branch d4_1335 != 0x00000002 l00003290
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003272:
	byte v219_1072 = Mem1058[a7_154 + 55:byte]
	word32 a7_1074 = a7_154 - 4
	Mem1076[a7_1074:word32] = d1_1039
	word32 d1_1080 = (int32) (int16) v219_1072
	Mem1082[a7_1074 + 56:word32] = d1_1080
	Mem1085[a7_1074 - 4:word32] = DPB(d0_1006, v219_1072, 0)
	Mem1090[a7_1074 + 52:word32] = d1_1080 >> 31
	d1_1039 = Mem1090[a7_1074 - 4:word32]
	d0_1006 = Mem1090[a7_1074:word32]
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003200:
	word32 d0_1022 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	word32 d0_1026 = Mem236[d0_1022:word32]
	Mem1028[a7_154 + 52:word32] = d0_1026
	word32 a7_1029 = a7_154 - 4
	Mem1031[a7_1029:word32] = d1_1039
	Mem1036[a7_1029 + 52:word32] = d0_1026 >> 31
	d3_1008 = d0_1022 + 0x00000004
	a0_1010 = d0_1022 + 0x00000004
	d0_1006 = d0_1026 >> 31
	d1_1039 = Mem1036[a7_1029:word32]
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000031DA:
	d0_1006 = d3_1398 + 0x00000003 >>u 0x00000002 << 0x00000002
	Mem1012[a7_154 + 52:word32] = Mem236[d0_1006 + 0x00000004:word32]
	Mem1014[a7_154 + 48:word32] = Mem1012[d0_1006:word32]
	d3_1008 = d0_1006 + 0x00000008
	a0_1010 = d0_1006 + 0x00000008
// DataOut: a2 a5 a7 d0 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003290:
	Mem915[a7_154 + 44:byte] = (byte) d1_1039
	word32 a7_916 = a7_154 - 4
	Mem918[a7_916:word32] = d0_1006
	Mem921[a7_916 - 4:word32] = d1_1039
	word32 d0_922 = Mem921[a7_916 + 56:word32]
	word32 d1_923 = Mem921[a7_916 + 52:word32]
	Mem926[a7_916 - 8:word32] = d2_1167
	a7_1147 = a7_916 + 4
	branch d1_923 - (d0_922 <u 0x00000000) >= 0x00000000 l000032DA
// DataOut: a2 a5 a7 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000032DA:
	byte v142_960 = Mem926[a7_916 + 48:byte]
	branch (Mem926[a7_916 + 76:word32] & 16) == 0x00000000 l000032F4
// DataOut: a2 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000032F4:
	branch (Mem926[a7_916 + 76:word32] & 8) == 0x00000000 l00003308
// DataOut: a2 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000032FC:
	Mem1001[a7_916 + 110:byte] = 0x20
	a0_1010 = a7_916 + 110
	d7_1168 = 0x00000001
// DataOut: a2 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000032E6:
	Mem988[a7_916 + 110:byte] = 0x2B
	a0_1010 = a7_916 + 110
	d7_1168 = 0x00000001
// DataOut: a2 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003308:
	Mem977[a7_916 + 64:word32] = Mem926[a7_916 + 56:word32]
	Mem979[a7_916 + 60:word32] = Mem977[a7_916 + 52:word32]
	Mem981[a7_916 + 48:byte] = v142_960
// DataOut: a2 a5 a7 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000032BA:
	Mem944[a7_916 + 110:byte] = 0x2D
	a0_1010 = a7_916 + 110
	d7_1168 = 0x00000001
	a7_1147 = Mem944[a7_916 + 0x00000040:word32]
// DataOut: a2 a5 a7 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:0 a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003450:
	byte v131_752 = Mem236[a7_1147 + 44:byte]
	a3_1380 = a7_1147 + 98
	branch v131_752 == 0x78 l00003464
// DataOut: a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000345E:
	branch v131_752 != 0x58 l0000346E
// DataOut: a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000346E:
	branch v131_752 != 0x6F l0000347E
// DataOut: a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000347E:
	Mem902[a7_1147 + 48:word32] = 0x0000000A
// DataOut: a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003474:
	Mem899[a7_1147 + 48:word32] = 0x00000008
// DataOut: a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003486:
	Mem896[a7_1147 + 44:word32] = Mem236[a7_1147 + 48:word32]
// DataOut: a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003464:
	Mem887[a7_1147 + 44:word32] = 0x00000010
// DataOut: a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000348C:
	word32 a6_763
	Mem759[a7_1147 + 108:word32] = Mem236[a7_1147 + 44:word32]
	branch v131_752 == 0x58 l0000349E
// DataOut: a2 a3 a5 a7 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000349E:
	a6_763 = 0x000038A4
// DataOut: a2 a3 a5 a6 a7 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003498:
	a6_763 = 0x00003894
// DataOut: a2 a3 a5 a6 a7 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000034A2:
	Mem765[a7_1147 + 44:word32] = a6_763
	Mem767[a7_1147 + 124:word32] = d3_1008
	Mem769[a7_1147 + 68:word32] = d5_1641
	Mem771[a7_1147 + 48:word32] = d6_119
	Mem773[a7_1147 + 98:word32] = d7_1168
	word32 v164_774 = a7_1147 + 56
	word32 d6_775 = Mem773[v164_774:word32]
	word32 d7_777 = Mem773[v164_774 + 4:word32]
	word32 d3_779 = Mem773[a7_1147 + 102:word32]
	word32 a1_781 = Mem773[a7_1147 + 44:word32]
// DataOut: a1 a2 a3 a5 a7 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000034C4:
	word32 d1_788 = Mem773[a7_1147 + 108:word32]
	word32 a7_793 = a7_1147 - 4
	Mem795[a7_793:word32] = d1_788 >> 31
	Mem798[a7_793 - 4:word32] = d1_788
	Mem801[a7_793 - 8:word32] = a1_781
	Mem804[a7_793 - 12:word32] = d1_788
	Mem806[a7_793 - 16:word32] = d1_788 >> 31
	Mem808[a7_793 - 20:word32] = d7_777
	Mem810[a7_793 - 24:word32] = d6_775
	word32 d1_811 = fn00003C74(dwArg00, dwArg04, dwArg08, dwArg0C)
	word32 v168_813 = Mem810[a7_793 - 8:word32]
	word32 d1_818 = Mem810[a7_793 - 4:word32]
	word32 d0_820 = Mem810[a7_793:word32]
	a3_1380 = a3_1380 - 1
	Mem826[a3_1380:byte] = Mem810[v168_813 + d1_811:byte]
	Mem829[a7_793:word32] = d0_820
	Mem832[a7_793 - 4:word32] = d1_818
	Mem835[a7_793 - 8:word32] = v168_813
	Mem838[a7_793 - 12:word32] = d1_818
	Mem840[a7_793 - 16:word32] = d0_820
	Mem842[a7_793 - 20:word32] = d7_777
	Mem844[a7_793 - 24:word32] = d6_775
	word32 d1_845
	word32 d0_846 = fn00003A24(dwArg00, dwArg04, dwArg08, dwArg0C, out d1_845)
	a1_781 = Mem844[a7_793 - 8:word32]
	*a1Out = a1_781
	d6_775 = d0_846
	d7_777 = d1_845
	a7_267 = a7_793 + 4
	d3_779 = d3_779 + 0x00000001
	d0_1382 = d1_845
	word32 d1_864 = d0_846 - (d1_845 <u 0x00000000)
	*d1Out = d1_864
	branch d1_864 != 0x00000000 l000034C4
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003532:
	Mem868[a7_793 + 106:word32] = d3_779
	d7_1168 = Mem868[a7_793 + 102:word32]
	d6_119 = Mem868[a7_793 + 52:word32]
	d5_1386 = Mem868[a7_793 + 72:word32]
	d3_1398 = Mem868[a7_793 + 128:word32]
	branch d5_1386 != 0xFFFFFFFF l00003554
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003554:
	Mem879[a7_793 + 76:word32] = Mem868[a7_793 + 76:word32] & 0xFFFFFFFD
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000354E:
	d5_1386 = 0
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a6:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000036A0:
	branch d5_1386 - Mem236[a7_267 + 102:word32] >u 0x00000000 l000036AE
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000036AE:
	Mem717[a7_267 + 44:word32] = d5_1386
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000036A6:
	Mem714[a7_267 + 44:word32] = Mem236[a7_267 + 102:word32]
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000036B2:
	word32 a7_330 = a7_267 - 4
	Mem332[a7_330:word32] = d0_1382
	Mem337[a7_330 + 52:word32] = Mem332[a7_330 + 48:word32] + d7_1168
	Mem343[a7_330:word32] = Mem337[a7_330:word32]
	word32 d0_348 = Mem343[a7_330:word32]
	branch Mem343[a7_330 + 52:word32] - Mem343[a7_330 + 68:word32] <u 0x00000000 l000036D6
// DataOut: a1 a2 a3 a5 a7 d0 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000036D6:
	Mem703[a7_330:word32] = d0_348
	Mem708[a7_330 + 48:word32] = Mem703[a7_330 + 68:word32] - Mem703[a7_330 + 52:word32]
// DataOut: a1 a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000036D0:
	Mem696[a7_330 + 48:word32] = 0x00000000
// DataOut: a1 a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000036E6:
	Mem355[a7_267 + 48:word32] = Mem343[a7_267 + 44:word32]
	branch (Mem355[a7_267 + 72:word32] & 2) == 0x00000000 l00003728
// DataOut: a1 a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000036F4:
	word32 d2_655 = 0
	branch d7_1168 == 0x00000000 l00003728
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000036FA:
	word32 a7_667 = a7_267 - 4
	Mem669[a7_667:word32] = a5_152
	a0_1010 = a7_667 + 110 + d2_655
	Mem678[a7_667 - 4:word32] = (int32) (int16) Mem669[a0_1010:byte]
	word32 d1_680
	word32 a1_681
	branch fn000038B4(dwArg00, dwArg04, out d1_680, out a1_681, out a5_152) != 0xFFFFFFFF l00003720
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003720:
	d2_655 = d2_655 + 0x00000001
	d6_119 = d6_119 + 0x00000001
	branch d7_1168 - d2_655 >u 0x00000000 l000036FA
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003728:
	branch (Mem355[a7_267 + 72:word32] & 4) != 0x00000000 l0000377A
// DataOut: a1 a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003730:
	word32 d2_600 = 0
	branch Mem355[a7_267 + 48:word32] == 0x00000000 l0000377A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003738:
	word32 d4_605 = Mem355[a7_267 + 72:word32]
	word32 a4_607 = Mem355[a7_267 + 48:word32]
// DataOut: a2 a3 a4 a5 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003740:
	word32 a7_618 = a7_267 - 4
	Mem620[a7_618:word32] = a5_152
	branch (d4_605 & 2) == 0x00000000 l0000374E
// DataOut: a2 a3 a4 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000374E:
	a0_1010 = DPB(a0_1010, 0x0020, 0)
// DataOut: a0 a2 a3 a4 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003748:
	a0_1010 = DPB(a0_1010, 0x0030, 0)
// DataOut: a0 a2 a3 a4 a7 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003752:
	Mem630[a7_267 - 8:word32] = a0_1010
	word32 d1_632
	word32 a1_633
	branch fn000038B4(dwArg00, dwArg04, out d1_632, out a1_633, out a5_152) != 0xFFFFFFFF l0000376A
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000376A:
	d2_600 = d2_600 + 0x00000001
	d6_119 = d6_119 + 0x00000001
	branch a4_607 - d2_600 >u 0x00000000 l00003740
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003772:
	Mem649[a7_618 + 52:word32] = a4_607
	Mem651[a7_618 + 76:word32] = d4_605
// DataOut: a1 a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000377A:
	branch (Mem355[a7_267 + 72:word32] & 2) != 0x00000000 l000037B6
// DataOut: a1 a2 a3 a5 a7 d1 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003782:
	word32 d2_559 = 0
	branch d7_1168 == 0x00000000 l000037B6
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003788:
	word32 a7_571 = a7_267 - 4
	Mem573[a7_571:word32] = a5_152
	Mem582[a7_571 - 4:word32] = (int32) (int16) Mem573[a7_571 + 110 + d2_559:byte]
	word32 d1_584
	word32 a1_585
	branch fn000038B4(dwArg00, dwArg04, out d1_584, out a1_585, out a5_152) != 0xFFFFFFFF l000037AE
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000037AE:
	d2_559 = d2_559 + 0x00000001
	d6_119 = d6_119 + 0x00000001
	branch d7_1168 - d2_559 >u 0x00000000 l00003788
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000037B6:
	word32 d2_409 = Mem355[a7_267 + 102:word32]
	branch d5_1386 - Mem355[a7_267 + 102:word32] <=u 0x00000000 l000037E4
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000037C0:
	word32 a7_537 = a7_267 - 4
	Mem539[a7_537:word32] = a5_152
	Mem542[a7_537 - 0x00000004:word32] = 0x00000030
	word32 d1_543
	word32 a1_544
	branch fn000038B4(dwArg00, dwArg04, out d1_543, out a1_544, out a5_152) != 0xFFFFFFFF l000037DC
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000037DC:
	d2_409 = d2_409 + 0x00000001
	d6_119 = d6_119 + 0x00000001
	branch d5_1386 - d2_409 >u 0x00000000 l000037C0
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d5 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000037E4:
	word32 d2_422 = 0
	branch Mem355[a7_267 + 102:word32] == 0x00000000 l0000381A
// DataOut: a1 a2 a3 a5 a7 d1 d2 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000037EC:
	word32 a4_495 = Mem355[a7_267 + 102:word32]
// DataOut: a2 a3 a4 a5 a7 d2 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000037F0:
	word32 a7_503 = a7_267 - 4
	Mem505[a7_503:word32] = a5_152
	Mem513[a7_503 - 4:word32] = (int32) (int16) Mem505[a3_1380 + d2_422:byte]
	word32 d1_515
	word32 a1_516
	branch fn000038B4(dwArg00, dwArg04, out d1_515, out a1_516, out a5_152) != 0xFFFFFFFF l00003812
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003812:
	d2_422 = d2_422 + 0x00000001
	d6_119 = d6_119 + 0x00000001
	branch a4_495 - d2_422 >u 0x00000000 l000037F0
// DataOut: a1 a2 a3 a4 a5 a7 d1 d2 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000381A:
	d0 = Mem355[a7_267 + 72:word32] & 4
	branch d0 == 0x00000000 l00003850
// DataOut: a1 a2 a5 a7 d0 d1 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003822:
	word32 d2_460 = 0
	branch Mem355[a7_267 + 48:word32] == 0x00000000 l00003850
// DataOut: a1 a2 a5 a7 d0 d1 d2 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000382A:
	word32 a3_465 = Mem355[a7_267 + 48:word32]
// DataOut: a2 a3 a5 a7 d2 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:0 d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000382E:
	word32 a7_472 = a7_267 - 4
	Mem474[a7_472:word32] = a5_152
	Mem477[a7_472 - 0x00000004:word32] = 0x00000020
	word32 d1_479
	word32 a1_480
	d0 = fn000038B4(dwArg00, dwArg04, out d1_479, out a1_480, out a5_152)
	branch d0 != 0xFFFFFFFF l00003848
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003848:
	d2_460 = d2_460 + 0x00000001
	d6_119 = d6_119 + 0x00000001
	branch a3_465 - d2_460 >u 0x00000000 l0000382E
// DataOut: a1 a2 a3 a5 a7 d0 d1 d2 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003850:
	a7_154 = a7_267
	a4_151 = a2_1379
// DataOut: a1 a4 a5 a7 d0 d1 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003874:
	branch Mem0[a4_151:byte] != 0x00 l00002F50
// DataOut: a1 a4 a5 a7 d0 d1 d3 d6
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000387A:
	d0_127 = d6_119
// DataOut: a1 a7 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003844:
	d0_127 = d6_119
// DataOut: a1 a7 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000380E:
	d0_127 = d6_119
// DataOut: a1 a7 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000037D6:
	d0_127 = d6_119
// DataOut: a1 a7 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l000037A8:
	d0_127 = d6_119
// DataOut: a1 a7 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l00003764:
	d0_127 = d6_119
// DataOut: a1 a7 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000371A:
	d0_127 = d6_119
// DataOut: a1 a7 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> d1:<invalid> a0:<invalid> d0:<invalid> a1:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

l0000387C:
	return d0_127
// DataOut: a1 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:<invalid> d3:<invalid> a5:<invalid> a4:<invalid> d6:<invalid> d0:<invalid> a0:<invalid> d1:<invalid> a1:<invalid> d5:<invalid> d4:<invalid> a3:<invalid> d7:<invalid> a2:<invalid> d2:<invalid> a6:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>

fn00002F34_exit:
// DataOut: a1 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d3:d3 a5:a5 a4:a4 d6:d6 d0:<invalid> d2:d2 d4:d4 d5:d5 d7:d7 a2:a2 a3:a3 a6:a6 a0:<invalid> d1:<invalid> a1:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):d2 -108(fp):d3 -104(fp):d4 -100(fp):d5 -96(fp):d6 -92(fp):d7 -88(fp):a2 -84(fp):a3 -80(fp):a4 -76(fp):a5 -72(fp):a6 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -10(fp):<invalid> -6(fp):<invalid> -5(fp):<invalid>



word32 fn000038B4(word32 dwArg04, word32 dwArg08, ptr32 & d1Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d0 d1
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
// Stack args: Stack +0004(32) Stack +0008(32)
fn000038B4_entry:
	*a5Out = a5
// DataOut: a4 a5 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l000038B4:
	word32 d1_38
	Mem19[dwArg08 + 24:word32] = Mem0[dwArg08 + 24:word32] | 2
	word32 v13_21 = Mem19[dwArg08 + 20:word32] - 0x00000001
	Mem22[dwArg08 + 20:word32] = v13_21
	branch v13_21 < 0x00000000 l000038F8
// DataOut: a2 a4 a5 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l000038D0:
	branch dwArg04 != 10 l000038E2
// DataOut: a2 a4 a5 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a2:<invalid> a0:<invalid> d0:2 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l000038D6:
	branch (Mem22[dwArg08 + 24:word32] & 0x00000080) != 0x00000000 l000038F8
// DataOut: a2 a4 a5 d2 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a2:<invalid> a0:<invalid> d0:10 -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l000038F8:
	word32 a1_61
	word32 a5_62
	*d1Out = fn00003910(dwArg04, dwArg08, out a1_61, out a5_62)
// DataOut: a1 a4 a5 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l000038E2:
	word32 a0_77 = Mem22[dwArg08 + 4:word32]
	Mem81[dwArg08 + 4:word32] = a0_77 + 1
	Mem83[a0_77:byte] = (byte) dwArg04
	word32 a1_76
	*a1Out = dwArg08 + 4
	*d1Out = (int32) Mem83[a0_77:byte]
// DataOut: a1 a4 a5 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3
// LocalsOut: fp(32)

l00003906:
	return d1_38
// DataOut: a1 a4 a5 d0 d1 d3 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d2:<invalid> a2:<invalid> a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> a3:<invalid> a5:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3

fn000038B4_exit:
// DataOut: a1 a5 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d2:d2 a2:a2 a0:<invalid> d0:<invalid> d1:<invalid> a1:<invalid> a3:a3 a5:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):d2 -8(fp):a2 -4(fp):a3



word32 fn00003910(word32 dwArg04, word32 dwArg08, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a1 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
// Stack args: Stack +0004(32) Stack +0008(32)
fn00003910_entry:
// DataOut: d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l00003910:
	word32 d0_128
	word32 a1_34
	word32 a5_35
	fn00002BBC(out a1_34, out a5_35)
	branch dwArg08 != 0x00000000 l0000392C
// DataOut: a1 a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l0000392C:
	branch (Mem0[dwArg08 + 24:word32] & 73) == 64 l0000393E
// DataOut: a1 a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000393E:
	branch Mem0[dwArg08 + 28:word32] != 0x00000000 l0000395C
// DataOut: a1 a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00003944:
	branch (Mem0[dwArg08 + 24:word32] & 4) == 0x00000000 l00003954
// DataOut: a1 a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00003954:
	Mem224[dwArg08 + 28:word32] = 0x00000400
// DataOut: a1 a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000394C:
	Mem221[dwArg08 + 28:word32] = 1
// DataOut: a1 a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000395C:
	branch Mem0[dwArg08 + 8:word32] != 0x00000000 l0000399C
// DataOut: a1 a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000399C:
	branch Mem0[dwArg08:word32] == 0x00000000 l000039F6
// DataOut: a1 a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000039F6:
	d0_128 = 0
// DataOut: a1 a5 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000039A0:
	word32 d0_168 = Mem0[dwArg08 + 24:word32] & 0x00000080
	branch d0_168 == 0x00000000 l000039CC
// DataOut: a1 a2 a5 d0 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000039AC:
	d0_168 = 10
	branch dwArg04 != 10 l000039CC
// DataOut: a1 a2 a5 d0 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000039CC:
	word32 d4_176 = Mem0[dwArg08 + 4:word32] - Mem0[dwArg08 + 8:word32]
	execPrivate3()
	branch d4_176 - d0_168 == 0x00000000 l000039FA
// DataOut: a1 a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000039EA:
	Mem188[dwArg08 + 24:word32] = Mem0[dwArg08 + 24:word32] | 16
	d0_128 = -1
// DataOut: a1 a5 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000039B2:
	word32 a0_196 = Mem0[dwArg08 + 4:word32]
	Mem200[dwArg08 + 4:word32] = a0_196 + 1
	Mem202[a0_196:byte] = (byte) dwArg04
	word32 a1_207
	word32 a5_208
	d0_128 = fn00002B28(dwArg08, out a1_207, out a5_208)
// DataOut: a1 a5 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:10 d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00003962:
	word32 d4_137
	branch (Mem0[dwArg08 + 24:word32] & 0x00000080) == 0x00000000 l00003976
// DataOut: a1 a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00003976:
	d4_137 = 1
// DataOut: a1 a2 a5 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00003972:
	d4_137 = 2
// DataOut: a1 a2 a5 d4 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00003978:
	word32 d1_145
	word32 a1_146
	word32 d0_147 = fn00002718(d4_137 + Mem0[dwArg08 + 28:word32], out d1_145, out a1_146)
	branch d0_147 != 0x00000000 l00003992
// DataOut: a1 a2 a3 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00003992:
	Mem157[dwArg08 + 8:word32] = d0_147 + 1
// DataOut: a2 a5 d5 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l000039FA:
	Mem114[dwArg08 + 24:word32] = Mem0[dwArg08 + 24:word32] | 2
	Mem118[Mem114[dwArg08 + 8:word32]:byte] = (byte) dwArg04
	word32 a1_119 = Mem118[dwArg08 + 8:word32]
	Mem122[dwArg08 + 4:word32] = a1_119 + 1
	Mem127[dwArg08 + 20:word32] = Mem122[dwArg08 + 28:word32] - 0x00000001
	word32 a1_120
	*a1Out = a1_119 + 1
	d0_128 = 0
// DataOut: a1 a5 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a0:<invalid> d4:<invalid> d2:<invalid> d1:<invalid> a6:<invalid> d3:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l0000398C:
	d0_128 = -1
// DataOut: a1 a5 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00003938:
	d0_128 = -1
// DataOut: a1 a5 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00003926:
	d0_128 = -1
// DataOut: a1 a5 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d1:<invalid> a4:<invalid> a5:<invalid> a1:<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6
// LocalsOut: fp(32)

l00003A1E:
	return d0_128
// DataOut: a1 a5 d0 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 36 d5:<invalid> a2:<invalid> d0:<invalid> d6:64 d1:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> a3:<invalid> a4:<invalid> d2:<invalid> a6:<invalid> d3:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6

fn00003910_exit:
// DataOut: a1 a5 d0
// DataOut (flags): 
// SymbolicIn: a7:fp d5:d5 a2:a2 d0:<invalid> d2:d2 d3:d3 d4:d4 d6:d6 a3:a3 a4:a4 a6:a6 d1:<invalid> a1:<invalid> a0:<invalid> a5:<invalid> -40(fp):<invalid> -36(fp):d2 -32(fp):d3 -28(fp):d4 -24(fp):d5 -20(fp):d6 -16(fp):a2 -12(fp):a3 -8(fp):a4 -4(fp):a6



word32 fn00003A24(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn00003A24_entry:
// DataOut: a2 a3 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00003A24:
	word32 d0_114
	word32 d1_18
	*d1Out = dwArg08
	word32 d3_122 = dwArg10
	branch dwArg0C != 0x00000000 l00003A7A
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00003A7A:
	branch dwArg04 - dwArg0C >=u 0x00000000 l00003A84
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003A84:
	word32 d4_140 = 24
	word32 d6_141 = __rol(dwArg0C, 0x00000008)
	branch (byte) d6_141 != 0x00 l00003AA2
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003A8E:
	d4_140 = 16
	d6_141 = __rol(d6_141, 0x00000008)
	branch (byte) d6_141 != 0x00 l00003AA2
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:24 -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003A96:
	d4_140 = 8
	d6_141 = __rol(d6_141, 0x00000008)
	branch (byte) d6_141 != 0x00 l00003AA2
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:16 -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003A9E:
	d4_140 = 0
	d6_141 = DPB(d6_141, (byte) dwArg0C, 0)
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:8 -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003AA2:
	word32 d4_157 = DPB(d4_140, (byte) d4_140 + Mem0[0x00003DCC + (int32) ((word16) d6_141 & 0x00FF):byte], 0)
	word32 d5_159 = 32 - d4_157
	branch d5_159 != 0x00000000 l00003AC2
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003AC2:
	word32 d1_186
	word32 d2_187
	word32 d0_188 = fn00003B28(dwArg04 >>u d4_157, dwArg04 << d5_159 | dwArg08 >>u d4_157, dwArg0C << d5_159 | dwArg10 >>u d4_157, out d1_186, out d2_187)
	word32 d3_175 = dwArg10 << d5_159
	word32 d5_197 = __swap(d0_188)
	word32 d6_199 = __swap(d3_175)
	word32 d3_198 = d3_175 *u (word16) d5_197
	word32 d2_203 = __swap(d0_188 *u (word16) d3_175)
	word16 v31_204 = (word16) (d2_203 + d3_198)
	word32 d4_200 = d0_188 *u (word16) d6_199
	word16 v34_210 = (word16) (DPB(d2_203, v31_204, 0) + d4_200)
	word32 d2_216 = __swap(DPB(d2_203, v34_210, 0))
	word32 d5_201 = d5_197 *u (word16) d6_199
	word32 d6_183 = dwArg08 << d5_159
	word32 d1_192
	*d1Out = d0_188
	word32 v39_225 = d1_186 - ((__swap(DPB(d3_198, 0x0000, 0)) + __swap(DPB(d4_200, 0x0000, 0))) + DPB(d5_201, ((word16) d5_201 + (v31_204 <u 0x0000)) + (v34_210 <u 0x0000), 0))
	branch v39_225 <u 0x00000000 l00003B1E
// DataOut: a0 a2 a3 a5 d1 d2
// DataOut (flags): Z
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DCC d5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003B18:
	branch v39_225 != 0x00000000 l00003B20
// DataOut: a0 a2 a3 a5 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:00003DCC d5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003B1A:
	branch d6_183 - d2_216 >=u 0x00000000 l00003B20
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:00003DCC d5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003B1E:
	word32 d1_238
	*d1Out = d0_188 - 0x00000001
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:00003DCC d5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003AB6:
	branch dwArg0C - dwArg04 <u 0x00000000 l00003ABE
// DataOut: a0 a2 a3 a5 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DCC d5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003ABA:
	branch dwArg10 - dwArg08 >u 0x00000000 l00003A7E
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DCC d5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003ABE:
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DCC d5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003A7E:
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DCC d5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003A3C:
	branch dwArg04 - dwArg10 >=u 0x00000000 l00003A4E
// DataOut: a0 a2 a3 a5 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003A4E:
	branch dwArg10 != 0x00000000 l00003A5A
// DataOut: a0 a2 a3 a5 d0 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003A52:
	d3_122 = (int32) (uint16) (1 /u (uint16) dwArg10)
// DataOut: a0 a2 a3 a5 d0 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003A5A:
	word32 d1_103
	word32 d2_104
	word32 d0_105 = fn00003B28(0, dwArg04, d3_122, out d1_103, out d2_104)
	word32 d1_110
	word32 d2_111
	word32 d1_113
	*d1Out = fn00003B28(d1_103, dwArg08, d2_104, out d1_110, out d2_111)
	d0_114 = d0_105
// DataOut: a2 a3 a5 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003A40:
	word32 d1_79
	word32 d2_80
	word32 d1_82
	*d1Out = fn00003B28(dwArg04, dwArg08, dwArg10, out d1_79, out d2_80)
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003B20:
	d0_114 = 0
// DataOut: a2 a3 a5 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DCC d5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6
// LocalsOut: fp(32)

l00003B22:
	return d0_114
// DataOut: a2 a3 a5 d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 20 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> a1:<invalid> d6:<invalid> d5:<invalid> -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6

fn00003A24_exit:
// DataOut: d0 d1
// DataOut (flags): 
// SymbolicIn: a7:fp d1:<invalid> d0:<invalid> a0:<invalid> d3:d3 d2:d2 d4:d4 a1:<invalid> d5:d5 d6:d6 -20(fp):d2 -16(fp):d3 -12(fp):d4 -8(fp):d5 -4(fp):d6



word32 fn00003B28(word32 d0, word32 d1, word32 d2, ptr32 & d1Out, ptr32 & d2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0 d1 d2
// LiveOut: d0 d1 d2
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn00003B28_entry:
	*d2Out = d2
	*d1Out = d1
// DataOut: a2 a3 a5 d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00003B28:
	word32 d7_12 = d2
	branch d2 == 0x00000000 l00003B42
// DataOut: a2 a3 a5 d0 d1 d2 d7
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00003B30:
	word32 d6_149 = d1
	word32 d5_148 = d0
	branch d0 != 0x00000000 l00003B50
// DataOut: a2 a3 a5 d0 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d7:d2 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003B50:
	word32 d2_95 = __swap(d2)
	branch (word16) d2_95 != 0x0000 l00003B78
// DataOut: a2 a3 a5 d0 d1 d2 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d7:d2 d6:d1 d5:d0 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003B78:
	byte bLoc26_137 = 0x00
	word32 d0_139 = 0
	branch d2 < 0x00000000 l00003B94
// DataOut: a2 a3 a5 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d7:d2 d6:d1 d5:d0 d2:<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0)

l00003B8A:
	d6_149 = d6_149 * 0x00000002
	d0_139 = DPB(d0_139, (word16) d0_139 + 0x0001, 0)
	d5_148 = d5_148 * 0x00000002 + (d6_149 <u 0x00000000)
	d7_12 = d7_12 * 0x00000002
	branch d7_12 > 0x00000000 l00003B8A
// DataOut: a2 a3 a5 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:0 d0:<invalid> -38(fp):0x00 -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0)

l00003B94:
	word16 v35_151 = (word16) d0_139
// DataOut: a2 a3 a5 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:0 d0:<invalid> -38(fp):0x00 -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003B96:
	word32 d1_178
	word32 d2_172 = __swap(d5_148)
	word32 d3_173 = __swap(d7_12)
	branch (word16) (d2_172 - d3_173) != 0x0000 l00003BA8
// DataOut: a2 a3 a5 d3 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:0 d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003BA8:
	d1_178 = __swap(DPB(__swap(DPB(DPB(d5_148, (uint16) (d5_148 % (uint16) d3_173), 16), (uint16) (d5_148 /u (uint16) d3_173), 0)), 0x0000, 0))
// DataOut: a2 a3 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:0 d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003BA2:
	d1_178 = 65535
// DataOut: a2 a3 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:0 d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003BB2:
	word32 d6_181 = __swap(DPB(d6_149, 0x0000, 0))
// DataOut: a1 a2 a3 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003BB8:
	word32 d4_197 = __swap(d5_148 - __swap(d7_12) *u (word16) d1_178)
	word32 d2_191 = d1_178 *u (word16) d7_12
	word32 d4_201 = DPB(d4_197, (word16) d6_181, 0)
	branch (word16) d4_197 != 0x0000 l00003BD8
// DataOut: a1 a2 a3 a5 d1 d2 d4 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003BD0:
	branch d2_191 - d4_201 <=u 0x00000000 l00003BD8
// DataOut: a1 a2 a3 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003BD8:
	word32 d6_210 = __swap(d1_178)
	word32 d3_216 = __swap(d6_210)
	word32 d4_218 = __swap(d7_12)
	word32 d5_217 = d7_12 *u (word16) d3_216
	word32 d6_222 = __swap(d6_210 *u (word16) d7_12)
	word16 v45_223 = (word16) (d6_222 + d5_217)
	word32 d2_219 = d6_210 *u (word16) d4_218
	word16 v47_229 = (word16) (DPB(d6_222, v45_223, 0) + d2_219)
	word32 d3_220 = d3_216 *u (word16) d4_218
	word32 d6_246 = d6_149 - __swap(DPB(d6_222, v47_229, 0))
	word32 d5_249 = d5_148 - ((__swap(DPB(d5_217, 0x0000, 0)) + __swap(DPB(d2_219, 0x0000, 0))) + DPB(d3_220, ((word16) d3_220 + (v45_223 <u 0x0000)) + (v47_229 <u 0x0000), 0)) - (d6_246 <u 0x00000000)
	branch d5_249 >=u 0x00000000 l00003C30
// DataOut: a2 a3 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003C1A:
	d6_246 = d6_246 + DPB(__swap(d7_12), 0x0000, 0)
	d1_178 = d1_178 - 0x00000001
	d5_249 = d5_249 + (d6_246 <u 0x00000000) + __swap(DPB(d7_12, 0x0000, 0))
// DataOut: a2 a3 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003C30:
	branch bLoc26_137 != 0x00 l00003C4C
// DataOut: a2 a3 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0028(16)

l00003C4C:
	word32 d6_282 = __swap(DPB(d6_246, (word16) d5_249, 0))
	d0 = DPB(dwLoc24, (word16) d1_178, 0)
	word32 d5_283 = __swap(d5_249)
	branch v35_151 == 0x0000 l00003C66
// DataOut: a2 a3 a5 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32)

l00003C5C:
	word32 d7_309 = DPB(d7_12, v35_151 - 0x0001, 0)
// DataOut: a2 a3 a5 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32)

l00003C5E:
	d5_283 = d5_283 >>u 0x00000001
	word16 v62_320 = SLICE(d7_309, word16, 0)
	d6_282 = __rcr(d6_282, 0x00000001, (bool) cond(d5_283))
	d7_309 = DPB(d7_309, v62_320 - 1, 0)
	branch v62_320 != 0x0000 l00003C5E
// DataOut: a2 a3 a5 d0 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32)

l00003C66:
	word32 d1_295
	*d1Out = d6_282
	word32 d2_298
	*d2Out = d2_95
// DataOut: a2 a3 a5 d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003C36:
	word32 d5_266 = __swap(d5_249)
	word32 d6_267 = __swap(d6_246)
	d5_148 = DPB(d5_266, (word16) d6_267, 0)
	d6_149 = DPB(d6_267, 0x0000, 0)
	bLoc26_137 = true
// DataOut: a2 a3 a5 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:0 a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003BD4:
	d1_178 = d1_178 - 0x00000001
// DataOut: a1 a2 a3 a5 d1 d5 d6 d7
// DataOut (flags): 
// SymbolicIn: a7:fp - 40 d7:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d1:<invalid> d0:<invalid> d3:<invalid> a1:<invalid> d4:<invalid> a0:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32) Local -0020(32) Local -0026(0) Local -0028(16)

l00003B56:
	word32 d0_101 = __swap(d0)
	word32 d1_102 = __swap(d1)
	word32 d0_104 = DPB(d0_101, (word16) d1_102, 0)
	word32 d0_113 = DPB(DPB(d0_104, (uint16) (d0_104 % (uint16) d2), 16), (word16) __swap(d1_102), 0)
	word32 d2_120 = DPB(__swap((int32) (uint16) (d0_104 /u (uint16) d2)), (uint16) (d0_113 /u (uint16) d2), 0)
	*d2Out = d2_120
	word32 d1_123
	*d1Out = __swap(DPB(DPB(d0_113, (uint16) (d0_113 % (uint16) d2), 16), 0x0000, 0))
	d0 = d2_120
// DataOut: a2 a3 a5 d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d7:d2 d6:d1 d5:d0 d2:<invalid> -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003B36:
	branch d1 == 0x00000000 l00003C6E
// DataOut: a2 a3 a5 d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d7:d2 d6:d1 d5:d0 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003B3C:
	branch d2 - d1 >u 0x00000000 l00003C6E
// DataOut: a2 a3 a5 d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d7:d2 d6:d1 d5:d0 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003B42:
	word32 d1_64
	d0 = fn0000257E(d1, d2, out d1_64)
// DataOut: a2 a3 a5 d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d7:d2 d6:d1 d5:d0 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003C6E:
	return d0
// DataOut: a2 a3 a5 d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:fp - 12 d7:<invalid> d0:<invalid> d1:<invalid> d6:<invalid> d5:<invalid> d2:<invalid> d3:d3 a1:a1 d4:d4 a0:a0 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7

fn00003B28_exit:
// DataOut: d0 d1 d2
// DataOut (flags): 
// SymbolicIn: a7:fp d7:d7 d0:<invalid> d1:<invalid> d6:d6 d5:d5 d2:<invalid> d3:d3 a1:a1 d4:d4 a0:a0 -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):d3 -24(fp):d4 -20(fp):a0 -16(fp):a1 -12(fp):d5 -8(fp):d6 -4(fp):d7



word32 fn00003C74(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn00003C74_entry:
// DataOut: a2 a3 a5
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l00003C74:
	word32 d1_137 = dwArg08
	word32 d3_104 = dwArg10
	branch dwArg0C != 0x00000000 l00003CC6
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3
// DataOut (flags): 
// SymbolicIn: a7:fp
// LocalsOut: fp(32)

l00003CC6:
	branch dwArg04 - dwArg0C <u 0x00000000 l00003D80
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003CCC:
	word32 d4_110 = 24
	word32 d6_111 = __rol(dwArg0C, 0x00000008)
	branch (byte) d6_111 != 0x00 l00003CEA
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003CD6:
	d4_110 = 16
	d6_111 = __rol(d6_111, 0x00000008)
	branch (byte) d6_111 != 0x00 l00003CEA
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:24 -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003CDE:
	d4_110 = 8
	d6_111 = __rol(d6_111, 0x00000008)
	branch (byte) d6_111 != 0x00 l00003CEA
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:16 -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003CE6:
	d4_110 = 0
	d6_111 = DPB(d6_111, (byte) dwArg0C, 0)
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3 d4 d6
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:8 -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003CEA:
	word32 d4_127 = DPB(d4_110, (byte) d4_110 + Mem0[0x00003DCC + (int32) ((word16) d6_111 & 0x00FF):byte], 0)
	word32 d5_129 = 32 - d4_127
	branch d5_129 != 0x00000000 l00003D0C
// DataOut: a0 a2 a3 a5 d0 d1 d2 d3 d4 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003D0C:
	word32 d1_160
	word32 d2_161
	word32 d0_162 = fn00003B28(dwArg04 >>u d4_127, dwArg04 << d5_129 | dwArg08 >>u d4_127, dwArg0C << d5_129 | dwArg10 >>u d4_127, out d1_160, out d2_161)
	word32 d3_149 = dwArg10 << d5_129
	word32 d7_171 = __swap(d0_162)
	word32 d6_173 = __swap(d3_149)
	word32 d3_172 = d3_149 *u (word16) d7_171
	word32 d2_177 = __swap(d0_162 *u (word16) d3_149)
	word16 v33_178 = (word16) (d2_177 + d3_172)
	word32 d4_174 = d0_162 *u (word16) d6_173
	word16 v35_184 = (word16) (DPB(d2_177, v33_178, 0) + d4_174)
	word32 d2_190 = __swap(DPB(d2_177, v35_184, 0))
	word32 d7_175 = d7_171 *u (word16) d6_173
	word32 d6_157 = dwArg08 << d5_129
	word32 d3_196 = __swap(DPB(d3_172, 0x0000, 0)) + __swap(DPB(d4_174, 0x0000, 0)) + DPB(d7_175, ((word16) d7_175 + (v33_178 <u 0x0000)) + (v35_184 <u 0x0000), 0)
	word32 v40_199 = d1_160 - d2_190
	branch v40_199 <u 0x00000000 l00003D68
// DataOut: a0 a1 a2 a3 a5 d0 d1 d2 d3 d5
// DataOut (flags): Z
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DCC d5:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003D62:
	branch v40_199 != 0x00000000 l00003D6C
// DataOut: a0 a1 a2 a3 a5 d0 d1 d2 d3 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003D64:
	branch d6_157 - d3_196 >=u 0x00000000 l00003D6C
// DataOut: a0 a1 a2 a3 a5 d0 d1 d2 d3 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003D68:
	d3_196 = d3_196 - d3_149
	d2_190 = d2_190 - d2_161 - (d3_196 <u 0x00000000)
// DataOut: a0 a2 a3 a5 d1 d2 d3 d5
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003D6C:
	word32 d6_215 = d6_157 - d3_196
	d1_137 = d1_160 - d2_190 - (d6_215 <u 0x00000000) << 32 - d5_129 | d6_215 >>u d5_129
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:0 d4:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003CFE:
	branch dwArg0C - dwArg04 <u 0x00000000 l00003D06
// DataOut: a2 a3 a5 d0 d1 d2 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DCC d5:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003D02:
	branch dwArg10 - dwArg08 >u 0x00000000 l00003D80
// DataOut: a2 a3 a5 d0 d1 d2 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DCC d5:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003D06:
	d1_137 = dwArg08 - dwArg10
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d6:<invalid> d4:<invalid> a1:00003DCC d5:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003C8C:
	branch dwArg04 - dwArg10 >=u 0x00000000 l00003C9E
// DataOut: a0 a2 a3 a5 d0 d1 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003C9E:
	branch dwArg10 != 0x00000000 l00003CAA
// DataOut: a0 a2 a3 a5 d0 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003CA2:
	d3_104 = (int32) (uint16) (1 /u (uint16) dwArg10)
// DataOut: a0 a2 a3 a5 d0 d3
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003CAA:
	word32 d1_87
	word32 d2_88
	fn00003B28(0, dwArg04, d3_104, out d1_87, out d2_88)
	word32 d2_94
	fn00003B28(d1_87, dwArg08, d2_88, out d1_137, out d2_94)
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003C90:
	word32 d2_64
	fn00003B28(dwArg04, dwArg08, dwArg10, out d1_137, out d2_64)
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7
// LocalsOut: fp(32)

l00003D80:
	return d1_137
// DataOut: a2 a3 a5 d1
// DataOut (flags): 
// SymbolicIn: a7:fp - 24 d1:<invalid> d0:<invalid> a0:<invalid> d3:<invalid> d2:<invalid> d4:<invalid> d6:<invalid> a1:<invalid> d5:<invalid> d7:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7

fn00003C74_exit:
// DataOut: d1
// DataOut (flags): 
// SymbolicIn: a7:fp d1:<invalid> d0:<invalid> a0:<invalid> d3:d3 d2:d2 d4:d4 d5:d5 d6:d6 d7:d7 a1:<invalid> -24(fp):d2 -20(fp):d3 -16(fp):d4 -12(fp):d5 -8(fp):d6 -4(fp):d7



