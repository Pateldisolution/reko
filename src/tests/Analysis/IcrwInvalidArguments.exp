fp:fp
    def:  def fp
    uses: esp_1 = fp
esp_1: orig: esp
    def:  esp_1 = fp
    uses: esp_7 = esp_1 + 4
          eax_8 = Mem0[ecx_6:word32](ecx_6, Mem10[esp_1:int32])
a:Stack +0004
    def:  def a
    uses: a_3 = a
          ecx_6 = Mem0[a:word32]
a_3: orig: a
    def:  a_3 = a
    uses: eax_4 = a_3
eax_4: orig: eax
    def:  eax_4 = a_3
Mem0:Global memory
    def:  def Mem0
    uses: ecx_6 = Mem0[a:word32]
          eax_8 = Mem0[ecx_6:word32](ecx_6, Mem10[esp_1:int32])
ecx_6: orig: ecx
    def:  ecx_6 = Mem0[a:word32]
    uses: eax_8 = Mem0[ecx_6:word32](ecx_6, Mem10[esp_1:int32])
          eax_8 = Mem0[ecx_6:word32](ecx_6, Mem10[esp_1:int32])
esp_7: orig: esp
    def:  esp_7 = esp_1 + 4
eax_8: orig: eax
    def:  eax_8 = Mem0[ecx_6:word32](ecx_6, Mem10[esp_1:int32])
ecx_9: orig: ecx
    def:  ecx_9 = <invalid>
Mem10: orig: Mem0
    uses: eax_8 = Mem0[ecx_6:word32](ecx_6, Mem10[esp_1:int32])
// test
// Return size: 4
void test(str * a)
fn0C00_0000_entry:
	def fp
	def a
	def Mem0
	esp_1 = fp
	// succ:  l0C00_0000
l0C00_0000:
	a_3 = a
	eax_4 = a_3
	ecx_6 = Mem0[a:word32]
	eax_8 = Mem0[ecx_6:word32](ecx_6, Mem10[esp_1:int32])
	ecx_9 = <invalid>
	esp_7 = esp_1 + 4
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

