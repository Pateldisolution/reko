// fn0C00_0000
// Return size: 2
// Mem0:Global memory
// fp:fp
// sp:sp
// cx:cx
// ss:ss
// cl:cl
// ax:ax
// SZO:Flags
// C:Flags
// al:al
// SCZO:Flags
// Z:Flags
// return address size: 2
void fn0C00_0000()
fn0C00_0000_entry:
	sp = fp
	// succ:  l0C00_0000
l0C00_0000:
	sp = sp - 2
	Mem0[ss:sp:word16] = cx
	cl = 0x03
	cx = DPB(cx, cl, 0) (alias)
	ax = ax ^ ax
	al = (byte) ax (alias)
	SZO = cond(ax)
	Z = (bool) SZO (alias)
	C = false
	SCZO = DPB(SCZO, C, 0) (alias)
	// succ:  l0C00_0005
l0C00_0005:
	al = al + cl
	ax = DPB(ax, al, 0) (alias)
	SCZO = cond(al)
	C = (bool) SCZO (alias)
	cl = cl - 0x01
	cx = DPB(cx, cl, 0) (alias)
	SZO = cond(cl)
	Z = (bool) SZO (alias)
	SCZO = SZO (alias)
	branch Test(NE,Z) l0C00_0005
	// succ:  l0C00_000B l0C00_0005
l0C00_000B:
	cx = Mem0[ss:sp:word16]
	cl = (byte) cx (alias)
	sp = sp + 2
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
