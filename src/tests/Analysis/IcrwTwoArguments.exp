fp:fp
    def:  def fp
    uses: esp_1 = fp
          esp_7 = fp - 4
          esp_9 = fp - 8
esp_1: orig: esp
    def:  esp_1 = fp
a:Stack +0004
    def:  def a
    uses: a_3 = a
          ecx_6 = Mem0[a:word32]
a_3: orig: a
    def:  a_3 = a
    uses: eax_4 = a_3
eax_4: orig: eax
    def:  eax_4 = a_3
Mem0:Global memory
    def:  def Mem0
    uses: ecx_6 = Mem0[a:word32]
          Mem0[ecx_6 + 0x00000008:word32](Mem14[esp_9:int32], Mem15[esp_9 + 4:int32])
ecx_6: orig: ecx
    def:  ecx_6 = Mem0[a:word32]
    uses: Mem0[ecx_6 + 0x00000008:word32](Mem14[esp_9:int32], Mem15[esp_9 + 4:int32])
esp_7: orig: esp
    def:  esp_7 = fp - 4
dwLoc04_8: orig: dwLoc04
    def:  dwLoc04_8 = 0x0000000B
esp_9: orig: esp
    def:  esp_9 = fp - 8
    uses: esp_11 = esp_9 + 8
          Mem0[ecx_6 + 0x00000008:word32](Mem14[esp_9:int32], Mem15[esp_9 + 4:int32])
          Mem0[ecx_6 + 0x00000008:word32](Mem14[esp_9:int32], Mem15[esp_9 + 4:int32])
dwLoc08_10: orig: dwLoc08
    def:  dwLoc08_10 = 0x0000000A
esp_11: orig: esp
    def:  esp_11 = esp_9 + 8
eax_12: orig: eax
    def:  eax_12 = <invalid>
ecx_13: orig: ecx
    def:  ecx_13 = <invalid>
Mem14: orig: Mem0
    uses: Mem0[ecx_6 + 0x00000008:word32](Mem14[esp_9:int32], Mem15[esp_9 + 4:int32])
Mem15: orig: Mem0
    uses: Mem0[ecx_6 + 0x00000008:word32](Mem14[esp_9:int32], Mem15[esp_9 + 4:int32])
// test
// Return size: 4
void test(str * a)
fn0C00_0000_entry:
	def fp
	def a
	def Mem0
	esp_1 = fp
	// succ:  l0C00_0000
l0C00_0000:
	a_3 = a
	eax_4 = a_3
	ecx_6 = Mem0[a:word32]
	esp_7 = fp - 4
	dwLoc04_8 = 0x0000000B
	esp_9 = fp - 8
	dwLoc08_10 = 0x0000000A
	Mem0[ecx_6 + 0x00000008:word32](Mem14[esp_9:int32], Mem15[esp_9 + 4:int32])
	ecx_13 = <invalid>
	eax_12 = <invalid>
	esp_11 = esp_9 + 8
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

